{"version":3,"sources":["contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","components/Layout/Row.tsx","config/constants/contracts.ts","utils/addressHelpers.ts","state/mint/actions.ts","state/swap/actions.ts","hooks/useActiveWeb3React.ts","components/Layout/Column.tsx","utils/bigNumber.ts","utils/formatBalance.ts","config/constants/tokens.ts","utils/index.ts","config/constants/index.ts","config/constants/multicall/index.ts","hooks/useContract.ts","components/Balance.tsx","utils/contractHelpers.ts","config/constants/types.ts","utils/multicall.ts","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","state/user/hooks/index.tsx","utils/wrappedCurrency.ts","state/multicall/hooks.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/types.ts","views/Pools/helpers.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","config/index.ts","config/constants/lists.ts","state/lists/hooks.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/lists/actions.ts","state/user/actions.ts","components/QuestionHelper/index.tsx","utils/prices.ts","state/multicall/actions.ts","state/predictions/helpers.ts","state/predictions/queries.ts","state/farms/hooks.ts","config/constants/pools.ts","hooks/useToast.ts","utils/providers.ts","state/wallet/hooks.ts","config/constants/endpoints.ts","hooks/useTheme.ts","components/Card/index.tsx","config/localization/languages.ts","components/UnlockButton.tsx","state/transactions/hooks.tsx","state/swap/hooks.ts","hooks/useParsedQueryString.ts","state/transactions/actions.ts","utils/compoundApyHelpers.ts","state/lottery/helpers.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","hooks/usePairs.ts","hooks/useDebounce.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","utils/isZero.ts","state/block/hooks.ts","config/constants/nfts.ts","utils/wallet.ts","utils/currencyId.ts","state/application/hooks.ts","utils/uriToHttp.ts","state/user/hooks/helpers.ts","hooks/useRefresh.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/Tags.tsx","utils/web3React.ts","components/App/Settings/TransactionSettings.tsx","components/App/Settings/SettingsModal.tsx","components/App/Settings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","hooks/useAuth.ts","state/block/index.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","components/Loader/CircleLoader.tsx","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","config/constants/campaigns.ts","components/Loader/Dots.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/user/hooks/useUserAddedTokens.ts","state/teams/helpers.ts","state/profile/hooks.ts","components/Layout/Container.tsx","config/constants/meta.ts","components/Layout/Page.tsx","utils/collectibles.ts","components/TokenImage/index.tsx","hooks/usePreviousValue.ts","components/Menu/Footer.tsx","components/Menu/SubNav.tsx","views/Page.tsx","config/constants/ifo.ts","components/ApyCalculatorModal/index.tsx","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/application/actions.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","state/pools/helpers.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","hooks/usePersistState.ts","state/burn/actions.ts","utils/achievements.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","hooks/useLastUpdated.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","state/collectibles/index.ts","components/Loader/PageLoader.tsx","utils/getTimePeriods.ts","components/PositionCard/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","utils/apr.ts","state/lottery/getUserTicketsData.ts","routerHistory.ts","state/achievements/helpers.ts","state/achievements/index.ts","components/PageHeader/PageHeader.tsx","utils/farmHelpers.ts","components/Layout/Flex.tsx","components/Select/Select.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","views/Pools/components/ToggleView/ToggleView.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","state/pools/hooks.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/TokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["LS_KEY","fetchLocale","locale","a","fetch","process","response","json","data","getLanguageCodeFromLS","localStorage","getItem","EN","initialState","isFetching","currentLanguage","languageMap","Map","set","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","languages","state","setState","useEffect","enLocale","get","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","useCallback","key","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","getAddress","address","ChainId","MAINNET","getCakeAddress","tokens","cake","getMasterChefAddress","addresses","getMulticallAddress","getWbnbAddress","wbnb","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","Field","typeInput","createAction","resetMintState","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","Column","ColumnCenter","AutoColumn","BIG_ZERO","BigNumber","BIG_ONE","BIG_NINE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","SCC","Token","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","bnb","symbol","projectLink","shib","fork","chess","high","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","BASES_TO_CHECK_TRADES_AGAINST","WETH","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","MULTICALL_NETWORKS","useIfoV1Contract","useMemo","getIfoV1Contract","useIfoV2Contract","getIfoV2Contract","useERC20","getBep20Contract","useERC721","getErc721Contract","useCake","getCakeContract","useBunnyFactory","getBunnyFactoryContract","useProfile","getProfileContract","useLotteryV2Contract","getLotteryV2Contract","useMasterchef","getMasterchefContract","useSousChef","id","getSouschefContract","usePointCenterIfoContract","getPointCenterIfoContract","useClaimRefundContract","getClaimRefundContract","useTradingCompetitionContract","getTradingCompetitionContract","useEasterNftContract","getEasterNftContract","useCakeVaultContract","getCakeVaultContract","usePredictionsContract","getPredictionsContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","MULTICALL_ABI","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","duration","separator","abi","signer","signerOrProvider","bep20Abi","erc721Abi","ifoV1Abi","ifoV2Abi","config","poolsConfig","find","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","pointCenterIfo","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","lotteryV2Abi","masterChef","claimRefundAbi","tradingCompetitionAbi","easterNftAbi","cakeVaultAbi","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","PoolIds","NftType","LotteryStatus","multicall","calls","multi","itf","utils","Interface","calldata","map","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","reduce","newMap","token","tokenMap_","useAllTokens","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","loading","useCurrency","currencyId","isBNB","toUpperCase","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","muteAudio","unmuteAudio","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","updateUserSlippageTolerance","useUserTransactionTTL","userDeadline","deadline","updateUserDeadline","useAddUserToken","addSerializedToken","serializedToken","serializeToken","useRemoveUserAddedToken","removeSerializedToken","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","pinnedPairs","generatedPairs","flatMap","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","memo","sorted","sortsBefore","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","blocksPerFetch","Infinity","useCallsData","callResults","serializedCallKeys","JSON","stringify","c","toCallKey","sort","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","callData","useBlockNumber","useMultipleContractSingleData","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","summary","approval","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","INPUT","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","performanceFee","isAutoVault","earningTokenPrice","apr","isHighValueToken","Math","round","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","createReducer","builder","addCase","updateBlockNumber","action","payload","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","lastUpdateVersionTimestamp","removeSerializedPair","tokenAAddress","tokenBAddress","toggleTheme","now","transactions","hash","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","pools","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","application","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useAppDispatch","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","SCC_PER_BLOCK","BLOCKS_PER_YEAR","SCC_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","sortByListPriority","urlA","urlB","first","Number","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","method","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","isLoading","lastDepositedTime","lastUserActionTime","userDataLoaded","cakeVault","fees","userData","fetchPoolsPublicDataAsync","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","parseFloat","tokenPerBlock","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","createAsyncThunk","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","Result","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimed","claimedHash","totalBets","totalBNB","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","bets","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getBetHistory","where","skip","request","GRAPH_API_PREDICTION","gql","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","intervalBlocks","minBetAmount","paused","bufferBlocks","rewardRate","status","PAUSED","getRoundsData","makeFutureRoundResponse","rewardBaseCalAmount","rewardAmount","oracleCalled","makeRoundData","rounds","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","parseBigNumberObj","usePollFarmsData","includeArchive","useRefresh","slowRefresh","pids","farmsConfig","nonArchivedFarms","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","fastRefresh","useFarms","useFarmFromPid","f","useFarmUser","farm","tokenBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","busdPrice","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakeBnbFarm","CORE","harvest","sortOrder","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","JsonRpcProvider","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","useTheme","theme","StyledThemeContext","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","code","languageList","UnlockButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","useAllTransactions","isTransactionRecent","allTransactions","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","parseInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","priceHelperLps","lpAddresses","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","isActive","points","profileContract","getUsername","ok","username","getProfile","hasRegistered","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","avatar","images","sm","domain","secure","expires","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","getTokenLogoURL","StyledLogo","uriLocations","isZero","hexNumberString","usePollBlockNumber","interval","setInterval","getBlockNumber","setBlock","clearInterval","useBlock","useInitialBlock","initialBlock","IPFS_GATEWAY","nftSources","PANSCC","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","identifier","variationId","video","webm","mp4","blur","setupNetwork","window","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","uriToHttp","uri","substr","RefreshContext","fast","slow","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","fontSize","bold","small","textAlign","TransactionSubmittedContent","onDismiss","currencyToAdd","strokeWidth","external","href","isMetaMask","variant","mt","asset","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","message","justifyContent","pt","TransactionConfirmationModal","title","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","methodArgs","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","lte","CoreTag","outline","startIcon","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","rawSlippage","setRawSlippage","setDeadline","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","RiskyLow","RiskyHigh","InvalidInput","flexWrap","gridTemplateColumns","gridGap","mb","scale","placeholder","onBlur","onChange","e","target","isWarning","isSuccess","paddingTop","pl","SettingsModal","showConfirmExpertModal","setShowConfirmExpertModal","setUserslippageTolerance","ttl","setTtl","toggleExpertMode","setSingleHopOnly","onBack","maxWidth","prompt","checked","alignItems","SettingsTab","useModal","onPresentSettingsModal","show","TransactionState","primary","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","as","Link","BodyWrapper","AppBody","activate","deactivate","toastError","connectorID","connector","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","close","blockSlice","sample","parseENSAddress","ensAddress","ensPath","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","ToastListener","onRemove","StyledInput","input","textSubtle","inputRegex","Input","React","event","nextUserInput","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","cursor","className","val","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","campaigns","badge","campaignMap","campaign","Dots","span","useTotalSupply","totalSupply","serializedTokensMap","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","users","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","useFetchProfile","hasProfile","px","DEFAULT_META","StyledPage","mediaQueries","PageMeta","pathname","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","getTokenUriData","tokenURI","uriDataResponse","uriData","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","src","usePreviousValue","BubbleWrapper","Footer","flexGrow","StyledNav","nav","Nav","location","activeIndex","gradients","bubblegum","xs","SubNav","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","Grid","GridItem","GridHeaderItem","BulletList","ul","ApyCalculatorModal","displayApr","linkLabel","linkHref","earningTokenSymbol","isFarm","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","textTransform","freq","fee","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","transformUserData","transformPool","quoteTokenAddress","toLocaleLowerCase","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","prev","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","refresh","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridTemplateRows","userSelect","disabled","maxAmountSpend","greaterThan","ens","resolvedContentHash","useENSContentHash","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","history","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","BLOCK_PADDING","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentRoundStartBlockNumber","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","useLastUpdated","lastUpdated","setStateLastUpdated","previousLastUpdated","setLastUpdated","applyNodeDataToLotteriesGraphResponse","nodeData","graphResponse","nodeRound","ticketPrice","totalTickets","totalUsers","winningTickets","graphRound","getGraphLotteries","lotteries","getLotteriesData","idsForNodesCall","mergedData","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","ticketDataForRound","roundTickets","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","floor","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","IDLE","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","createBrowserHistory","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","Outer","Inner","PageHeader","FlexLayout","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","inputRef","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","ViewMode","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","Menu","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","onPresentApyModal","PromotedGradient","StyledCard","isPromoted","isDesktop","StyledCardInner","radii","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","cakeContract","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","endIcon","spin","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","stakingTokenSymbol","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isXl","useMatchBreakpoints","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","isXs","isSm","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","fontWeight","onPresentBountyModal","ButtonText","HelpButton","BaseCell","CellContent","StyledCell","NameCell","hasVaultShares","showStakedTag","showSubtitle","HelpIconWrapper","EarningsCell","labelText","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","SearchSortContainer","ControlStretch","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","orderBy","sortPools","cardLayout","tableLayout","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","TokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","el","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Farms","FarmAuction","Lottery","Ifos","NotFound","Teams","Team","TradingCompetition","Predictions","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Global","exact","strict","component","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"6QAIaA,EAAS,uBAETC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACFC,MAAM,GAAD,OALZC,GAKY,oBAAyBH,EAAzB,UADH,cACnBI,EADmB,gBAENA,EAASC,OAFH,cAEnBC,EAFmB,yBAGlBA,GAHkB,2CAAH,sDAMXC,EAAwB,WACnC,IAGE,OAFwBC,aAAaC,QAAQX,IAEnBY,IAAGV,OAC7B,SACA,OAAOU,IAAGV,S,OCXRW,EAA8B,CAClCC,YAAY,EACZC,gBAAiBH,KAINI,EAAc,IAAIC,IAC/BD,EAAYE,IAAIN,IAAGV,OAAQiB,GAEpB,IAAMC,EAAkBC,6BAA0BC,GAE5CC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,oBAAwB,WAChD,IAAMC,EAAkBjB,IAExB,OAAO,2BACFI,GADL,IAEEE,gBAAiBY,IAAUD,QAL/B,mBAAOE,EAAP,KAAcC,EAAd,KAQQd,EAAoBa,EAApBb,gBAERe,qBAAU,YACiB,uCAAG,gCAAA3B,EAAA,0DACpBuB,EAAkBjB,OAEAG,IAAGV,OAHD,uBAIlB6B,EAAWf,EAAYgB,IAAIpB,IAAGV,QAJZ,SAKID,EAAYyB,GALhB,OAKlBO,EALkB,OAMxBjB,EAAYE,IAAIQ,EAAhB,2BAAsCK,GAAaE,IAN3B,OAS1BJ,GAAS,SAACK,GAAD,mBAAC,eACLA,GADI,IAEPpB,YAAY,OAXY,2CAAH,qDAezBqB,KACC,CAACN,IAEJ,IAAMO,EAAW,uCAAG,WAAOC,GAAP,iBAAAlC,EAAA,yDACba,EAAYsB,IAAID,EAASnC,QADZ,wBAEhB2B,GAAS,SAACK,GAAD,mBAAC,eACLA,GADI,IAEPpB,YAAY,OAJE,SAOKb,EAAYoC,EAASnC,QAP1B,OAOVA,EAPU,OAQV6B,EAAWf,EAAYgB,IAAIpB,IAAGV,QAGpCc,EAAYE,IAAImB,EAASnC,OAAzB,2BAAsC6B,GAAa7B,IACnDQ,aAAa6B,QAAQvC,EAAQqC,EAASnC,QAEtC2B,GAAS,SAACK,GAAD,mBAAC,eACLA,GADI,IAEPpB,YAAY,EACZC,gBAAiBsB,OAjBH,wBAoBhB3B,aAAa6B,QAAQvC,EAAQqC,EAASnC,QACtC2B,GAAS,SAACK,GAAD,mBAAC,eACLA,GADI,IAEPpB,YAAY,EACZC,gBAAiBsB,OAxBH,4CAAH,sDA6BXG,EAAYC,uBAChB,SAACC,EAAalC,GACZ,IAGMmC,GAHiB3B,EAAYsB,IAAIvB,EAAgBb,QACnDc,EAAYgB,IAAIjB,EAAgBb,QAChCc,EAAYgB,IAAIpB,IAAGV,SACewC,IAAQA,EAK9C,GAFyBC,EAAeC,MAAM,aAEtBpC,EAAM,CAC5B,IAAIqC,EAAmBF,EAMvB,OALAG,OAAOC,KAAKvC,GAAMwC,SAAQ,SAACC,GACzB,IAAMC,EAAc,IAAIC,OAAJ,WAAeF,EAAf,KAA2B,KAC/CJ,EAAmBA,EAAiBO,QAAQF,EAAa1C,EAAKyC,GAASI,eAGlER,EAGT,OAAOF,IAET,CAAC5B,IAGH,OAAO,cAACK,EAAgBkC,SAAjB,CAA0BC,MAAK,2BAAO3B,GAAP,IAAcQ,cAAaoB,EAAGhB,IAA7D,SAA2EhB,KCzFrEiC,EAVQ,WACrB,IAAMC,EAAkBC,qBAAWvC,GAEnC,QAAwBE,IAApBoC,EACF,MAAM,IAAIE,MAAM,iCAGlB,OAAOF,I,6KCPHG,EAAMC,YAAOC,IAAPD,CAAH,kLAQE,gBAAGE,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGlB,gBAAGC,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,YACpB,gBAAGC,EAAH,EAAGA,QAAH,cAAiBA,QAAjB,IAAiBA,IAAW,gBACpC,qBAAGC,WACJ,qBAAGC,UACI,qBAAGC,gBAGTC,EAAaR,YAAOD,EAAPC,CAAH,+DASVS,GALUT,IAAOU,IAAV,wEAKGV,YAAOD,EAAPC,CAAH,wIAER,gBAAGW,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MACf,gBAAGP,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGnC,qBAAGO,QAIJC,EAAWZ,YAAOD,EAAPC,CAAH,mEAET,gBAAGW,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MAGrBZ,O,+qBC7CA,EACD,CACV,GAAI,6CACJ,GAAI,8CAHO,EASF,CACT,GAAI,6CACJ,GAAI,8CAXO,EAaF,CACT,GAAI,6CACJ,GAAI,8CAfO,EAiBG,CACd,GAAI,6CACJ,GAAI,8CAnBO,EAqBG,CACd,GAAI,6CACJ,GAAI,8CAvBO,EAyBC,CACZ,GAAI,6CACJ,GAAI,8CA3BO,EA6BA,CACX,GAAI,6CACJ,GAAI,IA/BO,EAiCG,CACd,GAAI,6CACJ,GAAI,8CAnCO,EAqCC,CACZ,GAAI,6CACJ,GAAI,8CAvCO,EAyCO,CAClB,GAAI,6CACJ,GAAI,8CA3CO,EA6CF,CACT,GAAI,6CACJ,GAAI,8CA/CO,EAiDF,CACT,GAAI,6CACJ,GAAI,IAnDO,EAqDA,CACX,GAAI,6CACJ,GAAI,8CAvDO,EAyDI,CACf,GAAI,6CACJ,GAAI,IA3DO,EA6DU,CACrB,GAAI,6CACJ,GAAI,IA/DO,EAiEW,CACtB,GAAI,6CACJ,GAAI,I,QC9DKc,EAAa,SAACC,GAEzB,OAAOA,EADSvE,IACUuE,EADVvE,IAC6BuE,EAAQC,IAAQC,UAGlDC,EAAiB,WAC5B,OAAOJ,EAAWK,IAAOC,KAAKL,UAEnBM,EAAuB,WAClC,OAAOP,EAAWQ,IAEPC,EAAsB,WACjC,OAAOT,EAAWQ,IAEPE,EAAiB,WAC5B,OAAOV,EAAWK,IAAOM,KAAKV,UAEnBW,EAAsB,WACjC,OAAOZ,EAAWQ,IAEPK,EAA2B,WACtC,OAAOb,EAAWQ,IAEPM,EAA2B,WACtC,OAAOd,EAAWQ,IAEPO,EAAyB,WACpC,OAAOf,EAAWQ,IAEPQ,EAAwB,WACnC,OAAOhB,EAAWQ,IAEPS,EAA2B,WACtC,OAAOjB,EAAWQ,IAEPU,EAAyB,WACpC,OAAOlB,EAAWQ,IAEPW,EAA+B,WAC1C,OAAOnB,EAAWQ,IAEPY,EAAsB,WACjC,OAAOpB,EAAWQ,IAEPa,EAAsB,WACjC,OAAOrB,EAAWQ,IAEPc,EAAwB,WACnC,OAAOtB,EAAWQ,IAEPe,EAA4B,WACvC,OAAOvB,EAAWQ,IAEPgB,EAAkC,WAC7C,OAAOxB,EAAWQ,IAEPiB,EAAmC,WAC9C,OAAOzB,EAAWQ,K,+BC9DpB,0GAEYkB,EAFZ,S,SAEYA,K,wBAAAA,E,yBAAAA,M,KAKL,IAAMC,EAAYC,YAAyE,sBACrFC,EAAiBD,YAAmB,wB,8BCRjD,gNAEYF,EAFZ,S,SAEYA,K,cAAAA,E,iBAAAA,M,KAKL,IAAMI,EAAiBF,YAAmD,uBACpEG,EAAmBH,YAAmB,yBACtCD,EAAYC,YAAmD,kBAC/DI,EAAmBJ,YAM7B,yBACUK,EAAeL,YAA2C,sB,8GCUxDM,IAfY,WACzB,MAA2CC,cAAnCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAAYC,EAA7B,iBACMC,EAASC,iBAAOJ,GACtB,EAAgCtF,mBAASsF,GAAWK,KAApD,mBAAOC,EAAP,KAAiBC,EAAjB,KASA,OAPAxF,qBAAU,WACJiF,IAAYG,EAAOK,UACrBD,EAAYP,GAAWK,KACvBF,EAAOK,QAAUR,KAElB,CAACA,IAEG,aAAEA,QAASM,EAAUL,QAAO,OAAEA,QAAF,IAAEA,IAAWnC,IAAQC,SAAYmC,K,0HCtBhEO,EAAS1D,IAAOU,IAAV,yGAKCiD,EAAe3D,YAAO0D,EAAP1D,CAAH,oEAKZ4D,EAAa5D,IAAOU,IAAV,oHAML,gBAAGC,EAAH,EAAGA,IAAH,OAAsB,OAARA,EAAgB,MAAmB,OAARA,GAAgB,SAAoB,OAARA,GAAgB,QAAWA,KAC/F,gBAAGP,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGhCsD,O,+BCtBf,iOAIaG,EAAW,IAAIC,IAAU,GACzBC,EAAU,IAAID,IAAU,GACxBE,EAAW,IAAIF,IAAU,GACzBG,EAAU,IAAIH,IAAU,IAExBI,EAA8B,SAACC,GAAD,OACzCC,EAAkBD,GAAUE,UAEjBD,EAAoB,SAACD,GAAD,OAA2C,IAAIL,IAAUK,EAAS5E,c,mWCJtF+E,EAAmB,SAACC,GAAsC,IAAnBC,EAAkB,uDAAP,GAC7D,OAAO,IAAIV,IAAUS,GAAQE,MAAMR,IAAQS,IAAIF,KAGpCG,EAAmB,SAACJ,GAAsC,IAAnBC,EAAkB,uDAAP,GAC7D,OAAO,IAAIV,IAAUS,GAAQK,UAAUX,IAAQS,IAAIF,KAMxCK,EAAmB,SAACC,GAAuC,IAAnBN,EAAkB,uDAAP,GAC9D,OAAOG,EAAiBG,EAASN,GAAUO,YAGhCC,EAAwB,SAACF,GAAiE,IAA7CN,EAA4C,uDAAjC,GAAIS,EAA6B,uCACpG,OAAON,EAAiBG,EAASN,GAAUU,QAAQD,IAGxCE,EAAe,SAACC,GAAwD,IAAxCC,EAAuC,uDAAxB,EAAGC,EAAqB,uDAAN,EACtEC,EAAU,CACdC,sBAAuBH,EACvBI,sBAAuBH,GAEzB,OAAOF,EAAOM,oBAAelI,EAAW+H,IAO7BI,EAAkB,SAACP,GAAmE,IAAzCH,EAAwC,uDAAtB,GAAIT,EAAkB,uDAAP,GACnFoB,EAAYR,EAAOS,IAAIC,IAAOhC,UAAUiC,KAAK,IAAIrB,IAAIF,EAAWS,IACtE,OAAOe,sBAAYZ,EAAOa,IAAIL,GAAYpB,IAO/B0B,EAAyB,SAACd,GAAmE,IAAzCH,EAAwC,uDAAtB,GAAIT,EAAkB,uDAAP,GAC1F2B,EAAkBH,sBAAYZ,EAAQZ,GAC5C,QAAS2B,GAAiBjB,QAAQD,IAOvBmB,EAAoB,SAAChB,GAAqE,IAAzCH,EAAwC,uDAAtB,GAAIT,EAAkB,uDAAP,GAE7F,EAAmBY,EAAO7F,WAAW8G,MAAM,KAA3C,mBAAOC,EAAP,KACA,OAAOX,EAAgBG,IAAOhC,UAAUiC,KAAKO,GAAWrB,EAAiBT,K,uWC1D9D+B,GAAiC,mBAC3CxF,IAAQC,QAAU,IAAIwF,IACrBzF,IAAQC,QACR,6CACA,GACA,MACA,sBAN0C,cAQ3CD,IAAQ0F,QAAU,IAAID,IACrBzF,IAAQ0F,QACR,6CACA,GACA,MACA,sBAb0C,GAgBjCC,GAAkC,mBAC5C3F,IAAQC,QAAU,IAAIwF,IACrBzF,IAAQC,QACR,6CACA,GACA,OACA,gBAN2C,cAQ5CD,IAAQ0F,QAAU,IAAID,IACrBzF,IAAQ0F,QACR,6CACA,GACA,OACA,gBAb2C,GAiBlCE,EAAO,IAAIH,IAAMzF,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,eAC5F4F,EAAM,IAAIJ,IAAMzF,IAAQC,QAAS,6CAA8C,GAAI,MAAO,kBAC1F6F,EAAO,IAAIL,IAAMzF,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,cAC5F8F,EAAO,IAAIN,IAAMzF,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,eAC5F+F,EAAM,IAAIP,IACrBzF,IAAQC,QACR,6CACA,GACA,MACA,qBAEWgG,EAAM,IAAIR,IACrBzF,IAAQC,QACR,6CACA,GACA,MACA,8BAEWiG,EAAO,IAAIT,IACtBzF,IAAQC,QACR,6CACA,GACA,OACA,wBAisDaE,IA9rDA,CACbgG,IAAK,CACHC,OAAQ,MACRC,YAAa,4BAEfC,KAAM,CACJF,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEfjG,KAAM,CACJgG,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEjBE,KAAM,CACJH,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,gCAEbG,MAAO,CACLJ,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,0BAEfI,KAAM,CACJL,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,kCAEfK,MAAO,CACLN,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfM,QAAS,CACPP,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEfO,KAAM,CACJR,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,oBAEfQ,IAAK,CACHT,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEfS,IAAK,CACHV,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEfU,OAAQ,CACNX,OAAQ,SACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,uBAEfW,OAAQ,CACNZ,OAAQ,SACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,iCAEfY,KAAM,CACJb,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfa,IAAK,CACHd,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,qBAEfc,KAAM,CACJf,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfe,IAAK,CACHhB,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,6BAEfgB,MAAO,CACLjB,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,iCAEfiB,MAAO,CACLlB,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,oCAEfkB,IAAK,CACHnB,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,6BAEfmB,IAAK,CACHpB,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,kCAEfoB,KAAM,CACJrB,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,wBAEfqB,KAAM,CACJtB,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfsB,KAAM,CACJvB,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfuB,IAAK,CACHxB,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,qBAEfwB,KAAM,CACJzB,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfyB,IAAK,CACH1B,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,qBAEf0B,IAAK,CACH3B,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,gCAEf2B,MAAO,CACL5B,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEf4B,MAAO,CACL7B,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,sCAEf6B,KAAM,CACJ9B,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,+BAEf8B,KAAM,CACJ/B,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,qBAEf+B,IAAK,CACHhC,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,8BAEfgC,MAAO,CACLjC,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,uBAEfiC,KAAM,CACJlC,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,sBAEfkC,QAAS,CACPnC,OAAQ,UACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEfmC,IAAK,CACHpC,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfoC,IAAK,CACHrC,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,wBAEfqC,KAAM,CACJtC,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,0BAEfsC,IAAK,CACHvC,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,0BAEfuC,IAAK,CACHxC,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEfwC,KAAM,CACJzC,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEfyC,IAAK,CACH1C,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,6BAEf0C,KAAM,CACJ3C,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,2BAEf2C,IAAK,CACH5C,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,uBAEf4C,KAAM,CACJ7C,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,uBAEf6C,IAAK,CACH9C,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEf8C,MAAO,CACL/C,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,8BAEf+C,MAAO,CACLhD,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfgD,OAAQ,CACNjD,OAAQ,SACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,8BAEfiD,MAAO,CACLlD,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,uBAEfkD,KAAM,CACJnD,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,sBAEfmD,IAAK,CACHpD,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEfoD,MAAO,CACLrD,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,6BAEfqD,IAAK,CACHtD,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,0BAEfsD,IAAK,CACHvD,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,0BAEfuD,GAAI,CACFxD,OAAQ,KACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,0BAEfwD,KAAM,CACJzD,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfyD,MAAO,CACL1D,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,wBAEf0D,IAAK,CACH3D,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,0BAEf2D,IAAK,CACH5D,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,0BAEf4D,IAAK,CACH7D,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,qBAEf5F,KAAM,CACJ2F,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,4BAEf6D,MAAO,CACL9D,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,0BAEf8D,KAAM,CACJ/D,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,6BAEf+D,IAAK,CACHhE,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEfgE,KAAM,CACJjE,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,wBAEfiE,QAAS,CACPlE,OAAQ,UACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,sBAEfkE,KAAM,CACJnE,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEfmE,IAAK,CACHpE,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEfoE,IAAK,CACHrE,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfqE,IAAK,CACHtE,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,kCAEfsE,IAAK,CACHvE,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,kCAEfuE,IAAK,CACHxE,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,qBAEfwE,MAAO,CACLzE,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEfyE,IAAK,CACH1E,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,qBAEf0E,MAAO,CACL3E,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,sBAEf2E,KAAM,CACJ5E,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,6BAEf4E,MAAO,CACL7E,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEf6E,KAAM,CACJ9E,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,0BAEf8E,KAAM,CACJ/E,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEf+E,KAAM,CACJhF,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,+BAEfgF,IAAK,CACHjF,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEfiF,KAAM,CACJlF,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,8CAEfkF,MAAO,CACLnF,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEfmF,OAAQ,CACNpF,OAAQ,SACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEfoF,MAAO,CACLrF,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEfqF,MAAO,CACLtF,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEfsF,IAAK,CACHvF,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfuF,KAAM,CACJxF,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,8BAEfwF,IAAK,CACHzF,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,6BAEfyF,IAAK,CACH1F,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,4BAEf0F,KAAM,CACJ3F,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,6BAEf2F,IAAK,CACH5F,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,6BAEf4F,IAAK,CACH7F,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,mBAEf6F,KAAM,CACJ9F,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,uBAEf8F,KAAM,CACJ/F,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,sBAEf+F,KAAM,CACJhG,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,wBAEfgG,IAAK,CACHjG,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,2BAEfiG,KAAM,CACJlG,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,2BAEfkG,KAAM,CACJnG,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,wBAEfmG,IAAK,CACHpG,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,0BAEfoG,IAAK,CACHrG,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,qBAEfqG,IAAK,CACHtG,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,0BAEfsG,IAAK,CACHvG,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,wBAEfuG,IAAK,CACHxG,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,wBAEfwG,KAAM,CACJzG,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,+BAEfyG,OAAQ,CACN1G,OAAQ,SACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN0D,SAAU,GACV4C,YAAa,2BAEf0G,MAAO,CACL3G,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEf2G,QAAS,CACP5G,OAAQ,UACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEf4G,MAAO,CACL7G,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEf6G,IAAK,CACH9G,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,uBAEf8G,IAAK,CACH/G,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEf+G,KAAM,CACJhH,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,uBAEfgH,IAAK,CACHjH,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEfiH,KAAM,CACJlH,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,kCAEfkH,IAAK,CACHnH,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEfmH,KAAM,CACJpH,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,yBAEfoH,KAAM,CACJrH,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,6BAEfqH,IAAK,CACHtH,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,gCAEfsH,IAAK,CACHvH,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,6BAEfuH,KAAM,CACJxH,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,iCAEfwH,IAAK,CACHzH,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,qBAEfyH,KAAM,CACJ1H,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEf0H,KAAM,CACJ3H,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,oBAEf2H,IAAK,CACH5H,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,oBAEf4H,KAAM,CACJ7H,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,wBAEf6H,OAAQ,CACN9H,OAAQ,SACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,+BAEf8H,IAAK,CACH/H,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,+BAEf+H,KAAM,CACJhI,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfgI,KAAM,CACJjI,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfiI,IAAK,CACHlI,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,6BAEfkI,IAAK,CACHnI,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,wBAEfmI,IAAK,CACHpI,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,2BAEfoI,KAAM,CACJrI,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEfqI,KAAM,CACJtI,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEfsI,IAAK,CACHvI,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,gCAEfuI,MAAO,CACLxI,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,+BAEfwI,IAAK,CACHzI,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,8BAEfyI,IAAK,CACH1I,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,oCAEf0I,MAAO,CACL3I,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,0BAEf2I,IAAK,CACH5I,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEf4I,YAAM,CACJ7I,OAAQ,YACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,8BAEf6I,OAAQ,CACN9I,OAAQ,SACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,kCAEf8I,IAAK,CACH/I,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEf+I,IAAK,CACHhJ,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfgJ,IAAK,CACHjJ,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,+BAEfiJ,IAAK,CACHlJ,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfkJ,IAAK,CACHnJ,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfmJ,MAAO,CACLpJ,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEfoJ,KAAM,CACJrJ,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEfqJ,IAAK,CACHtJ,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,0BAEfsJ,IAAK,CACHvJ,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,0BAEfuJ,KAAM,CACJxJ,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,uBAEfwJ,IAAK,CACHzJ,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,wBAEfyJ,KAAM,CACJ1J,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,yBAEf0J,KAAM,CACJ3J,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,0BAEf2J,IAAK,CACH5J,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEf4J,KAAM,CACJ7J,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEf6J,SAAU,CACR9J,OAAQ,WACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,6BAEf8J,aAAO,CACL/J,OAAQ,aACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,8BAEf+J,IAAK,CACHhK,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEfgK,KAAM,CACJjK,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,uBAEfiK,MAAO,CACLlK,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,2BAEfkK,KAAM,CACJnK,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,8BAEfmK,KAAM,CACJpK,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfoK,IAAK,CACHrK,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,wBAEfqK,IAAK,CACHtK,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,wBAEfsK,KAAM,CACJvK,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,sBAEfuK,KAAM,CACJxK,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,gCAEfwK,KAAM,CACJzK,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,8BAEfyK,IAAK,CACH1K,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,0BAEf0K,OAAQ,CACN3K,OAAQ,SACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,0BAEf2K,MAAO,CACL5K,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,uBAEf4K,GAAI,CACF7K,OAAQ,KACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEf6K,IAAK,CACH9K,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,qBAEf8K,KAAM,CACJ/K,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEf+K,KAAM,CACJhL,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfgL,IAAK,CACHjL,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,uBAEfiL,IAAK,CACHlL,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,0BAEfkL,KAAM,CACJnL,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,mCAEfmL,GAAI,CACFpL,OAAQ,KACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,wBAEfoL,IAAK,CACHrL,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,4BAEfqL,KAAM,CACJtL,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,2BAEfsL,OAAQ,CACNvL,OAAQ,SACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,8BAEfuL,MAAO,CACLxL,OAAQ,QACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,yBAEfwL,KAAM,CACJzL,OAAQ,OACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,+BAEfyL,GAAI,CACF1L,OAAQ,KACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,uBAEf0L,IAAK,CACH3L,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,EACV4C,YAAa,sBAEf2L,IAAK,CACH5L,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,0BAEf4L,IAAK,CACH7L,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,wBAEf6L,IAAK,CACH9L,OAAQ,MACRrG,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN0D,SAAU,GACV4C,YAAa,8B,8BCvvDjB,0ZAYO,SAAS8L,EAAUzT,GACxB,IACE,OAAOoB,qBAAWpB,GAClB,SACA,OAAO,GAIJ,SAAS0T,EACdzW,EACA0W,GAES,IADTlQ,EACQ,uDADWnC,IAAQC,QAE3B,OAAQoS,GACN,IAAK,cACH,MAAM,GAAN,OAAUC,IAAmBnQ,GAA7B,eAA4CxG,GAE9C,IAAK,QACH,MAAM,GAAN,OAAU2W,IAAmBnQ,GAA7B,kBAA+CxG,GAEjD,IAAK,QACH,MAAM,GAAN,OAAU2W,IAAmBnQ,GAA7B,kBAA+CxG,GAEjD,IAAK,YACH,MAAM,GAAN,OAAU2W,IAAmBnQ,GAA7B,4BAAyDxG,GAE3D,QACE,MAAM,GAAN,OAAU2W,IAAmBnQ,GAA7B,oBAAiDxG,IAMhD,SAAS4W,EAAexS,GAAqC,IAApByS,EAAmB,uDAAX,EAChDC,EAASN,EAAUpS,GACzB,IAAK0S,EACH,MAAM1T,MAAM,gCAAD,OAAiCgB,EAAjC,OAEb,MAAM,GAAN,OAAU0S,EAAOC,UAAU,EAAGF,EAAQ,GAAtC,cAA8CC,EAAOC,UAAU,GAAKF,IAI/D,SAASG,EAAmBjU,GACjC,OAAOA,EAAMkU,IAAI7P,IAAUiC,KAAK,KAAO6N,IAAI9P,IAAUiC,KAAK,OAAQrF,IAAIoD,IAAUiC,KAAK,MAIhF,SAAS8N,EAAqBC,GACnC,OAAO,IAAIC,IAAQC,IAAKC,OAAOH,GAAME,IAAKC,OAAO,MAG5C,SAASC,EAAwBzU,EAAuB0U,GAC7D,GAAIA,EAAW,GAAKA,EAAW,IAC7B,MAAMrU,MAAM,8BAAD,OAA+BqU,IAE5C,MAAO,CACLH,IAAKI,OAAOJ,IAAKK,SAAS5U,EAAM6U,IAAKN,IAAKC,OAAO,IAAQE,IAAYH,IAAKC,OAAO,MACjFD,IAAKI,OAAOJ,IAAKK,SAAS5U,EAAM6U,IAAKN,IAAKC,OAAO,IAAQE,IAAYH,IAAKC,OAAO,OAe9E,SAASM,EAAYzT,EAAiB0T,EAAUvR,EAAuBwR,GAC5E,IAAKvB,EAAUpS,IAAYA,IAAY4T,IACrC,MAAM5U,MAAM,gCAAD,OAAiCgB,EAAjC,OAGb,OAAO,IAAI6T,IAAS7T,EAAS0T,EAVxB,SAA6BvR,EAAuBwR,GACzD,OAAOA,EANF,SAAmBxR,EAAuBwR,GAC/C,OAAOxR,EAAQ2R,UAAUH,GAASI,mBAKjBD,CAAU3R,EAASwR,GAAWxR,EASb6R,CAAoB7R,EAASwR,IAI1D,SAASM,EAAkBC,EAAW/R,EAAuBwR,GAClE,OAAOF,EAAYU,IAAgBC,IAAuBjS,EAASwR,GAG9D,SAASU,EAAaC,GAC3B,OAAOA,EAAO9V,QAAQ,sBAAuB,QAGxC,SAAS+V,EAAcC,EAAgCC,GAA+B,IAAD,EAC1F,OAAIA,IAAaC,KACVC,QAAQF,aAAoB/O,MAApB,UAA6B8O,EAAcC,EAASrS,gBAApD,aAA6B,EAAkCqS,EAASzU,a,w7BCpGlF,IAAMmU,EAAiB,6CAQjBS,GAA6C,mBACvD3U,IAAQC,QAAU,CAAC2U,IAAK5U,IAAQC,SAAUuF,IAAIxF,IAAQC,SAAU0F,IAAK3F,IAAQC,SAAU6F,IAAMC,IAAMC,IAAKC,IAAKC,MADtD,cAEvDlG,IAAQ0F,QAAU,CAACkP,IAAK5U,IAAQ0F,SAAUF,IAAIxF,IAAQ0F,SAAUC,IAAK3F,IAAQ0F,WAFtB,GAS7CmP,EAAgF,eAC1F7U,IAAQC,QAAU,IAQR6U,EAA4E,eACtF9U,IAAQC,QAAU,IAIR8U,GAA+B,mBACzC/U,IAAQC,QAAU,CAAC0F,IAAK3F,IAAQC,SAAUuF,IAAIxF,IAAQC,SAAU8F,MADvB,cAEzC/F,IAAQ0F,QAAU,CAACkP,IAAK5U,IAAQ0F,SAAUF,IAAIxF,IAAQ0F,SAAUC,IAAK3F,IAAQ0F,WAFpC,GAM/BsP,GAA4C,mBACtDhV,IAAQC,QAAU,CAAC2U,IAAK5U,IAAQC,SAAU4F,IAAKF,IAAK3F,IAAQC,SAAU6F,MADhB,cAEtD9F,IAAQ0F,QAAU,CAACkP,IAAK5U,IAAQ0F,SAAUF,IAAIxF,IAAQ0F,SAAUC,IAAK3F,IAAQ0F,WAFvB,GAK5CuP,EAAkE,eAC5EjV,IAAQC,QAAU,CACjB,CAACuF,IAAIxF,IAAQC,SAAU2F,KACvB,CAACD,IAAK3F,IAAQC,SAAU6F,KACxB,CAACD,IAAKC,OAOGoP,EAA2B,GAE3BC,EAA4B,KAE5BC,EAAenC,IAAKC,OAAO,GAG3BmC,EAAW,IAAIrC,IAAQC,IAAKC,OAAO,GAAID,IAAKC,OAAO,MACnDoC,EAAYrC,IAAKC,OAAO,KAExBqC,EAAoC,IAAIvC,IAAQC,IAAKC,OAAO,KAAMoC,GAClEE,EAAuC,IAAIxC,IAAQC,IAAKC,OAAO,KAAMoC,GACrEG,EAAqC,IAAIzC,IAAQC,IAAKC,OAAO,KAAMoC,GAEnEI,EAAgD,IAAI1C,IAAQC,IAAKC,OAAO,KAAOoC,GAE/EK,EAA2C,IAAI3C,IAAQC,IAAKC,OAAO,MAAOoC,GAG1EM,EAAgB3C,IAAK4C,aAAa5C,IAAKC,OAAO,IAAKD,IAAKC,OAAO,KAC/D4C,EAAmC,IAAI9C,IAAQC,IAAKC,OAAO,IAAKD,IAAKC,OAAO,MAE5E6C,EAAe,IAAI/C,IAAQ,KAC3BgD,EAAsB,IAAIhD,IAAQ,KAGlCiD,EAA8B,CACzC,6CACA,6CACA,6CACA,6CACA,+C,u5BCpFIC,GAAoD,mBACvDlW,IAAQC,QAAU,8CADqC,cAEvDD,IAAQ0F,QAAU,8CAFqC,G,QCwC7CyQ,EAAmB,SAACpW,GAC/B,IAAQmC,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAMC,YAAiBtW,EAASmC,EAAQ2R,eAAc,CAAC9T,EAASmC,KAGpEoU,EAAmB,SAACvW,GAC/B,IAAQmC,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAMG,YAAiBxW,EAASmC,EAAQ2R,eAAc,CAAC9T,EAASmC,KAGpEsU,EAAW,SAACzW,GACvB,IAAQmC,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAMK,YAAiB1W,EAASmC,EAAQ2R,eAAc,CAAC9T,EAASmC,KAMpEwU,EAAY,SAAC3W,GACxB,IAAQmC,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAMO,YAAkB5W,EAASmC,EAAQ2R,eAAc,CAAC9T,EAASmC,KAGrE0U,EAAU,WACrB,IAAQ1U,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAMS,YAAgB3U,EAAQ2R,eAAc,CAAC3R,KAGjD4U,EAAkB,WAC7B,IAAQ5U,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAMW,YAAwB7U,EAAQ2R,eAAc,CAAC3R,KAQzD8U,EAAa,WACxB,IAAQ9U,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAMa,YAAmB/U,EAAQ2R,eAAc,CAAC3R,KAGpDgV,EAAuB,WAClC,IAAQhV,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAMe,YAAqBjV,EAAQ2R,eAAc,CAAC3R,KAGtDkV,EAAgB,WAC3B,IAAQlV,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAMiB,YAAsBnV,EAAQ2R,eAAc,CAAC3R,KAGvDoV,EAAc,SAACC,GAC1B,IAAQrV,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAMoB,YAAoBD,EAAIrV,EAAQ2R,eAAc,CAAC0D,EAAIrV,KAQ7DuV,EAA4B,WACvC,IAAQvV,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAMsB,YAA0BxV,EAAQ2R,eAAc,CAAC3R,KAQ3DyV,EAAyB,WACpC,IAAQzV,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAMwB,YAAuB1V,EAAQ2R,eAAc,CAAC3R,KAGxD2V,EAAgC,WAC3C,IAAQ3V,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAM0B,YAA8B5V,EAAQ2R,eAAc,CAAC3R,KAG/D6V,EAAuB,WAClC,IAAQ7V,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAM4B,YAAqB9V,EAAQ2R,eAAc,CAAC3R,KAGtD+V,EAAuB,WAClC,IAAQ/V,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAM8B,YAAqBhW,EAAQ2R,eAAc,CAAC3R,KAGtDiW,EAAyB,WACpC,IAAQjW,EAAYF,cAAZE,QACR,OAAOkU,mBAAQ,kBAAMgC,YAAuBlW,EAAQ2R,eAAc,CAAC3R,KAqBrE,SAASmW,EAAYtY,EAA6B0T,GAAyD,IAA/C6E,IAA8C,yDACxG,EAA6BtW,cAArBE,EAAR,EAAQA,QAASwR,EAAjB,EAAiBA,QAEjB,OAAO0C,mBAAQ,WACb,IAAKrW,IAAY0T,IAAQvR,EAAS,OAAO,KACzC,IACE,OAAOsR,YAAYzT,EAAS0T,EAAKvR,EAASoW,GAAwB5E,EAAUA,OAAUjX,GACtF,MAAO8b,GAEP,OADAC,QAAQD,MAAM,yBAA0BA,GACjC,QAER,CAACxY,EAAS0T,EAAKvR,EAASoW,EAAsB5E,IAG5C,SAAS+E,EAAiBC,EAAuBJ,GACtD,OAAOD,EAAYK,EAAcC,EAAWL,GAGvC,SAASM,EAAgBN,GAC9B,IAAQnW,EAAYH,cAAZG,QACR,OAAOkW,EAAYlW,EAAUyS,IAAKzS,GAASpC,aAAUtD,EAAWoc,EAAUP,GAGrE,SAASQ,EAAwBR,GACtC,IACIvY,EADIoC,EAAYH,cAAZG,QAER,GAAIA,EAEF,OAAQA,GACN,KAAKnC,IAAQC,QACb,KAAKD,IAAQ0F,QACX3F,EAAU,6CAIhB,OAAOsY,EAAYtY,EAASgZ,EAAST,GAGhC,SAASU,EAAuBjZ,EAA6BuY,GAClE,OAAOD,EAAYtY,EAASkZ,EAAyBX,GAGhD,SAASY,EAAwBR,EAAuBJ,GAC7D,OAAOD,EAAYK,EAAcS,IAAmBb,GAG/C,SAASc,EAAgBC,EAAsBf,GACpD,OAAOD,EAAYgB,EAAaC,IAAmBhB,GAG9C,SAASiB,IACd,IAAQpX,EAAYH,cAAZG,QACR,OAAOkW,EAAYlW,GAAW+T,EAAmB/T,GAAUqX,GAAe,K,8JC7K7DC,IAzByB,SAAC,GASlC,IARL/a,EAQI,EARJA,MAQI,IAPJgb,aAOI,MAPI,OAOJ,MANJjW,gBAMI,MANO,EAMP,MALJkW,kBAKI,SAJJC,EAII,EAJJA,KACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,QACGC,EACC,iBACEC,EAAgB1X,iBAAO,GAM7B,OAJArF,qBAAU,WACR+c,EAActX,QAAUhE,IACvB,CAACA,IAGF,eAAC,KAAD,yBAAMgb,MAAOC,EAAa,eAAiBD,EAAOI,QAASA,GAAaC,GAAxE,cACGF,GAAU,+BAAOA,IAClB,cAAC,IAAD,CAASI,MAAOD,EAActX,QAASwX,IAAKxb,EAAO+E,SAAUA,EAAU0W,SAAU,EAAGC,UAAU,MAC7FR,GAAQ,+BAAOA,U,6BCjCtB,4hCAuDMpG,EAAc,SAAC6G,EAAUta,EAAiBua,GAC9C,IAAMC,EAAgB,OAAGD,QAAH,IAAGA,IAAU/X,IACnC,OAAO,IAAIwC,IAAO6O,SAAS7T,EAASsa,EAAKE,IAG9B9D,EAAmB,SAAC1W,EAAiBua,GAChD,OAAO9G,EAAYgH,EAAUza,EAASua,IAE3B3D,EAAoB,SAAC5W,EAAiBua,GACjD,OAAO9G,EAAYiH,EAAW1a,EAASua,IAK5BjE,EAAmB,SAACtW,EAAiBua,GAChD,OAAO9G,EAAYkH,EAAU3a,EAASua,IAE3B/D,EAAmB,SAACxW,EAAiBua,GAChD,OAAO9G,EAAYmH,EAAU5a,EAASua,IAE3B9C,EAAsB,SAACD,EAAY+C,GAC9C,IAAMM,EAASC,IAAYC,MAAK,SAACC,GAAD,OAAUA,EAAKC,SAAWzD,KACpD8C,EAAMO,EAAOK,eAAiBC,IAAaC,QAAUC,EAAcC,EACzE,OAAO7H,EAAY6G,EAAKva,YAAW8a,EAAOU,iBAAkBhB,IAEjDiB,EAAwB,SAAChE,EAAY+C,GAChD,IAAMM,EAASC,IAAYC,MAAK,SAACC,GAAD,OAAUA,EAAKC,SAAWzD,KAC1D,OAAO/D,EAAYgI,EAAY1b,YAAW8a,EAAOU,iBAAkBhB,IAExD5C,EAA4B,SAAC4C,GACxC,OAAO9G,EAAYiI,EAAgB1a,cAA4BuZ,IAEpDzD,EAAkB,SAACyD,GAC9B,OAAO9G,EAAYkI,EAASxb,cAAkBoa,IAEnCrD,EAAqB,SAACqD,GACjC,OAAO9G,EAAYmI,EAAYhb,cAA4B2Z,IAEhDsB,EAA2B,SAACtB,GACvC,OAAO9G,EAAYqI,EAAmBjb,cAA4B0Z,IAEvDvD,EAA0B,SAACuD,GACtC,OAAO9G,EAAYsI,EAAiBjb,cAA0ByZ,IAEnDyB,EAA0B,SAACzB,GACtC,OAAO9G,EAAYwI,EAAiBhb,cAA0BsZ,IAEnDnD,EAAuB,SAACmD,GACnC,OAAO9G,EAAYyI,EAAcvb,cAAuB4Z,IAE7CjD,EAAwB,SAACiD,GACpC,OAAO9G,EAAY0I,EAAY7b,cAAwBia,IAE5C1C,EAAyB,SAAC0C,GACrC,OAAO9G,EAAY2I,EAAgBrb,cAAyBwZ,IAEjDxC,EAAgC,SAACwC,GAC5C,OAAO9G,EAAY4I,EAAuBnb,cAAgCqZ,IAE/DtC,EAAuB,SAACsC,GACnC,OAAO9G,EAAY6I,EAAcnb,cAAuBoZ,IAE7CpC,EAAuB,SAACoC,GACnC,OAAO9G,EAAY8I,EAAcnb,cAAuBmZ,IAG7ClC,EAAyB,SAACkC,GACrC,OAAO9G,EAAY+I,EAAgBnb,cAAyBkZ,IAGjDkC,EAA6B,SAAClC,GACzC,OAAO9G,EAAYiJ,EAAoBpb,cAA6BiZ,IAEzDoC,EAAuB,SAACpC,GACnC,OAAO9G,EAAYmJ,EAAcpc,cAAuB+Z,IAE7CsC,GAAmC,SAACtC,GAC/C,OAAO9G,EAAYqJ,EAA0Bvb,cAAmCgZ,IAErEwC,GAAoC,SAACxC,GAChD,OAAO9G,EAAYuJ,EAA2Bxb,cAAoC+Y,K,+BCvH7E,IAAK0C,EA8BA9B,EA0DA+B,EAqDAC,EA7IZ,wI,SAAYF,K,sBAAAA,E,+BAAAA,M,cA8BA9B,K,sBAAAA,E,YAAAA,E,kBAAAA,E,aAAAA,M,cA0DA+B,K,iBAAAA,E,eAAAA,M,cAqDAC,K,kBAAAA,E,YAAAA,E,cAAAA,E,uBAAAA,M,2HC/INC,EAAS,uCAAG,WAAgB9C,EAAY+C,GAA5B,yBAAA9hB,EAAA,sEAER+hB,EAAQX,cACRY,EAAM,IAAIvY,IAAOwY,MAAMC,UAAUnD,GAEjCoD,EAAWL,EAAMM,KAAI,SAACC,GAAD,MAAU,CAACA,EAAK5d,QAAQ6d,cAAeN,EAAIO,mBAAmBF,EAAKG,KAAMH,EAAKI,YAL3F,SAMeV,EAAMW,UAAUP,GAN/B,uBAMNQ,EANM,EAMNA,WAEFC,EAAMD,EAAWP,KAAI,SAACC,EAAMQ,GAAP,OAAab,EAAIc,qBAAqBhB,EAAMe,GAAGL,KAAMH,MARlE,kBAUPO,GAVO,wCAYR,IAAInf,MAAJ,MAZQ,0DAAH,wDAsBFsf,EAAW,uCAAG,WACzBhE,EACA+C,GAFyB,uCAAA9hB,EAAA,6DAGzBkJ,EAHyB,+BAGG,CAAE8Z,gBAAgB,GAEtCA,EAAmB9Z,EAAnB8Z,eACFjB,EAAQX,cACRY,EAAM,IAAIvY,IAAOwY,MAAMC,UAAUnD,GAEjCoD,EAAWL,EAAMM,KAAI,SAACC,GAAD,MAAU,CAACA,EAAK5d,QAAQ6d,cAAeN,EAAIO,mBAAmBF,EAAKG,KAAMH,EAAKI,YAThF,SAUAV,EAAMkB,aAAaD,EAAgBb,GAVnC,cAUnBQ,EAVmB,OAWnBC,EAAMD,EAAWP,KAAI,SAACC,EAAMQ,GAChC,kBAAuBR,EAAvB,GAAOa,EAAP,KAAe7iB,EAAf,KACA,OAAO6iB,EAASlB,EAAIc,qBAAqBhB,EAAMe,GAAGL,KAAMniB,GAAQ,QAbzC,kBAgBlBuiB,GAhBkB,4CAAH,wDAmBTf,O,qLClDTsB,EAAUxf,IAAOU,IAAV,4FAGK,qBAAG+e,QAAuB,SAU7B,SAASC,EAAT,GAKc,IAJ3BC,EAI0B,EAJ1BA,UACAC,EAG0B,EAH1BA,UAG0B,IAF1BC,YAE0B,MAFnB,GAEmB,MAD1BJ,cAC0B,SAC1B,OACE,eAACD,EAAD,CAASC,OAAQA,EAAjB,UACGE,GAAa,cAACG,EAAA,EAAD,CAAcvK,SAAUoK,EAAWE,KAAI,UAAKA,EAAKtgB,WAAV,MAA0BwgB,MAAO,CAAEC,YAAa,SACpGJ,GAAa,cAACE,EAAA,EAAD,CAAcvK,SAAUqK,EAAWC,KAAI,UAAKA,EAAKtgB,WAAV,W,wBCtBrD0gB,EAAiBjgB,YAAOkgB,IAAPlgB,CAAH,2DACT,qBAAG6f,QACF,qBAAGA,QAGA,SAASM,EAAT,GAUX,IATFC,EASC,EATDA,QACAL,EAQC,EARDA,MAQC,IAPDF,YAOC,MAPM,OAON,EANDQ,EAMC,EANDA,IAOMC,EAAiBC,YAAiBH,GAExC,OAAO,cAACH,EAAD,CAAgBI,IAAKA,EAAKR,KAAMA,EAAMS,KAAMA,EAAMP,MAAOA,M,kZCDlE,SAASS,EAAiBC,EAA2BC,GACnD,IAAQxd,EAAYH,cAAZG,QACFyd,EAAkBC,cAExB,OAAOzJ,mBAAQ,WACb,IAAKjU,EAAS,MAAO,GAGrB,IAAM2d,EAAiB7hB,OAAOC,KAAKwhB,EAASvd,IAAU4d,QAAqC,SAACC,EAAQjgB,GAElG,OADAigB,EAAOjgB,GAAW2f,EAASvd,GAASpC,GAASkgB,MACtCD,IACN,IAEH,OAAIL,EAEAC,EAEGG,QACC,SAACG,EAAWD,GAEV,OADAC,EAAUD,EAAMlgB,SAAWkgB,EACpBC,IALb,eASSJ,IAKNA,IACN,CAAC3d,EAASyd,EAAiBF,EAAUC,IAQnC,SAASQ,IAEd,OAAOV,EADWW,eACiB,GAG9B,SAASC,IAEd,IACMC,EAAiBb,EADGc,eACiC,GAGrDC,EAAwBviB,OAAOC,KAAKiiB,KAU1C,OATyBK,EACrBviB,OAAOC,KAAKoiB,GAAgBP,QAAqC,SAACC,EAAQjgB,GAIxE,OAHKygB,EAAsBC,SAAS1gB,KAClCigB,EAAOjgB,GAAWugB,EAAevgB,IAE5BigB,IACN,IACHM,EAKC,SAASI,IAEd,OAAOjB,EADsBkB,eACiB,GAGzC,SAASC,EAAiBX,GAC/B,IAAMY,EAAeV,IAErB,SAAKU,IAAiBZ,MAIbY,EAAaZ,EAAMlgB,SAIvB,SAAS+gB,EAAuBC,GACrC,IAAQ5e,EAAYH,cAAZG,QACFme,EAAiBD,IAEvB,OAAOjK,mBAAQ,WACb,GAAKjU,GAA2B,KAAhB4e,EAIhB,OADeC,YAAa/iB,OAAOgjB,OAAOX,GAAiBS,KAE1D,CAAC5e,EAASme,EAAgBS,IAIxB,SAASG,EAAoB1M,GAClC,IAAMoL,EAAkBC,cAExB,QAAKrL,KAIIoL,EAAgB9E,MAAK,SAACmF,GAAD,OAAWkB,YAAe3M,EAAUyL,MAIpE,IAAMmB,EAAgB,sBAEtB,SAASC,EAAqBC,EAAyBC,EAA6BC,GAClF,OAAOF,GAAOA,EAAIG,OAAS,EACvBH,EAEFC,GAAWH,EAAcM,KAAKH,IAAsC,IAA1BI,mBAASJ,GAAS,IAC1DK,YAAmBL,GACnBC,EAMC,SAASK,EAASnJ,GACvB,IAAQvW,EAAYH,cAAZG,QACFhC,EAASggB,IAETpgB,EAAUoS,YAAUuG,GAEpBoJ,EAAgBrJ,YAAiB1Y,QAAWtD,GAAW,GACvDslB,EAAuB7I,YAAwBnZ,QAAWtD,GAAW,GACrEwjB,EAA2BlgB,EAAUI,EAAOJ,QAAWtD,EAEvDulB,EAAYC,YAAoBhC,OAAQxjB,EAAYqlB,EAAe,YAAQrlB,EAAWylB,KACtFC,EAAmBF,YACvBhC,OAAQxjB,EAAYslB,EACpB,YACAtlB,EACAylB,KAEI9b,EAAS6b,YAAoBhC,OAAQxjB,EAAYqlB,EAAe,cAAUrlB,EAAWylB,KACrFE,EAAgBH,YAAoBhC,OAAQxjB,EAAYslB,EAAsB,cAAUtlB,EAAWylB,KACnGze,EAAWwe,YAAoBhC,OAAQxjB,EAAYqlB,EAAe,gBAAYrlB,EAAWylB,KAE/F,OAAO9L,mBAAQ,WACb,GAAI6J,EAAO,OAAOA,EAClB,GAAK9d,GAAYpC,EAAjB,CACA,GAAI0D,EAAS4e,SAAWjc,EAAOic,SAAWL,EAAUK,QAAS,OAAO,KAC9C,IAAD,QAArB,GAAI5e,EAAS+a,OACX,OAAO,IAAI/Y,IACTtD,EACApC,EACA0D,EAAS+a,OAAO,GAChB6C,EAAoB,UAACjb,EAAOoY,cAAR,aAAC,EAAgB,GAAjB,UAAqB4D,EAAc5D,cAAnC,aAAqB,EAAuB,GAAI,WACpE6C,EAAoB,UAACW,EAAUxD,cAAX,aAAC,EAAmB,GAApB,UAAwB2D,EAAiB3D,cAAzC,aAAwB,EAA0B,GAAI,qBAI7E,CACDze,EACAoC,EACAsB,EAAS4e,QACT5e,EAAS+a,OACTpY,EAAOic,QACPjc,EAAOoY,OACP4D,EAAc5D,OACdyB,EACA+B,EAAUK,QACVL,EAAUxD,OACV2D,EAAiB3D,SAId,SAAS8D,EAAYC,GAC1B,IAAMC,EAAsC,SAApB,OAAVD,QAAU,IAAVA,OAAA,EAAAA,EAAYE,eACpBxC,EAAQ4B,EAASW,OAAQ/lB,EAAY8lB,GAC3C,OAAOC,EAAQ/N,IAAQwL,I,khBCzKlB,SAASyC,IACd,IAAMC,EAAWC,cACXC,EAAYC,aAAqD,SAAC/lB,GAAD,OAAWA,EAAMgmB,KAAKF,aAEvFG,EAAqBplB,uBAAY,WAEnC+kB,EADEE,EACOI,cAEAC,iBAEV,CAACL,EAAWF,IAEf,MAAO,CAACE,EAAWG,GAGd,SAASG,IACd,OAAOL,aAA0D,SAAC/lB,GAAD,OAAWA,EAAMgmB,KAAKK,kBAGlF,SAASC,IACd,IAAMV,EAAWC,cACXU,EAAaH,IAEbI,EAAsB3lB,uBAAY,WACtC+kB,EAASa,YAAqB,CAAEJ,gBAAiBE,OAChD,CAACA,EAAYX,IAEhB,MAAO,CAACW,EAAYC,GAGf,SAASE,IACd,IAAMd,EAAWC,cAOjB,MAAO,CANQE,aAAkD,SAAC/lB,GAAD,OAAWA,EAAMgmB,KAAKW,UAEnE9lB,uBAAY,WAC9B+kB,EAASgB,iBACR,CAAChB,KAKC,SAASiB,IACd,IAAMjB,EAAWC,cAajB,MAAO,CAXeE,aACpB,SAAC/lB,GAAD,OAAWA,EAAMgmB,KAAKc,qBAGCjmB,uBACvB,SAACkmB,GACCnB,EAASoB,YAAwB,CAAEF,kBAAmBC,OAExD,CAACnB,KAME,SAASqB,IACd,IAAMrB,EAAWC,cAYjB,MAAO,CAXuBE,aAAiE,SAAC/lB,GAC9F,OAAOA,EAAMgmB,KAAKkB,yBAGarmB,uBAC/B,SAACwV,GACCuP,EAASuB,YAA4B,CAAED,sBAAuB7Q,OAEhE,CAACuP,KAME,SAASwB,IACd,IAAMxB,EAAWC,cAYjB,MAAO,CAXcE,aAAwD,SAAC/lB,GAC5E,OAAOA,EAAMgmB,KAAKqB,gBAGIxmB,uBACtB,SAACymB,GACC1B,EAAS2B,YAAmB,CAAEF,aAAcC,OAE9C,CAAC1B,KAME,SAAS4B,IACd,IAAM5B,EAAWC,cACjB,OAAOhlB,uBACL,SAACqiB,GACC0C,EAAS6B,YAAmB,CAAEC,gBAAiBC,YAAezE,QAEhE,CAAC0C,IAIE,SAASgC,IACd,IAAMhC,EAAWC,cACjB,OAAOhlB,uBACL,SAACuE,EAAiBpC,GAChB4iB,EAASiC,YAAsB,CAAEziB,UAASpC,eAE5C,CAAC4iB,IAIL,SAASkC,EAAcC,GACrB,MAAO,CACLC,OAAQL,YAAeI,EAAKC,QAC5BC,OAAQN,YAAeI,EAAKE,SAIzB,SAASC,IACd,IAAMtC,EAAWC,cAEjB,OAAOhlB,uBACL,SAACknB,GACCnC,EAASuC,YAAkB,CAAEC,eAAgBN,EAAcC,QAE7D,CAACnC,IASE,SAASyC,EAAT,GAAsE,IAAD,mBAAxCC,EAAwC,KAAhCC,EAAgC,KAC1E,OAAO,IAAI7f,IAAM4f,EAAOljB,QAASojB,IAAKzlB,WAAWulB,EAAQC,GAAS,GAAI,UAAW,eAM5E,SAASE,IACd,IAAQrjB,EAAYF,cAAZE,QACFhC,EAASggB,cAGTsF,EAAcrP,mBAAQ,wBAAOjU,GAAO,UAAG8S,IAAa9S,UAAhB,QAAiC,KAAK,CAACA,IAG3EujB,EAAmCtP,mBACvC,kBACEjU,EACIwjB,IAAQ1nB,OAAOC,KAAKiC,IAAS,SAACuY,GAAkB,IAAD,EACvCuH,EAAQ9f,EAAOuY,GAErB,OAEE,UAAC1D,IAA6B7S,UAA9B,QAA0C,IAEvCub,KAAI,SAACkI,GACJ,OAAIA,EAAK7lB,UAAYkgB,EAAMlgB,QAClB,KAEF,CAAC6lB,EAAM3F,MAEf4F,QAAO,SAACC,GAAD,OAAkC,OAANA,QAG1C,KACN,CAAC3lB,EAAQgC,IAIL4jB,EAAuBjD,aAAiD,qBAAGC,KAAQiD,SAEnFC,EAA8B7P,mBAAQ,WAC1C,IAAKjU,IAAY4jB,EAAsB,MAAO,GAC9C,IAAMG,EAAWH,EAAqB5jB,GACtC,OAAK+jB,EAEEjoB,OAAOC,KAAKgoB,GAAUxI,KAAI,SAACyI,GAChC,MAAO,CAACC,YAAiBF,EAASC,GAAQpB,QAASqB,YAAiBF,EAASC,GAAQnB,YAHjE,KAKrB,CAACe,EAAsB5jB,IAEpBkkB,EAAejQ,mBACnB,kBAAM6P,EAAUK,OAAOZ,GAAgBY,OAAOb,KAC9C,CAACC,EAAgBD,EAAaQ,IAGhC,OAAO7P,mBAAQ,WAEb,IAAMmQ,EAAQF,EAAatG,QAA0C,SAACyG,EAAD,GAA6B,IAAD,mBAApBnB,EAAoB,KAAZC,EAAY,KACzFmB,EAASpB,EAAOqB,YAAYpB,GAC5BznB,EAAM4oB,EAAM,UAAMpB,EAAOtlB,QAAb,YAAwBulB,EAAOvlB,SAA/B,UAA8CulB,EAAOvlB,QAArD,YAAgEslB,EAAOtlB,SACzF,OAAIymB,EAAK3oB,KACT2oB,EAAK3oB,GAAO4oB,EAAS,CAACpB,EAAQC,GAAU,CAACA,EAAQD,IAD3BmB,IAGrB,IAEH,OAAOvoB,OAAOC,KAAKqoB,GAAO7I,KAAI,SAAC7f,GAAD,OAAS0oB,EAAM1oB,QAC5C,CAACwoB,M,6BC/NN,iHAEO,SAASM,EAAgBnS,EAAgCrS,GAC9D,OAAOA,GAAWqS,IAAaC,IAAQG,IAAKzS,GAAWqS,aAAoB/O,IAAQ+O,OAAW/X,EAGzF,SAASmqB,EACdC,EACA1kB,GAEA,IAAM8d,EAAQ4G,GAAkB1kB,EAAUwkB,EAAgBE,EAAerS,SAAUrS,QAAW1F,EAC9F,OAAOwjB,GAAS4G,EAAiB,IAAIC,IAAY7G,EAAO4G,EAAetT,UAAO9W,EAGzE,SAASsqB,EAAe9G,GAC7B,OAAIA,EAAM+G,OAAOpS,IAAKqL,EAAM9d,UAAkBsS,IACvCwL,I,6BCbT,oLAuBA,SAASgH,EAAYC,GACnB,OAAmD,IAA5C,CAAC,SAAU,UAAUC,eAAeD,GAG7C,SAASE,EAAkBF,GACzB,YACQzqB,IAANyqB,GACCG,MAAMC,QAAQJ,IAAMA,EAAEK,OAAM,SAACC,GAAD,OAAQP,EAAYO,IAAQH,MAAMC,QAAQE,IAAOA,EAAGD,MAAMN,MAU3F,IAAMQ,EAA6B,CAAEC,OAAO,EAAOC,iBAAalrB,EAAWd,UAAMc,GAGpEylB,EAAgC,CAC3C0F,eAAgBC,KAIlB,SAASC,EAAa1K,EAA6B5Y,GACjD,IAAQrC,EAAYF,cAAZE,QACF4lB,EAAcjF,aAClB,SAAC/lB,GAAD,OAAWA,EAAMogB,UAAU4K,eAEvBpF,EAAWC,cAEXoF,EAA6B5R,mBACjC,4BACE6R,KAAKC,UAAL,iBACE9K,QADF,IACEA,GADF,UACEA,EACIyI,QAAO,SAACsC,GAAD,OAAkBzT,QAAQyT,aAFvC,iBACE,EAEIzK,IAAI0K,YAHV,aACE,EAGIC,cAJN,QAIgB,MAElB,CAACjL,IA4BH,OAxBAngB,qBAAU,WACR,IAAMqrB,EAAqBL,KAAKM,MAAMP,GACtC,GAAK7lB,GAA+B,IAApBmmB,EAAS7G,OAAzB,CAEA,IAAMrE,EAAQkL,EAAS5K,KAAI,SAAC7f,GAAD,OAAS2qB,YAAa3qB,MASjD,OARA8kB,EACE8F,YAAsB,CACpBtmB,UACAib,QACA5Y,aAIG,WACLme,EACE+F,YAAyB,CACvBvmB,UACAib,QACA5Y,iBAIL,CAACrC,EAASwgB,EAAUne,EAASwjB,IAEzB5R,mBACL,kBACEgH,EAAMM,KAAgB,SAACC,GAAU,IAAD,EAC9B,IAAKxb,IAAYwb,EAAM,OAAO8J,EAE9B,IACI9rB,EADE6iB,EAAM,UAAGuJ,EAAY5lB,UAAf,aAAG,EAAuBimB,YAAUzK,IAOhD,OALU,OAANa,QAAM,IAANA,OAAA,EAAAA,EAAQ7iB,OAAyB,QAAX,OAAN6iB,QAAM,IAANA,OAAA,EAAAA,EAAQ7iB,QAE1BA,EAAO6iB,EAAO7iB,MAGT,CAAE+rB,OAAO,EAAM/rB,OAAMgsB,YAAW,OAAEnJ,QAAF,IAAEA,OAAF,EAAEA,EAAQmJ,kBAErD,CAACI,EAAa3K,EAAOjb,IAgBzB,IAAMwmB,EAAgC,CAAEjB,OAAO,EAAOlJ,YAAQ/hB,EAAW4lB,SAAS,EAAOuG,SAAS,EAAOrQ,OAAO,GAC1GsQ,EAAgC,CAAEnB,OAAO,EAAMlJ,YAAQ/hB,EAAW4lB,SAAS,EAAMuG,SAAS,EAAMrQ,OAAO,GAE7G,SAASuQ,EACPC,EACAC,EACAC,EACAC,GAEA,IAAKH,EAAY,OAAOJ,EACxB,IAAQjB,EAA6BqB,EAA7BrB,MAAO/rB,EAAsBotB,EAAtBptB,KAAMgsB,EAAgBoB,EAAhBpB,YACrB,IAAKD,EAAO,OAAOiB,EACnB,GAAIjB,IAAUC,EAAa,OAAOkB,EAClC,IAAKG,IAAsBC,IAAaC,EAAmB,OAAOL,EAClE,IAEIrK,EAFE2K,EAAUxtB,GAAQA,EAAK8lB,OAAS,EAChCmH,GAAU,OAACjB,QAAD,IAACA,IAAe,GAAKuB,EAErC,GAAIC,GAAWxtB,EACb,IACE6iB,EAASwK,EAAkB5K,qBAAqB6K,EAAUttB,GAC1D,MAAO4c,GAEP,OADAC,QAAQ4Q,MAAM,6BAA8BH,EAAUttB,GAC/C,CACL+rB,OAAO,EACPrF,SAAS,EACT9J,OAAO,EACPqQ,UACApK,UAIN,MAAO,CACLkJ,OAAO,EACPrF,SAAS,EACTuG,UACApK,SACAjG,OAAQ4Q,GAIL,SAASE,EACdC,EACAC,EACAC,EACAhlB,GAEA,IAAMykB,EAAW7S,mBAAQ,+BAAMkT,QAAN,IAAMA,GAAN,UAAMA,EAAUG,iBAAhB,aAAM,EAAqBC,YAAYH,KAAa,CAACD,EAAUC,IAelFI,EAAU7B,EAbF1R,mBACZ,kBACEkT,GAAYL,GAAYO,GAAcA,EAAW/H,OAAS,EACtD+H,EAAW9L,KAAU,SAACkM,GACpB,MAAO,CACL7pB,QAASupB,EAASvpB,QAClB8pB,SAAUP,EAASG,UAAU5L,mBAAmBoL,EAAUW,OAG9D,KACN,CAACJ,EAAYF,EAAUL,IAGWzkB,GAE9B0kB,EAAoBY,cAE1B,OAAO1T,mBAAQ,WACb,OAAOuT,EAAQjM,KAAI,SAACc,GAAD,OAAYsK,EAAYtK,EAAD,OAAS8K,QAAT,IAASA,OAAT,EAASA,EAAUG,UAAWR,EAAUC,QACjF,CAACD,EAAUK,EAAUK,EAAST,IAG5B,SAASa,EACdzpB,EACA0oB,EACAO,EACAC,EACAhlB,GAEA,IAAMykB,EAAW7S,mBAAQ,kBAAM4S,EAAkBU,YAAYH,KAAa,CAACP,EAAmBO,IACxFM,EAA+BzT,mBACnC,kBACE6S,GAAY7B,EAAkBoC,GAC1BR,EAAkBnL,mBAAmBoL,EAAUO,QAC/C/sB,IACN,CAAC+sB,EAAYR,EAAmBC,IAkB5BU,EAAU7B,EAfF1R,mBACZ,kBACE6S,GAAY3oB,GAAaA,EAAUmhB,OAAS,GAAKoI,EAC7CvpB,EAAUod,KAAsB,SAAC3d,GAC/B,OAAOA,GAAW8pB,EACd,CACE9pB,UACA8pB,iBAEFptB,KAEN,KACN,CAAC6D,EAAWupB,EAAUZ,IAGYzkB,GAE9B0kB,EAAoBY,cAE1B,OAAO1T,mBAAQ,WACb,OAAOuT,EAAQjM,KAAI,SAACc,GAAD,OAAYsK,EAAYtK,EAAQwK,EAAmBC,EAAUC,QAC/E,CAACD,EAAUU,EAASX,EAAmBE,IAGrC,SAASjH,EACdqH,EACAC,EACAK,EACAplB,GAEA,IAAMykB,EAAW7S,mBAAQ,+BAAMkT,QAAN,IAAMA,GAAN,UAAMA,EAAUG,iBAAhB,aAAM,EAAqBC,YAAYH,KAAa,CAACD,EAAUC,IAalF/K,EAASsJ,EAXD1R,mBAAgB,WAC5B,OAAOkT,GAAYL,GAAY7B,EAAkBwC,GAC7C,CACE,CACE7pB,QAASupB,EAASvpB,QAClB8pB,SAAUP,EAASG,UAAU5L,mBAAmBoL,EAAUW,KAG9D,KACH,CAACN,EAAUL,EAAUW,IAEWplB,GAAS,GACtC0kB,EAAoBY,cAE1B,OAAO1T,mBAAQ,WACb,OAAO0S,EAAYtK,EAAD,OAAS8K,QAAT,IAASA,OAAT,EAASA,EAAUG,UAAWR,EAAUC,KACzD,CAAC1K,EAAQ8K,EAAUL,EAAUC,M,uNChPnBc,ICLHC,EDKGD,EAZf,SAA2B/J,EAAeiK,EAAgBC,GACxD,IAAMb,EAAW7Q,YAAgB,OAACwH,QAAD,IAACA,OAAD,EAACA,EAAOlgB,SAAS,GAE5C6pB,EAASxT,mBAAQ,iBAAM,CAAC8T,EAAOC,KAAU,CAACD,EAAOC,IACjDC,EAAYnI,YAAoBqH,EAAU,YAAaM,GAAQpL,OAErE,OAAOpI,mBACL,kBAAO6J,GAASmK,EAAY,IAAItD,IAAY7G,EAAOmK,EAAU5rB,iBAAc/B,IAC3E,CAACwjB,EAAOmK,K,iCCOL,SAASC,EACdC,EACAH,GAEA,IAAQzW,EAAY1R,cAAZ0R,QACFuM,EAAQqK,aAA2BxD,IAAcwD,EAAgBrK,WAAQxjB,EACzE8tB,EAAmBP,EAAkB/J,EAAD,OAAQvM,QAAR,IAAQA,SAAWjX,EAAW0tB,GAClEK,EAAkBC,YAAqB,OAACxK,QAAD,IAACA,OAAD,EAACA,EAAOlgB,QAASoqB,GAGxDO,EAA+BtU,mBAAQ,WAC3C,OAAKkU,GAAoBH,EACrBG,EAAgB9V,WAAaC,IAAcwV,EAAcU,SAExDJ,EAGEA,EAAiBK,SAASN,GAC7BE,EACEP,EAAcY,QACdZ,EAAca,aAChBb,EAAcU,SAPYV,EAAcc,QAHHd,EAAcc,UAWtD,CAACT,EAAiBC,EAAkBC,EAAiBL,IAElDrI,EAAgBrJ,YAAgB,OAACwH,QAAD,IAACA,OAAD,EAACA,EAAOlgB,SACxCirB,EAAiBC,cAEjBC,EAAUttB,sBAAW,sBAAC,8BAAAtC,EAAA,yDACtBovB,IAAkBT,EAAca,aADV,uBAExBtS,QAAQD,MAAM,oCAFU,6BAKrB0H,EALqB,uBAMxBzH,QAAQD,MAAM,YANU,6BAUrBuJ,EAVqB,uBAWxBtJ,QAAQD,MAAM,yBAXU,6BAerB+R,EAfqB,wBAgBxB9R,QAAQD,MAAM,6BAhBU,8BAoBrB4R,EApBqB,wBAqBxB3R,QAAQD,MAAM,cArBU,kCAyBtB4S,GAAW,EAzBW,UA0BCrJ,EAAcsJ,YAAYF,QAAQf,EAASkB,KAAYC,OAAM,WAGtF,OADAH,GAAW,EACJrJ,EAAcsJ,YAAYF,QAAQf,EAASG,EAAgB/W,IAAI/U,eA7B9C,eA0BpB+sB,EA1BoB,yBAiCnBzJ,EACJoJ,QAAQf,EAASgB,EAAWb,EAAgB/W,IAAI/U,WAAa6sB,IAAY,CACxEG,SAAU7Y,YAAmB4Y,KAE9BE,MAAK,SAAChwB,GACLuvB,EAAevvB,EAAU,CACvBiwB,QAAQ,WAAD,OAAapB,EAAgB9V,SAASpO,QAC7CulB,SAAU,CAAEjT,aAAcuH,EAAMlgB,QAASoqB,gBAG5CmB,OAAM,SAAC/S,GAEN,MADAC,QAAQD,MAAM,0BAA2BA,GACnCA,MA7CgB,4CA+CzB,CAACmS,EAAezK,EAAO6B,EAAewI,EAAiBH,EAASa,IAEnE,MAAO,CAACN,EAAeQ,GAIlB,SAASU,EAA4B3e,GAAqC,IAAtB4e,EAAqB,uDAAH,EACrEvB,EAAkBlU,mBACtB,kBAAOnJ,EAAQ6e,YAA+B7e,EAAO4e,GAAiBrqB,IAAMuqB,YAAStvB,IACrF,CAACwQ,EAAO4e,IAGV,OAAOxB,EAAmBC,EAAiBpW,M,SA9FjC+V,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,M,mCC0JL,IAAK+B,EAMAC,EAwDAC,EA+FAC,EAKAC,EAMAC,EAwCAC,EAhTZ,8O,SAgGYN,K,YAAAA,E,YAAAA,E,eAAAA,M,cAMAC,K,kBAAAA,E,YAAAA,E,gBAAAA,E,eAAAA,M,cAwDAC,K,UAAAA,E,sBAAAA,E,2BAAAA,M,cA+FAC,K,oBAAAA,E,aAAAA,M,cAKAC,K,UAAAA,E,YAAAA,E,uBAAAA,M,cAMAC,K,gBAAAA,E,kBAAAA,E,iBAAAA,M,cAwCAC,K,kBAAAA,E,YAAAA,E,kBAAAA,E,eAAAA,M,qCCvXZ,gNAKaC,EAAsB,SACjCC,EACAC,GAGI,IAFJhpB,EAEG,uDAFQ,GACXipB,EACG,uDADe,EAEZC,EAAmB7oB,YAAiB2oB,EAAkBhpB,GACtDmpB,EAAe,IAAI7pB,IAAUypB,EAAOK,aAAaF,IACjDG,EAAsBhpB,YAAiB8oB,EAAcnpB,GACrDspB,EAAkBxpB,YAAiB,IAAIR,IAAU+pB,GAAsBrpB,GACvEupB,EAAuB/oB,YAAsB2oB,EAAcnpB,EAAUipB,GAC3E,MAAO,CAAEI,sBAAqBC,kBAAiBC,yBAGpCC,EAAsB,SACjC7sB,EACAqsB,GAGI,IAFJhpB,EAEG,uDAFQ,GACXipB,EACG,uDADe,EAEZC,EAAmB7oB,YAAiB2oB,EAAkBhpB,GACtDypB,EAAiB,IAAInqB,IAAU3C,EAAKyD,UAAU8oB,IAC9CQ,EAAwBrpB,YAAiBopB,EAAgBzpB,GACzD2pB,EAAoB7pB,YAAiB,IAAIR,IAAUoqB,GAAwB1pB,GAC3E4pB,EAAyBppB,YAAsBipB,EAAgBzpB,EAAUipB,GAC/E,MAAO,CAAES,wBAAuBC,oBAAmBC,2BAMxCC,EAAa,SAACvS,EAAYwS,GACrC,IAAQC,EAAwCzS,EAAxCyS,YAAaC,EAA2B1S,EAA3B0S,kBAAmBC,EAAQ3S,EAAR2S,IAElCC,EAAmBC,KAAKC,MAAMJ,EAAoB,KAAQ,EAC1DK,EAAmBH,EAAmB,EAAI,EAG1CI,EAAoBP,EAVU,IACC,EAWrC,GAAIA,EAAa,CACf,IAAMQ,EAAiC,IAAOP,EACxCQ,EAA6BC,YAAyC,CAC1EC,aAAc,IACdC,QAASV,EACTW,WAAYZ,EACZK,mBACAC,oBACAR,mBAMF,MAAO,CAAEG,IAJOY,YAAO,CACrBC,aAAcN,EACdO,eAAgBR,IAEKL,mBAAkBG,mBAAkBC,qBAE7D,MAAO,CAAEL,MAAKC,mBAAkBG,mBAAkBC,sBAGvCU,EAAuB,SAClC/a,EACAgb,EACAC,EACAC,EACAnB,GAEA,IAAMoB,EACJnb,GAAWgb,GAAwBA,EAAqBI,GAAG,IAAMH,GAAcA,EAAWG,GAAG,GAEzFC,EADsBxC,EAAoBoC,EAAYC,GAApD7B,gBAC+BiC,MAAMN,GACvCO,EAAoBF,EAAeG,IAAI,GAAKprB,YAAiBirB,EAAgB,IAAM,EAEnFI,EAAgBJ,EAAerrB,MAAM+pB,GAE3C,MAAO,CAAEoB,kBAAiBI,oBAAmBG,iBADpBD,EAAcD,IAAI,GAAKprB,YAAiBqrB,EAAe,IAAM,IAI3EE,EAAmB,SAACtU,EAAYuU,GAC3C,IAAQC,EAAqCxU,EAArCwU,WAAYC,EAAyBzU,EAAzByU,SAAUC,EAAe1U,EAAf0U,WACxBC,EAA2Bhb,SAAS+a,GAAcF,GAAcC,GAChEG,EAAmB/B,KAAKgC,IAAIL,EAAaD,EAAc,GACvDO,EAAkBjC,KAAKgC,IAAIJ,EAAWF,EAAc,GACpDQ,EAAsC,IAArBH,GAA0BE,EAAkB,EAEnE,MAAO,CAAEH,2BAA0BC,mBAAkBE,kBAAiBC,iBAAgBC,gBAD9DD,EAAiBD,EAAkBF,K,uMC7E9CK,cAJwB,CACrCrI,YAAa,KAG4B,SAACsI,GAAD,OACzCA,EAAQC,QAAQC,KAAmB,SAACpzB,EAAOqzB,GACzC,MAAiCA,EAAOC,QAAhCluB,EAAR,EAAQA,QAASwlB,EAAjB,EAAiBA,YACyB,kBAA/B5qB,EAAM4qB,YAAYxlB,GAC3BpF,EAAM4qB,YAAYxlB,GAAWwlB,EAE7B5qB,EAAM4qB,YAAYxlB,GAAWyrB,KAAKgC,IAAIjI,EAAa5qB,EAAM4qB,YAAYxlB,UCb9DmuB,EAAgB5uB,YAAmB,wB,gBCe1C6uB,EAAmB,kBAAM,IAAIC,MAAOC,WAmC1C,SAASC,EAAQC,EAAuBC,GACtC,MAAM,GAAN,OAAUD,EAAV,YAA2BC,GAGtB,I,EAAM50B,EAA0B,CACrConB,gBAAgB,EAChBS,mBAAmB,EACnBI,sBAAuB/O,IACvBkP,aAAcjP,IACdhV,OAAQ,GACR6lB,MAAO,GACP6K,UAAWN,IACX1N,WAAW,EACXa,QAAQ,GAGKsM,cAAch0B,GAAc,SAACi0B,GAAD,OACzCA,EACGC,QAAQI,GAAe,SAACvzB,GAGoB,kBAAhCA,EAAMknB,wBACflnB,EAAMknB,sBAAwB/O,KAKE,kBAAvBnY,EAAMqnB,eACfrnB,EAAMqnB,aAAejP,KAGvBpY,EAAM+zB,2BAA6BP,OAEpCL,QAAQ1M,KAAsB,SAACzmB,EAAOqzB,GACrCrzB,EAAMqmB,eAAiBgN,EAAOC,QAAQjN,eACtCrmB,EAAM8zB,UAAYN,OAEnBL,QAAQhM,KAA6B,SAACnnB,EAAOqzB,GAC5CrzB,EAAMknB,sBAAwBmM,EAAOC,QAAQpM,sBAC7ClnB,EAAM8zB,UAAYN,OAEnBL,QAAQ5L,KAAoB,SAACvnB,EAAOqzB,GACnCrzB,EAAMqnB,aAAegM,EAAOC,QAAQjM,aACpCrnB,EAAM8zB,UAAYN,OAEnBL,QAAQnM,KAAyB,SAAChnB,EAAOqzB,GACxCrzB,EAAM8mB,kBAAoBuM,EAAOC,QAAQxM,qBAE1CqM,QAAQ1L,KAAoB,SAACznB,EAAD,GAA8C,IAAzB0nB,EAAwB,EAAnC4L,QAAW5L,gBAC3C1nB,EAAMoD,SACTpD,EAAMoD,OAAS,IAEjBpD,EAAMoD,OAAOskB,EAAgBtiB,SAAWpF,EAAMoD,OAAOskB,EAAgBtiB,UAAY,GACjFpF,EAAMoD,OAAOskB,EAAgBtiB,SAASsiB,EAAgB1kB,SAAW0kB,EACjE1nB,EAAM8zB,UAAYN,OAEnBL,QAAQtL,KAAuB,SAAC7nB,EAAD,GAA+C,IAAD,IAApCszB,QAAWtwB,EAAyB,EAAzBA,QAASoC,EAAgB,EAAhBA,QACvDpF,EAAMoD,SACTpD,EAAMoD,OAAS,IAEjBpD,EAAMoD,OAAOgC,GAAWpF,EAAMoD,OAAOgC,IAAY,UAC1CpF,EAAMoD,OAAOgC,GAASpC,GAC7BhD,EAAM8zB,UAAYN,OAEnBL,QAAQhL,KAAmB,SAACnoB,EAAD,GAA6C,IAAxBooB,EAAuB,EAAlCkL,QAAWlL,eAC/C,GACEA,EAAeJ,OAAO5iB,UAAYgjB,EAAeH,OAAO7iB,SACxDgjB,EAAeJ,OAAOhlB,UAAYolB,EAAeH,OAAOjlB,QACxD,CACA,IAAQoC,EAAYgjB,EAAeJ,OAA3B5iB,QACRpF,EAAMipB,MAAM7jB,GAAWpF,EAAMipB,MAAM7jB,IAAY,GAC/CpF,EAAMipB,MAAM7jB,GAASuuB,EAAQvL,EAAeJ,OAAOhlB,QAASolB,EAAeH,OAAOjlB,UAAYolB,EAEhGpoB,EAAM8zB,UAAYN,OAEnBL,QAAQa,KAAsB,SAACh0B,EAAD,GAAoE,IAAD,IAAzDszB,QAAWluB,EAA8C,EAA9CA,QAAS6uB,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,cACtEl0B,EAAMipB,MAAM7jB,YAEPpF,EAAMipB,MAAM7jB,GAASuuB,EAAQM,EAAeC,WAC5Cl0B,EAAMipB,MAAM7jB,GAASuuB,EAAQO,EAAeD,KAErDj0B,EAAM8zB,UAAYN,OAEnBL,QAAQjN,KAAW,SAAClmB,GACnBA,EAAM8lB,WAAY,KAEnBqN,QAAQhN,KAAa,SAACnmB,GACrBA,EAAM8lB,WAAY,KAEnBqN,QAAQgB,KAAa,SAACn0B,GACrBA,EAAM2mB,QAAU3mB,EAAM2mB,a,SCtItByN,EAAM,kBAAM,IAAIX,MAAOC,WAsBdT,cAF+B,IAEH,SAACC,GAAD,OACzCA,EACGC,QAAQlF,KAAgB,SAACoG,EAAD,GAAmF,IAAD,QAAjEf,QAAWluB,EAAsD,EAAtDA,QAAS6C,EAA6C,EAA7CA,KAAMqsB,EAAuC,EAAvCA,KAAM1F,EAAiC,EAAjCA,SAAUD,EAAuB,EAAvBA,QAAS4F,EAAc,EAAdA,MAC3F,aAAIF,EAAajvB,UAAjB,aAAI,EAAwBkvB,GAC1B,MAAMtyB,MAAM,0CAEd,IAAMwyB,EAAG,UAAGH,EAAajvB,UAAhB,QAA4B,GACrCovB,EAAIF,GAAQ,CAAEA,OAAM1F,WAAUD,UAAS4F,QAAOtsB,OAAMwsB,UAAWL,KAC/DC,EAAajvB,GAAWovB,KAEzBrB,QAAQuB,KAAsB,SAACL,EAAD,GAA6C,IAAjBjvB,EAAgB,EAA3BkuB,QAAWluB,QACpDivB,EAAajvB,KAClBivB,EAAajvB,GAAW,OAEzB+tB,QAAQwB,KAAoB,SAACN,EAAD,GAAgE,IAAD,MAA9Cf,QAAWluB,EAAmC,EAAnCA,QAASkvB,EAA0B,EAA1BA,KAAM1J,EAAoB,EAApBA,YAChEgK,EAAE,UAAGP,EAAajvB,UAAhB,aAAG,EAAwBkvB,GAC9BM,IAGAA,EAAGC,uBAGND,EAAGC,uBAAyBhE,KAAKgC,IAAIjI,EAAagK,EAAGC,wBAFrDD,EAAGC,uBAAyBjK,MAK/BuI,QAAQ2B,KAAqB,SAACT,EAAD,GAA4D,IAAD,MAA1Cf,QAAWgB,EAA+B,EAA/BA,KAAMlvB,EAAyB,EAAzBA,QAAS2vB,EAAgB,EAAhBA,QACjEH,EAAE,UAAGP,EAAajvB,UAAhB,aAAG,EAAwBkvB,GAC9BM,IAGLA,EAAGG,QAAUA,EACbH,EAAGI,cAAgBZ,W,uBC/CnBn1B,GAAuB,GAC3Bg2B,iBAAkBxwB,IAAMuqB,MACxBkG,WAAY,IAFe,cAG1BzwB,IAAMuqB,MAAQ,CACbxJ,WAAY,KAJa,cAM1B/gB,IAAM0wB,OAAS,CACd3P,WAAY,KAPa,0BAShB,MATgB,GAYdyN,cAAyBh0B,GAAc,SAACi0B,GAAD,OACpDA,EACGC,QACCpuB,KACA,SAAC/E,EAAD,GAA8F,IAAD,MAAnFszB,QAAW4B,EAAwE,EAAxEA,WAAYE,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,gBAAiBC,EAAyB,EAAzBA,iBAClE,OAAO,EAAP,iBACG9wB,IAAMuqB,MAAQ,CACbxJ,WAAY8P,IAFhB,cAIG7wB,IAAM0wB,OAAS,CACd3P,WAAY+P,IALhB,iCAOoBF,GAPpB,2BAQEH,GARF,0BASEE,GATF,KAaHjC,QAAQtuB,KAAgB,SAAC7E,EAAD,GAAgD,IAEtB,EAFqB,IAArCszB,QAAW9N,EAA0B,EAA1BA,WAAY6P,EAAc,EAAdA,MAClDG,EAAaH,IAAU5wB,IAAMuqB,MAAQvqB,IAAM0wB,OAAS1wB,IAAMuqB,MAChE,OAAIxJ,IAAexlB,EAAMw1B,GAAYhQ,WAE5B,2BACFxlB,GADL,OAEEi1B,iBAAkBj1B,EAAMi1B,mBAAqBxwB,IAAMuqB,MAAQvqB,IAAM0wB,OAAS1wB,IAAMuqB,OAFlF,cAGGqG,EAAQ,CAAE7P,eAHb,cAIGgQ,EAAa,CAAEhQ,WAAYxlB,EAAMq1B,GAAO7P,aAJ3C,IAQK,2BACFxlB,GADL,kBAEGq1B,EAAQ,CAAE7P,mBAGd2N,QAAQruB,KAAkB,SAAC9E,GAAW,IAAD,EACpC,OAAO,2BACFA,GADL,OAEEi1B,iBAAkBj1B,EAAMi1B,mBAAqBxwB,IAAMuqB,MAAQvqB,IAAM0wB,OAAS1wB,IAAMuqB,OAFlF,cAGGvqB,IAAMuqB,MAAQ,CAAExJ,WAAYxlB,EAAMyE,IAAM0wB,QAAQ3P,aAHnD,cAIG/gB,IAAM0wB,OAAS,CAAE3P,WAAYxlB,EAAMyE,IAAMuqB,OAAOxJ,aAJnD,OAOD2N,QAAQzuB,KAAW,SAAC1E,EAAD,GAAgD,IAAD,IAArCszB,QAAW+B,EAA0B,EAA1BA,MAAOH,EAAmB,EAAnBA,WAC9C,OAAO,2BACFl1B,GADL,IAEEi1B,iBAAkBI,EAClBH,kBAGH/B,QAAQnuB,KAAc,SAAChF,EAAD,GAAwC,IAAnBo1B,EAAkB,EAA7B9B,QAAW8B,UAC1Cp1B,EAAMo1B,UAAYA,Q,QCtElBn2B,EAA0B,CAC9Bg2B,iBAAkBxwB,IAAMgxB,WACxBP,WAAY,GACZQ,gBAAiB,IAGJzC,cAAyBh0B,GAAc,SAACi0B,GAAD,OACpDA,EACGC,QAAQvuB,KAAgB,kBAAM3F,KAC9Bk0B,QAAQzuB,KAAW,SAAC1E,EAAD,GAA6D,IAAD,IAAlDszB,QAAW+B,EAAuC,EAAvCA,MAAOH,EAAgC,EAAhCA,WAC9C,OAD8E,EAApBS,YAGpDN,IAAUr1B,EAAMi1B,iBACX,2BACFj1B,GADL,IAEEi1B,iBAAkBI,EAClBH,eAKG,2BACFl1B,GADL,IAEEi1B,iBAAkBI,EAClBH,aACAQ,gBAAiB11B,EAAMk1B,aAGpB,2BACFl1B,GADL,IAEEi1B,iBAAkBI,EAClBH,aACAQ,gBAAiB,W,yBCdnBE,EAA4B,CAChCpa,MAAO,KACP7V,QAAS,KACTkwB,iBAAkB,KAClBC,cAAe,MAKX72B,EAA2B,CAC/B82B,kCAAmCC,IACnCC,MAAM,eACDD,IAAsBzM,OAAtB,MAAAyM,IAAqB,YAAWE,MAAuBlT,QAAqC,SAACyG,EAAM0M,GAEpG,OADA1M,EAAK0M,GAAWP,EACTnM,IACN,KAEL2M,eAAgBC,KAGHpD,cAAch0B,GAAc,SAACi0B,GAAD,OACzCA,EACGC,QAAQmD,IAAeC,SAAS,SAACv2B,EAAD,GAA6C,IAAD,IAAlCszB,QAAWkD,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,IAC/Dz2B,EAAMi2B,MAAMQ,GAAZ,yBACE9wB,QAAS,KACTmwB,cAAe,MACZ91B,EAAMi2B,MAAMQ,IAHjB,IAIEZ,iBAAkBW,EAClBhb,MAAO,UAGV2X,QAAQmD,IAAeI,WAAW,SAAC12B,EAAD,GAAwD,IAAD,QAA7CszB,QAAWkD,EAAkC,EAAlCA,UAAWG,EAAuB,EAAvBA,UAAWF,EAAY,EAAZA,IACtE9wB,EAAO,UAAG3F,EAAMi2B,MAAMQ,UAAf,aAAG,EAAkB9wB,QAC5BkwB,EAAgB,UAAG71B,EAAMi2B,MAAMQ,UAAf,aAAG,EAAkBZ,iBAG3C,GAAIlwB,EAAS,CAGX,GAFoBixB,YAAkBjxB,EAAQkxB,QAASF,EAAUE,WAE7CC,IAAeC,KAAM,OAChB,OAArBlB,GAA6BA,IAAqBW,IACpDx2B,EAAMi2B,MAAMQ,GAAZ,2BACKz2B,EAAMi2B,MAAMQ,IADjB,IAEEZ,iBAAkB,KAClBra,MAAO,KACP7V,UACAmwB,cAAea,SAGd,CAEwC,IAAD,EAA5C,GAAIN,IAAyB3S,SAAS+S,GACpC,UAAAz2B,EAAMo2B,sBAAN,SAAsBY,KAAKP,GAG7Bz2B,EAAMi2B,MAAMQ,GAAZ,2BACKz2B,EAAMi2B,MAAMQ,IADjB,IAEEZ,iBAAkB,KAClBra,MAAO,KACP7V,QAASgxB,EACTb,cAAe,WAIpB3C,QAAQmD,IAAeW,UAAU,SAACj3B,EAAD,GAA2D,IAAD,MAAhDszB,QAAWmD,EAAqC,EAArCA,IAAKD,EAAgC,EAAhCA,UAAWU,EAAqB,EAArBA,cACjE,UAAAl3B,EAAMi2B,MAAMQ,UAAZ,eAAkBZ,oBAAqBW,IAK3Cx2B,EAAMi2B,MAAMQ,GAAZ,2BACKz2B,EAAMi2B,MAAMQ,IADjB,IAEEZ,iBAAkB,KAClBra,MAAO0b,EACPvxB,QAAS,KACTmwB,cAAe,WAGlB3C,QAAQgE,KAAS,SAACn3B,EAAD,GAA8B,IAAXy2B,EAAU,EAAnBnD,QACrBtzB,EAAMi2B,MAAMQ,KACfz2B,EAAMi2B,MAAMQ,GAAOb,MAGtBzC,QAAQiE,KAAY,SAACp3B,EAAD,GAA8B,IAAXy2B,EAAU,EAAnBnD,QACzBtzB,EAAMi2B,MAAMQ,WACPz2B,EAAMi2B,MAAMQ,GAGjBz2B,EAAMo2B,gBAAkBp2B,EAAMo2B,eAAe1S,SAAS+S,KACxDz2B,EAAMo2B,eAAiBp2B,EAAMo2B,eAAetN,QAAO,SAACuO,GAAD,OAAOA,IAAMZ,SAGnEtD,QAAQmE,KAAY,SAACt3B,EAAD,GAA8B,IAAXy2B,EAAU,EAAnBnD,QACxBtzB,EAAMi2B,MAAMQ,KACfz2B,EAAMi2B,MAAMQ,GAAOb,GAGjB51B,EAAMo2B,iBAAmBp2B,EAAMo2B,eAAe1S,SAAS+S,IACzDz2B,EAAMo2B,eAAeY,KAAKP,GAGvBz2B,EAAMo2B,iBACTp2B,EAAMo2B,eAAiB,CAACK,OAG3BtD,QAAQoE,KAAa,SAACv3B,EAAD,GAA8B,IAAXy2B,EAAU,EAAnBnD,QAC1BtzB,EAAMo2B,gBAAkBp2B,EAAMo2B,eAAe1S,SAAS+S,KACxDz2B,EAAMo2B,eAAiBp2B,EAAMo2B,eAAetN,QAAO,SAACuO,GAAD,OAAOA,IAAMZ,SAGnEtD,QAAQqE,KAAkB,SAACx3B,EAAD,GAA8B,IAAD,EAAVy2B,EAAU,EAAnBnD,QACnC,KAAI,UAACtzB,EAAMi2B,MAAMQ,UAAb,aAAC,EAAkBX,eACrB,MAAM,IAAI9zB,MAAM,oDAElBhC,EAAMi2B,MAAMQ,GAAZ,2BACKz2B,EAAMi2B,MAAMQ,IADjB,IAEEX,cAAe,KACfnwB,QAAS3F,EAAMi2B,MAAMQ,GAAKX,mBAG7B3C,QAAQI,GAAe,SAACvzB,GAEvB,GAAKA,EAAM+1B,mCAGJ,GAAI/1B,EAAM+1B,kCAAmC,CAClD,IAAM0B,EAAqBz3B,EAAM+1B,kCAAkC/S,QACjE,SAAC0U,EAAGC,GAAJ,OAAUD,EAAE5hB,IAAI6hB,KAChB,IAAIC,KAEAC,EAAoB7B,IAAsBhT,QAAoB,SAAC0U,EAAGC,GAAJ,OAAUD,EAAE5hB,IAAI6hB,KAAI,IAAIC,KAE5F5B,IAAsB50B,SAAQ,SAAC+0B,GACxBsB,EAAmB/2B,IAAIy1B,KAC1Bn2B,EAAMi2B,MAAME,GAAWP,MAI3B51B,EAAM+1B,kCAAkC30B,SAAQ,SAAC+0B,GAC1C0B,EAAkBn3B,IAAIy1B,WAClBn2B,EAAMi2B,MAAME,YAjBvBn2B,EAAMi2B,MAAQh3B,EAAag3B,MAC3Bj2B,EAAMo2B,eAAiBn3B,EAAam3B,eAqBtCp2B,EAAM+1B,kCAAoCC,IAGrCh2B,EAAMo2B,iBACTp2B,EAAMo2B,eAAiBC,IAGvBA,IAAyB1V,KAAI,SAACwV,GAI5B,OAHKn2B,EAAMi2B,MAAME,KACfn2B,EAAMi2B,MAAME,GAAWP,IAElB,Y,SC/KX32B,EAA0B,CAC9Bg2B,iBAAkBxwB,IAAMqzB,kBACxB5C,WAAY,KAGCjC,cAAyBh0B,GAAc,SAACi0B,GAAD,OACpDA,EAAQC,QAAQzuB,KAAW,SAAC1E,EAAD,GAAgD,IAAD,IAArCszB,QAAW+B,EAA0B,EAA1BA,MAAOH,EAAmB,EAAnBA,WACrD,OAAO,2BACFl1B,GADL,IAEEi1B,iBAAkBI,EAClBH,qB,QCmBSjC,cAJsB,CACnCjI,YAAa,KAG4B,SAACkI,GAAD,OACzCA,EACGC,QAAQzH,KAAuB,SAAC1rB,EAAD,GAAmF,IAAD,MAAxEszB,QAAWjT,EAA6D,EAA7DA,MAAOjb,EAAsD,EAAtDA,QAAsD,IAA7CqC,QAA6C,gBAAX,GAAW,GAAlCojB,sBAAkC,MAAjB,EAAiB,EAC1GkN,EAA6C/3B,EAAMg4B,cACrDh4B,EAAMg4B,cACLh4B,EAAMg4B,cAAgB,GAC3BD,EAAU3yB,GAAV,UAAqB2yB,EAAU3yB,UAA/B,QAA2C,GAC3Cib,EAAMjf,SAAQ,SAACwf,GAAU,IAAD,IAChBqX,EAAU5M,YAAUzK,GAC1BmX,EAAU3yB,GAAS6yB,GAAnB,UAA8BF,EAAU3yB,GAAS6yB,UAAjD,QAA6D,GAC7DF,EAAU3yB,GAAS6yB,GAASpN,IAAkB,UAACkN,EAAU3yB,GAAS6yB,GAASpN,UAA7B,QAAgD,GAAK,QAGtGsI,QACCxH,KACA,SAAC3rB,EAAD,GAAmF,IAAD,IAAxEszB,QAAWluB,EAA6D,EAA7DA,QAASib,EAAoD,EAApDA,MAAoD,IAA7C5Y,QAA6C,gBAAX,GAAW,GAAlCojB,sBAAkC,MAAjB,EAAiB,EAC1EkN,EAA6C/3B,EAAMg4B,cACrDh4B,EAAMg4B,cACLh4B,EAAMg4B,cAAgB,GAEtBD,EAAU3yB,IACfib,EAAMjf,SAAQ,SAACwf,GACb,IAAMqX,EAAU5M,YAAUzK,GACrBmX,EAAU3yB,GAAS6yB,IACnBF,EAAU3yB,GAAS6yB,GAASpN,KAEmB,IAAhDkN,EAAU3yB,GAAS6yB,GAASpN,UACvBkN,EAAU3yB,GAAS6yB,GAASpN,GAEnCkN,EAAU3yB,GAAS6yB,GAASpN,YAKnCsI,QAAQ+E,KAA0B,SAACl4B,EAAD,GAAkE,IAAD,MAAvDszB,QAAWluB,EAA4C,EAA5CA,QAAS+yB,EAAmC,EAAnCA,oBAAqB9X,EAAc,EAAdA,MACpFrgB,EAAMgrB,YAAY5lB,GAAlB,UAA6BpF,EAAMgrB,YAAY5lB,UAA/C,QAA2D,GAC3Dib,EAAMjf,SAAQ,SAACwf,GACb,IAAMqX,EAAU5M,YAAUzK,GACpBjb,EAAU3F,EAAMgrB,YAAY5lB,GAAS6yB,GAC3C,GAAKtyB,EAIE,CAAC,IAAD,EACL,IAAI,UAACA,EAAQwyB,2BAAT,QAAgC,IAAMA,EAAqB,OAC/Dn4B,EAAMgrB,YAAY5lB,GAAS6yB,GAASE,oBAAsBA,OAL1Dn4B,EAAMgrB,YAAY5lB,GAAS6yB,GAAW,CACpCE,6BAQPhF,QAAQiF,KAA+B,SAACp4B,EAAD,GAAkE,IAAD,MAAvDszB,QAAW6E,EAA4C,EAA5CA,oBAAqB/yB,EAAuB,EAAvBA,QAASib,EAAc,EAAdA,MACzFrgB,EAAMgrB,YAAY5lB,GAAlB,UAA6BpF,EAAMgrB,YAAY5lB,UAA/C,QAA2D,GAC3Dib,EAAMjf,SAAQ,SAACwf,GACb,IAAMqX,EAAU5M,YAAUzK,GACpBjb,EAAU3F,EAAMgrB,YAAY5lB,GAAS6yB,GACtCtyB,GACDA,EAAQwyB,sBAAwBA,WAC3BxyB,EAAQwyB,oBACfxyB,EAAQ/G,KAAO,KACf+G,EAAQilB,YAAcuN,SAI3BhF,QAAQkF,KAAwB,SAACr4B,EAAD,GAA4D,IAAD,MAAjDszB,QAAWluB,EAAsC,EAAtCA,QAASwnB,EAA6B,EAA7BA,QAAShC,EAAoB,EAApBA,YACtE5qB,EAAMgrB,YAAY5lB,GAAlB,UAA6BpF,EAAMgrB,YAAY5lB,UAA/C,QAA2D,GAC3DlE,OAAOC,KAAKyrB,GAASxrB,SAAQ,SAAC62B,GAAa,IAAD,EAClCtyB,EAAU3F,EAAMgrB,YAAY5lB,GAAS6yB,IACvC,iBAACtyB,QAAD,IAACA,OAAD,EAACA,EAASilB,mBAAV,QAAyB,GAAKA,IAClC5qB,EAAMgrB,YAAY5lB,GAAS6yB,GAAW,CACpCr5B,KAAMguB,EAAQqL,GACdrN,yBCnFJ0N,EAA2B,CAAC,OAAQ,eAAgB,SAEpDC,EAAQC,YAAe,CAC3BC,UAAUh6B,EACVi6B,QAAS,CACPC,aAAcC,IACdC,MAAOC,IACPC,MAAOC,IACPC,MAAOC,IACPC,YAAaC,IACbC,QAASC,IACTC,MAAOC,IACPC,aAAcC,IACdC,OAAQC,IACRC,QAASC,IAGTC,cACA/T,OACAqO,eACA2F,OACAC,OACAC,OACA9Z,YACA+Z,SAEFC,WAAW,GAAD,mBAAMC,YAAqB,CAAEC,OAAO,KAApC,CAA6CC,eAAK,CAAEC,OAAQlC,MACtEmC,eAAgBC,eAAK,CAAEF,OAAQlC,MAGjCC,EAAM3S,SAAS2N,KAOR,IAAMoH,EAAiB,kBAAM9U,eAErB0S,O,qXC1DfvyB,IAAU6X,OAAO,CACf+c,eAAgB,IAChBC,eAAgB,KAGX,IAAMC,EAAiB,EAEjBvlB,GAAkB,mBAC5BtS,IAAQC,QAAU,uBADU,cAE5BD,IAAQ0F,QAAU,+BAFU,GAOlBoyB,EAAgB,IAAI/0B,IAAU,KAC9Bg1B,EAAkB,IAAIh1B,IAAW,GAAK80B,EAAkB,GAAK,GAAK,KAClEG,EAAeF,EAAcp0B,MAAMq0B,GACnCE,EAAW,0BACXC,EAAsB,UAAMD,EAAN,QAEtBE,GADuB,UAAMF,EAAN,SACH3lB,EAAmBtS,IAAQC,UAG/Cm4B,EAAwBl1B,IAAQS,IAAI,IACpC00B,EAAoB,K,8BC3BjC,0GAMapF,EAAkC,GAGlCF,EAA+B,CARhC,8CADM,qDAS0B,OAGxCE,GAISG,EAAqC,I,kZCDlD,SAASkF,EAAmBC,EAAcC,GACxC,IAAMC,EAAQ1F,IAAsBtS,SAAS8X,GAAQxF,IAAsB5L,QAAQoR,GAAQG,OAAOC,iBAC5FC,EAAS7F,IAAsBtS,SAAS+X,GAAQzF,IAAsB5L,QAAQqR,GAAQE,OAAOC,iBAGnG,OAAIF,EAAQG,EAAe,EACvBH,EAAQG,GAAgB,EACrB,EAMF,IAAMC,EAAb,kDAKE,WAAYC,EAAsBC,GAAkB,IAAD,8BACjD,cAAMD,EAAU32B,QAAS22B,EAAU/4B,QAAS+4B,EAAUr1B,SAAUq1B,EAAU1yB,OAAQ0yB,EAAUhb,OAL9Egb,eAImC,IAFnCC,UAEmC,EAEjD,EAAKD,UAAYA,EACjB,EAAKC,KAAOA,EAHqC,EALrD,yCAWE,WACE,OAAOC,KAAKF,UAAUzZ,YAZ1B,GAAsC5Z,KAuBhCwzB,GAA2B,mBAC9Bj5B,IAAQC,QAAU,IADY,cAE9BD,IAAQ0F,QAAU,IAFY,GAK3BwzB,EACe,qBAAZC,QAA0B,IAAIA,QAAwC,KAExE,SAASC,EAAeC,GAC7B,IAAM7a,EAAM,OAAG0a,QAAH,IAAGA,OAAH,EAAGA,EAAW/7B,IAAIk8B,GAC9B,GAAI7a,EAAQ,OAAOA,EAEnB,IAAMd,EAAM2b,EAAKl5B,OAAO4f,QACtB,SAACL,EAAUoZ,GAAe,IAAD,MACjBC,EAAe,oBACnBD,EAAUC,YADS,iBACnB,EACIrb,KAAI,SAAC4b,GAAW,IAAD,EACf,GAAI,UAACD,EAAKN,YAAN,aAAC,EAAYO,GACjB,OAAO,2BAAKD,EAAKN,KAAKO,IAAtB,IAA8B/hB,GAAI+hB,cAJnB,aACnB,EAKIzT,QAAO,SAACqB,GAAD,OAAqBxS,QAAQwS,aANrB,QAM4B,GAC3CjH,EAAQ,IAAI4Y,EAAiBC,EAAWC,GAC9C,QAA+Ct8B,IAA3CijB,EAASO,EAAM9d,SAAS8d,EAAMlgB,SAAwB,MAAMhB,MAAM,qBACtE,OAAO,2BACF2gB,GADL,kBAEGO,EAAM9d,QAFT,2BAGOud,EAASO,EAAM9d,UAHtB,kBAIK8d,EAAMlgB,QAAU,CACfkgB,QACAoZ,cAjBE,eAsBLJ,IAGP,OADS,OAATC,QAAS,IAATA,KAAW78B,IAAIg9B,EAAM3b,GACdA,EAGF,SAAS6b,IAQd,OAAOzW,aAAkD,SAAC/lB,GAAD,OAAWA,EAAMm6B,MAAMlE,SAGlF,SAASwG,EAAYC,EAAuBC,GAAyC,IAAD,EAClF,OAAO,EAAP,iBACG15B,IAAQC,QADX,2BAC0Bw5B,EAAKz5B,IAAQC,UAAay5B,EAAK15B,IAAQC,WADjE,cAEGD,IAAQ0F,QAFX,2BAE0B+zB,EAAKz5B,IAAQ0F,UAAag0B,EAAK15B,IAAQ0F,WAFjE,EAOF,SAASi0B,EAA4BC,GACnC,IAAM1C,EAAQqC,IAEd,OAAOnjB,mBAAQ,WACb,OAAKwjB,EAGHA,EACGC,QAEAxR,KAAKiQ,GACLvY,QAAO,SAAC+Z,EAAWC,GAAgB,IAAD,EAC3Br3B,EAAO,UAAGw0B,EAAM6C,UAAT,aAAG,EAAmBr3B,QACnC,IAAKA,EAAS,OAAOo3B,EACrB,IAEE,OAAON,EAAYM,EADD77B,OAAO+7B,OAAOZ,EAAe12B,KAE/C,MAAO6V,GAEP,OADAC,QAAQD,MAAM,yCAA0CA,GACjDuhB,KAERb,GAjBWA,IAmBjB,CAAC/B,EAAO0C,IAIN,SAASK,IAA2C,IAAD,EACxD,iBAAOnX,aAA2D,SAAC/lB,GAAD,OAAWA,EAAMm6B,MAAM/D,yBAAzF,aAAO,EAAmGtN,QACxG,SAAC2N,GAAD,OAAUP,IAAsBxS,SAAS+S,MAWtC,SAASpT,IAId,OAAOoZ,EAFcG,EADEM,KAECb,EAAec,IAKlC,SAAS3Z,IAEd,OAAOoZ,EAjBF,WACL,IAAMzC,EAAQqC,IACRY,EAAoBF,IAC1B,OAAOh8B,OAAOC,KAAKg5B,GAAOrR,QAAO,SAAC2N,GAAD,QAAS,OAAC2G,QAAD,IAACA,OAAD,EAACA,EAAmB1Z,SAAS+S,MAASP,IAAsBxS,SAAS+S,MAazE4G,IAKjC,SAASC,IACd,OAAOjB,EAAec,GAIjB,SAASvZ,IAQd,OAAO6Y,EANyBJ,EAAekB,GAGdX,EAA4B1G,MAMxD,SAASsH,EAAgB/G,GAC9B,IAAML,EAAiB8G,IACvB,OAAOvlB,QAAO,OAACye,QAAD,IAACA,OAAD,EAACA,EAAgB1S,SAAS+S,M,mhBC7K7BgH,EAAqB,uCAAG,oCAAAl/B,EAAA,6DAC7Bm/B,EAAe5f,IAAYgL,QAAO,SAACC,GAAD,OAAoB,IAAbA,EAAE9K,UAC3C0f,EAAkBD,EAAa/c,KAAI,SAACid,GACxC,MAAO,CACL56B,QAASD,YAAW66B,EAAWrf,iBAC/BwC,KAAM,iBAGJ8c,EAAgBH,EAAa/c,KAAI,SAACid,GACtC,MAAO,CACL56B,QAASD,YAAW66B,EAAWrf,iBAC/BwC,KAAM,oBAXyB,SAedX,YAAU0d,EAAaH,GAfT,cAe7BI,EAf6B,gBAgBhB3d,YAAU0d,EAAaD,GAhBP,cAgB7BG,EAhB6B,yBAkB5BN,EAAa/c,KAAI,SAACsd,EAAgBC,GACvC,IAAM1L,EAAauL,EAAOG,GACpBzL,EAAWuL,EAAKE,GACtB,MAAO,CACLjgB,OAAQggB,EAAehgB,OACvBuU,WAAY,IAAIxsB,IAAUwsB,GAAYjsB,SACtCksB,SAAU,IAAIzsB,IAAUysB,GAAUlsB,cAxBH,4CAAH,qDA6BrB43B,EAAsB,uCAAG,sCAAA5/B,EAAA,6DAC9B6/B,EAActgB,IAAYgL,QAAO,SAACC,GAAD,MAAiC,QAA1BA,EAAEsV,aAAah1B,UACvDi1B,EAAUxgB,IAAYgL,QAAO,SAACC,GAAD,MAAiC,QAA1BA,EAAEsV,aAAah1B,UAEnDk1B,EAAmBH,EAAYzd,KAAI,SAACid,GACxC,MAAO,CACL56B,QAASD,YAAW66B,EAAWS,aAAar7B,SAC5C+d,KAAM,YACNC,OAAQ,CAACje,YAAW66B,EAAWrf,sBAI7BigB,EAAgBF,EAAQ3d,KAAI,SAACid,GACjC,MAAO,CACL56B,QAASS,cACTsd,KAAM,YACNC,OAAQ,CAACje,YAAW66B,EAAWrf,sBAhBC,SAoBC6B,YAAUqe,EAASF,GApBpB,cAoB9BG,EApB8B,gBAqBFte,YAAUue,EAASH,GArBjB,cAqB9BI,EArB8B,+CAwB/BR,EAAYzd,KAAI,SAACoI,EAAGmV,GAAJ,MAAe,CAChCjgB,OAAQ8K,EAAE9K,OACV4gB,YAAa,IAAI74B,IAAU04B,EAAuBR,IAAQ33B,cA1B1B,YA4B/B+3B,EAAQ3d,KAAI,SAACoI,EAAGmV,GAAJ,MAAe,CAC5BjgB,OAAQ8K,EAAE9K,OACV4gB,YAAa,IAAI74B,IAAU44B,EAAoBV,IAAQ33B,gBA9BvB,4CAAH,qDAmCtBu4B,EAAqB,uCAAG,WAAO7gB,GAAP,iBAAA1f,EAAA,sEAE3BwgC,EAAevgB,YAAsBP,GAFV,SAGN8gB,EAAaC,mBAHP,cAG3BC,EAH2B,yBAI1B,IAAIj5B,IAAUi5B,EAAax9B,aAJD,yDAM1BsE,KAN0B,yDAAH,sDAUrBm5B,EAAuB,uCAAG,WACrCC,GADqC,mBAAA5gC,EAAA,6DAG/B6gC,EAAathB,IAChBgL,QAAO,SAACC,GAAD,MAAiC,QAA1BA,EAAEsV,aAAah1B,SAAqB0f,EAAE2J,cACpD5J,QAAO,SAACC,GAAD,OAAQoW,EAAsBzb,SAASqF,EAAE9K,WAI7CohB,EAAuBD,EAAWze,KAAI,SAAC2e,GAAD,OAAeR,EAAsBQ,EAAUrhB,WATtD,SAUTshB,QAAQC,IAAIH,GAVH,cAU/BI,EAV+B,yBAY9BA,EAAczc,QAAO,SAAC0c,EAAOT,EAAcf,GAChD,OAAO,2BACFwB,GADL,kBAEGN,EAAWlB,GAAOjgB,OAASghB,MAE7B,KAjBkC,2CAAH,sD,gBCzE9Bb,EAActgB,IAAYgL,QAAO,SAACC,GAAD,MAAiC,QAA1BA,EAAEsV,aAAah1B,UACvDs2B,EAAW7hB,IAAYgL,QAAO,SAACC,GAAD,MAAiC,QAA1BA,EAAEsV,aAAah1B,UACpDu2B,EAAiB9hB,IAAYgL,QAAO,SAACC,GAAD,OAAoB,IAAbA,EAAE9K,UAC7C4hB,EAAqBvlB,cAEdwlB,EAAmB,uCAAG,WAAOnpB,GAAP,iBAAApY,EAAA,6DAC3B8hB,EAAQ+d,EAAYzd,KAAI,SAACoI,GAAD,MAAQ,CACpC/lB,QAASD,YAAWgmB,EAAEsV,aAAar7B,SACnC+d,KAAM,YACNC,OAAQ,CAACrK,EAAS5T,YAAWgmB,EAAExK,sBAJA,SAOR6B,YAAU2f,EAAU1f,GAPZ,cAO3B2f,EAP2B,yBAQ1B5B,EAAYpb,QACjB,SAACid,EAAKjiB,EAAMkgB,GAAZ,mBAAC,eAA2B+B,GAA5B,kBAAkCjiB,EAAKC,OAAS,IAAIjY,IAAUg6B,EAAW9B,IAAQ33B,aACjF,KAV+B,2CAAH,sDAcnB25B,EAAiB,uCAAG,WAAOvpB,GAAP,uBAAApY,EAAA,6DAEzB8hB,EAAQ+d,EAAYzd,KAAI,SAACoI,GAAD,MAAQ,CACpC/lB,QAASD,YAAWgmB,EAAEsV,aAAar7B,SACnC+d,KAAM,YACNC,OAAQ,CAACrK,OALoB,SAOAyJ,YAAU2f,EAAU1f,GAPpB,cAOzB8f,EAPyB,OAQzBC,EAAgBhC,EAAYpb,QAChC,SAACid,EAAKjiB,EAAMkgB,GAAZ,mBAAC,eAA2B+B,GAA5B,kBAAkCjiB,EAAKC,OAAS,IAAIjY,IAAUm6B,EAAiBjC,IAAQ33B,aACvF,IAV6B,SAcNf,IAAkB66B,WAAW1pB,GAdvB,cAczB2pB,EAdyB,OAezBC,EAAcZ,EAAS3c,QAC3B,SAACid,EAAKjiB,GAAN,mBAAC,eAAoBiiB,GAArB,kBAA2BjiB,EAAKC,OAAS,IAAIjY,IAAUs6B,EAAW7+B,YAAY8E,aAC9E,IAjB6B,6CAoBnB65B,GAAkBG,IApBC,4CAAH,sDAuBjBC,EAAsB,uCAAG,WAAO7pB,GAAP,uBAAApY,EAAA,6DAC9B8hB,EAAQuf,EAAejf,KAAI,SAACoI,GAAD,MAAQ,CACvC/lB,QAASD,YAAWgmB,EAAExK,iBACtBwC,KAAM,WACNC,OAAQ,CAACrK,OAJyB,SAMbyJ,YAAU0d,EAAazd,GANV,cAM9BogB,EAN8B,OAO9BC,EAAiBd,EAAe5c,QACpC,SAACid,EAAKjiB,EAAMkgB,GAAZ,mBAAC,eACI+B,GADL,kBAEGjiB,EAAKC,OAAS,IAAIjY,IAAUy6B,EAASvC,GAAOz3B,OAAOk6B,MAAMp6B,aAE5D,IAZkC,SAgBOs5B,EAAmBY,SAAS,IAAK9pB,GAhBxC,uBAgBpBiqB,EAhBoB,EAgB5Bn6B,OAhB4B,6CAkBxBi6B,GAlBwB,IAkBR,EAAG,IAAI16B,IAAU46B,EAAiBn/B,YAAY8E,YAlBtC,4CAAH,sDAqBtBs6B,EAAuB,uCAAG,WAAOlqB,GAAP,qBAAApY,EAAA,6DAC/B8hB,EAAQuf,EAAejf,KAAI,SAACoI,GAAD,MAAQ,CACvC/lB,QAASD,YAAWgmB,EAAExK,iBACtBwC,KAAM,gBACNC,OAAQ,CAACrK,OAJ0B,SAMnByJ,YAAU0d,EAAazd,GANJ,cAM/Bc,EAN+B,OAO/B2f,EAAiBlB,EAAe5c,QACpC,SAACid,EAAKjiB,EAAMkgB,GAAZ,mBAAC,eACI+B,GADL,kBAEGjiB,EAAKC,OAAS,IAAIjY,IAAUmb,EAAI+c,IAAQ33B,aAE3C,IAZmC,SAgBTs5B,EAAmBkB,YAAY,IAAKpqB,GAhB3B,cAgB/BqqB,EAhB+B,oDAkBzBF,GAlByB,IAkBT,EAAG,IAAI96B,IAAUg7B,EAAcv/B,YAAY8E,YAlBlC,2CAAH,sD,yBCnEvB06B,EAAoB,uCAAG,sDAAA1iC,EAAA,sEAE1B8hB,EAAQ,CACZ,uBACA,cACA,8BACA,oCACAM,KAAI,SAACugB,GAAD,MAAa,CACjBl+B,QAASoB,cACT2c,KAAMmgB,MATwB,SAY+D5f,YAC7F/B,EACAc,GAd8B,gEAYxB8gB,EAZwB,2BAYV1R,EAZU,2BAYA2R,EAZA,2BAY6BC,EAZ7B,KAiB1BC,EAAyB7R,EAAS,IAAIzpB,IAAUypB,EAAOhuB,YAAcsE,IACrEw7B,EAAwBJ,EAAa,IAAIn7B,IAAUm7B,EAAW1/B,YAAcsE,IAC5Ey7B,EAA2BhS,YAAoB8R,EAAwBC,GAnB7C,kBAoBzB,CACLE,YAAaH,EAAuB/6B,SACpCsrB,kBAAmB0P,EAAsBh7B,SACzCm7B,iBAAkBF,EAAyBxR,gBAAgBzpB,SAC3D66B,0BAA2B,IAAIp7B,IAAUo7B,EAA0B3/B,YAAY8E,SAC/E86B,wBAAyB,IAAIr7B,IAAUq7B,EAAwB5/B,YAAY8E,WAzB7C,2DA4BzB,CACLk7B,YAAa,KACb5P,kBAAmB,KACnB6P,iBAAkB,KAClBN,0BAA2B,KAC3BC,wBAAyB,OAjCK,0DAAH,qDAsCpBM,EAAc,uCAAG,gDAAApjC,EAAA,sEAEpB8hB,EAAQ,CAAC,iBAAkB,UAAW,cAAe,qBAAqBM,KAAI,SAACugB,GAAD,MAAa,CAC/Fl+B,QAASoB,cACT2c,KAAMmgB,MAJkB,SAO0D5f,YAAY/B,EAAcc,GAPpF,gEAOlBmQ,EAPkB,2BAOAoR,EAPA,2BAOWC,EAPX,2BAO4BC,EAP5B,uBASnB,CACLtR,eAAgBA,EAAevpB,WAC/B26B,QAASA,EAAQ36B,WACjB46B,cAAeA,EAAc56B,WAC7B66B,oBAAqBA,EAAoB76B,aAbjB,2DAgBnB,CACLupB,eAAgB,KAChBoR,QAAS,KACTC,cAAe,KACfC,oBAAqB,OApBG,0DAAH,qDC1CrBC,EAAoB5mB,cAuBX6mB,EArBK,uCAAG,WAAOrrB,GAAP,eAAApY,EAAA,+EAEgBwjC,EAAkBtB,SAAS9pB,GAF3C,cAEbsrB,EAFa,yBAGZ,CACLC,WAAW,EACXtQ,WAAY,IAAI5rB,IAAUi8B,EAAqBxS,OAAOhuB,YAAY8E,SAClE47B,kBAAmBF,EAAqBE,kBAAkB1gC,WAC1D2gC,mBAAoBH,EAAqBG,mBAAmB3gC,WAC5DkwB,qBAAsB,IAAI3rB,IAAUi8B,EAAqBtQ,qBAAqBlwB,YAAY8E,WARzE,yDAWZ,CACL27B,WAAW,EACXtQ,WAAY,KACZuQ,kBAAmB,KACnBC,mBAAoB,KACpBzQ,qBAAsB,OAhBL,yDAAH,sD,SCcd1yB,EAA2B,CAC/BL,KAAK,YAAKkf,KACVukB,gBAAgB,EAChBC,UAAW,CACTb,YAAa,KACb5P,kBAAmB,KACnB6P,iBAAkB,KAClBN,0BAA2B,KAC3BC,wBAAyB,KACzBkB,KAAM,CACJ/R,eAAgB,KAChBoR,QAAS,KACTC,cAAe,KACfC,oBAAqB,MAEvBU,SAAU,CACRN,WAAW,EACXtQ,WAAY,KACZD,qBAAsB,KACtBwQ,kBAAmB,KACnBC,mBAAoB,QAMbK,EAA4B,SAAClQ,GAAD,8CAA0B,WAAO3M,EAAU8c,GAAjB,qBAAAnkC,EAAA,sEACvCk/B,IADuC,cAC3DkF,EAD2D,gBAErCxE,IAFqC,OAE3DyE,EAF2D,OAI3DC,EAASC,YAAuBJ,IAAW3J,MAAMn6B,MAEjDmkC,EAAWjlB,IAAY6C,KAAI,SAAC3C,GAChC,IAAMglB,EAAaL,EAAY5kB,MAAK,SAACklB,GAAD,OAAWA,EAAMhlB,SAAWD,EAAKC,UAC/DilB,EAAeN,EAAc7kB,MAAK,SAACklB,GAAD,OAAWA,EAAMhlB,SAAWD,EAAKC,UACnEklB,KAAyB5Q,EAAe,GAAKyQ,IAAazQ,EAAeoJ,OAAOqH,EAAWvQ,UAC3F2Q,EAAiBplB,EAAK0U,YAAcyQ,EAEpCE,EAAsBrlB,EAAKqgB,aAAar7B,QAAUD,YAAWib,EAAKqgB,aAAar7B,SAAS6d,cAAgB,KACxGyiB,EAAoBD,EAAsBR,EAAOQ,GAAuB,EAExEE,EAAsBvlB,EAAKwlB,aAAaxgC,QAAUD,YAAWib,EAAKwlB,aAAaxgC,SAAS6d,cAAgB,KACxG6P,EAAoB6S,EAAsBV,EAAOU,GAAuB,EACxE5S,EAAOyS,EAOT,EANAK,YACEH,EACA5S,EACA3pB,YAAiB,IAAIf,IAAUk9B,EAAarE,aAAc7gB,EAAKqgB,aAAa33B,UAC5Eg9B,WAAW1lB,EAAK2lB,gBAItB,OAAO,uCACFX,GACAE,GAFL,IAGEI,oBACA5S,oBACAC,MACA+B,WAAY0Q,OAIhBxd,EAASge,GAAmBb,IApCqC,2CAA1B,yDAuC5Bc,EAA+B,yDAAM,WAAOje,EAAU8c,GAAjB,mBAAAnkC,EAAA,6DAC1C4gC,EAAwBuD,IAC3BzJ,MAAMr6B,KAAKkqB,QAAO,gBAAGmW,EAAH,EAAGA,aAAH,OAAuC,OAAjBA,QAA0Cv/B,IAAjBu/B,KACjEte,KAAI,SAAC3C,GAAD,OAAUA,EAAKC,UAH0B,SAKpBihB,EAAwBC,GALJ,OAK1CM,EAL0C,OAO1CqE,EAAmBhmB,IAAY6C,KAAI,SAAC3C,GACxC,GAAImhB,EAAsBzb,SAAS1F,EAAKC,QACtC,MAAO,CAAEA,OAAQD,EAAKC,QAExB,IAAMghB,EAAeQ,EAAczhB,EAAKC,SAAWlY,IACnD,MAAO,CACLkY,OAAQD,EAAKC,OACbghB,aAAcA,EAAa14B,aAI/Bqf,EAASge,GAAmBE,IAlBoB,2CAAN,yDAqB/BC,EACX,SAACptB,GAAD,8CACA,WAAOiP,GAAP,uBAAArnB,EAAA,sEAC2BuhC,EAAoBnpB,GAD/C,cACQqpB,EADR,gBAEqCE,EAAkBvpB,GAFvD,cAEQqtB,EAFR,gBAG+BxD,EAAuB7pB,GAHtD,cAGQ+pB,EAHR,iBAI+BG,EAAwBlqB,GAJvD,QAIQmqB,EAJR,OAMQ0B,EAAW1kB,IAAY6C,KAAI,SAAC3C,GAAD,MAAW,CAC1CC,OAAQD,EAAKC,OACboP,UAAW2S,EAAWhiB,EAAKC,QAC3BgmB,oBAAqBD,EAAqBhmB,EAAKC,QAC/CimB,cAAexD,EAAe1iB,EAAKC,QACnC+iB,cAAeF,EAAe9iB,EAAKC,YAGrC2H,EAASue,GAAiB3B,IAd5B,4CADA,uDAkBW4B,EACX,SAACnmB,EAAgBtH,GAAjB,8CACA,WAAOiP,GAAP,eAAArnB,EAAA,sEAC2BuhC,EAAoBnpB,GAD/C,OACQqpB,EADR,OAEEpa,EAASye,GAAoB,CAAEpmB,SAAQoX,MAAO,YAAa1zB,MAAOq+B,EAAW/hB,MAF/E,2CADA,uDAMWqmB,EACX,SAACrmB,EAAgBtH,GAAjB,8CACA,WAAOiP,GAAP,eAAArnB,EAAA,sEAC8B2hC,EAAkBvpB,GADhD,OACQypB,EADR,OAEExa,EAASye,GAAoB,CAAEpmB,SAAQoX,MAAO,sBAAuB1zB,MAAOy+B,EAAcniB,MAF5F,2CADA,uDAMWsmB,EACX,SAACtmB,EAAgBtH,GAAjB,8CACA,WAAOiP,GAAP,eAAArnB,EAAA,sEAC+BiiC,EAAuB7pB,GADtD,OACQ+pB,EADR,OAEE9a,EAASye,GAAoB,CAAEpmB,SAAQoX,MAAO,gBAAiB1zB,MAAO++B,EAAeziB,MAFvF,2CADA,uDAMWumB,EACX,SAACvmB,EAAgBtH,GAAjB,8CACA,WAAOiP,GAAP,eAAArnB,EAAA,sEAC+BsiC,EAAwBlqB,GADvD,OACQmqB,EADR,OAEElb,EAASye,GAAoB,CAAEpmB,SAAQoX,MAAO,gBAAiB1zB,MAAOm/B,EAAe7iB,MAFvF,2CADA,uDAMWwmB,EAA2BC,YAA4B,4BAAZ,sBAAyC,4BAAAnmC,EAAA,sEACjE0iC,IADiE,cACzF0D,EADyF,yBAExFA,GAFwF,4CAKpFC,EAAqBF,YAA4B,sBAAZ,sBAAmC,4BAAAnmC,EAAA,sEAC3DojC,IAD2D,cAC7EkD,EAD6E,yBAE5EA,GAF4E,4CAKxEC,GAAyBJ,YACpC,sBADoD,uCAEpD,+BAAAnmC,EAAA,6DAASoY,EAAT,EAASA,QAAT,SACyBqrB,EAAerrB,GADxC,cACQ6rB,EADR,yBAESA,GAFT,2CAFoD,uDAQzCuC,GAAaC,YAAY,CACpCjkB,KAAM,QACN9hB,eACAgmC,SAAU,CACRrB,mBAAoB,SAAC5jC,EAAOqzB,GAC1B,IAAM6R,EAAwB7R,EAAOC,QACrCtzB,EAAMpB,KAAOoB,EAAMpB,KAAK+hB,KAAI,SAAC3C,GAC3B,IAAMmnB,EAAeD,EAAcnnB,MAAK,SAACklB,GAAD,OAAWA,EAAMhlB,SAAWD,EAAKC,UACzE,OAAO,2BAAKD,GAASmnB,OAGzBhB,iBAAkB,SAACnkC,EAAOqzB,GACxB,IAAMmP,EAAWnP,EAAOC,QACxBtzB,EAAMpB,KAAOoB,EAAMpB,KAAK+hB,KAAI,SAAC3C,GAC3B,IAAMonB,EAAe5C,EAASzkB,MAAK,SAACklB,GAAD,OAAWA,EAAMhlB,SAAWD,EAAKC,UACpE,OAAO,2BAAKD,GAAZ,IAAkBwkB,SAAU4C,OAE9BplC,EAAMqiC,gBAAiB,GAEzBgC,oBAAqB,SAACrkC,EAAOqzB,GAC3B,MAAiCA,EAAOC,QAAhC+B,EAAR,EAAQA,MAAO1zB,EAAf,EAAeA,MAAOsc,EAAtB,EAAsBA,OAChBigB,EAAQl+B,EAAMpB,KAAKymC,WAAU,SAACtc,GAAD,OAAOA,EAAE9K,SAAWA,KAEnDigB,GAAS,IACXl+B,EAAMpB,KAAKs/B,GAAX,2BAAyBl+B,EAAMpB,KAAKs/B,IAApC,IAA4CsE,SAAS,2BAAMxiC,EAAMpB,KAAKs/B,GAAOsE,UAAzB,kBAAoCnN,EAAQ1zB,SAItG2jC,cAAe,SAACpS,GAEdA,EAAQC,QAAQsR,EAAyB/N,WAAW,SAAC12B,EAAOqzB,GAC1DrzB,EAAMsiC,UAAN,2BAAuBtiC,EAAMsiC,WAAcjP,EAAOC,YAGpDJ,EAAQC,QAAQyR,EAAmBlO,WAAW,SAAC12B,EAAOqzB,GACpD,IAAMkP,EAAOlP,EAAOC,QACpBtzB,EAAMsiC,UAAN,2BAAuBtiC,EAAMsiC,WAA7B,IAAwCC,YAG1CrP,EAAQC,QAAQ2R,GAAuBpO,WAAW,SAAC12B,EAAOqzB,GACxD,IAAMmP,EAAWnP,EAAOC,QACxBkP,EAASN,WAAY,EACrBliC,EAAMsiC,UAAN,2BAAuBtiC,EAAMsiC,WAA7B,IAAwCE,mBAMvC,GAAsEuC,GAAWQ,QAAzE3B,GAAR,GAAQA,mBAAoBO,GAA5B,GAA4BA,iBAAkBE,GAA9C,GAA8CA,oBAEtCU,OAAf,S,+BC5NA,wNAGazO,EAIR,CACHC,QAAS5xB,YAAa,gCACtB+xB,UAAW/xB,YAAa,kCACxBsyB,SAAUtyB,YAAa,kCAGZwyB,EAAUxyB,YAAqB,iBAC/ByyB,EAAazyB,YAAqB,oBAGlC2yB,EAAa3yB,YAAqB,oBAClC4yB,EAAc5yB,YAAqB,qBAGnC6yB,EAAmB7yB,YAAqB,0BAClBA,YAAsB,8B,8BCtBzD,kYAea8hB,EAAuB9hB,YAA0C,6BACjEqiB,EAA0BriB,YAA6C,gCACvEwiB,EAA8BxiB,YACzC,oCAEW4iB,EAAqB5iB,YAAuC,2BAC5D8iB,EAAqB9iB,YAAmD,2BACxEkjB,EAAwBljB,YAAmD,8BAC3EwjB,EAAoBxjB,YAAiD,0BACrEqvB,EACXrvB,YAAgF,6BAErEuhB,EAAYvhB,YAAmB,kBAC/BwhB,EAAcxhB,YAAmB,oBACjCwvB,EAAcxvB,YAAmB,qB,kGCrBxC6gC,EAAkBtjC,IAAOU,IAAV,2EAoBN6iC,IAbyB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAS1oB,EAAY,iBAC9D,EAA+C2oB,aAAWD,EAAM,CAAEE,UAAW,YAAaC,QAAS,UAA3FC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAE5B,OACE,eAAC,IAAD,2BAAShpB,GAAT,cACGgpB,GAAkBD,EACnB,cAACP,EAAD,CAAiBS,IAAKH,EAAtB,SACE,cAAC,IAAD,CAAUnpB,MAAM,aAAava,MAAM,iB,oNCXrC8jC,EAAW,IAAIjwB,IAAQC,IAAKC,OAAO,IAAKD,IAAKC,OAAO,MACpD8C,EAAsB,IAAIhD,IAAQC,IAAKC,OAAO,KAAQD,IAAKC,OAAO,MAClEgwB,EAA2BltB,EAAoBmtB,SAASF,GAGvD,SAASG,EAA2Bn2B,GAMzC,IAAMo2B,EAAiBp2B,EAEnB+I,EAAoBmtB,SAClBl2B,EAAMq2B,MAAMtd,MAAMjG,QAChB,SAACwjB,GAAD,OAAoCA,EAAWjwB,SAAS4vB,KACxDltB,SAJJvZ,EASE+mC,EAAgCv2B,GAASo2B,EAAgBp2B,EAAMw2B,YAAYN,SAASE,QAAiB5mC,EAe3G,MAAO,CAAEinC,sBAZ4BF,EACjC,IAAIxwB,IAAJ,OAAYwwB,QAAZ,IAAYA,OAAZ,EAAYA,EAA+BG,UAA3C,OAAsDH,QAAtD,IAAsDA,OAAtD,EAAsDA,EAA+BI,kBACrFnnC,EAU0D4mC,cAN5DA,GACAp2B,IACCA,EAAM42B,uBAAuB/c,IAC1B,IAAIA,IAAY7Z,EAAM42B,YAAY5jB,MAAOojB,EAAc/vB,SAASrG,EAAM42B,YAAYtwB,KAAKuwB,UACvFC,IAAeC,MAAMX,EAAc/vB,SAASrG,EAAM42B,YAAYtwB,KAAKuwB,YAMpE,SAAShY,EACd7e,EACA4e,GACwC,IAAD,EACjCoY,EAAMnxB,YAAqB+Y,GACjC,OAAO,EAAP,iBACGrqB,IAAMuqB,MADT,OACiB9e,QADjB,IACiBA,OADjB,EACiBA,EAAOi3B,gBAAgBD,IADxC,cAEGziC,IAAM0wB,OAFT,OAEkBjlB,QAFlB,IAEkBA,OAFlB,EAEkBA,EAAOk3B,iBAAiBF,IAF1C,EAMK,SAASG,EAAgBX,GAC9B,OAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAa7Y,SAASjV,OACvB,OAAC8tB,QAAD,IAACA,OAAD,EAACA,EAAa7Y,SAASnV,OACvB,OAACguB,QAAD,IAACA,OAAD,EAACA,EAAa7Y,SAASpV,OACvB,OAACiuB,QAAD,IAACA,OAAD,EAACA,EAAa7Y,SAASrV,MACpB,EADsD,EADG,EADF,EADM,EAO/D,SAAS8uB,EAAqBp3B,EAAeq3B,GAClD,OAAKr3B,EAGEq3B,EAAQ,UACRr3B,EAAMs3B,eAAeC,SAASC,cAAc,GADpC,YAC0Cx3B,EAAM42B,YAAYrvB,SAASpO,OADrE,cAET6G,EAAMy3B,aAAalwB,SAASpO,QAFnB,UAIR6G,EAAMs3B,eAAeE,cAAc,GAJ3B,YAIiCx3B,EAAMy3B,aAAalwB,SAASpO,OAJ7D,cAKT6G,EAAM42B,YAAYrvB,SAASpO,QAPxB,K,6BCxEX,0PAOMu+B,EAAgB,sBAChBC,EAAkB,gBACjB,SAASxc,EAAUzK,GACxB,IAAKgnB,EAAcjjB,KAAK/D,EAAK5d,SAC3B,MAAM,IAAIhB,MAAJ,2BAA8B4e,EAAK5d,UAE3C,IAAK6kC,EAAgBljB,KAAK/D,EAAKkM,UAC7B,MAAM,IAAI9qB,MAAJ,uBAA0B4e,EAAKkM,WAEvC,MAAM,GAAN,OAAUlM,EAAK5d,QAAf,YAA0B4d,EAAKkM,UAG1B,SAASrB,EAAawM,GAC3B,IAAM6P,EAAM7P,EAAQ1vB,MAAM,KAC1B,GAAmB,IAAfu/B,EAAIpjB,OACN,MAAM,IAAI1iB,MAAJ,4BAA+Bi2B,IAEvC,MAAO,CACLj1B,QAAS8kC,EAAI,GACbhb,SAAUgb,EAAI,IASX,IAAMpc,EAAwB/mB,YACnC,mCAEWgnB,EAA2BhnB,YACtC,sCAEWuzB,EAA2BvzB,YACtC,sCAEWyzB,EAAgCzzB,YAI1C,2CACU0zB,EAAyB1zB,YAMnC,qC,igBC3BSojC,E,0HAAAA,K,UAAAA,E,YAAAA,E,oBAAAA,E,aAAAA,M,KAOL,IAAMC,EAAe,SAACrmC,GAC3B,GAAc,OAAVA,EACF,OAAO,KAGT,IAAMsmC,EAAWtM,OAAOh6B,GACxB,OAAOg6B,OAAOuM,MAAMD,GAAY,KAAOA,GAG5BE,EAAuB,SAACC,GACnC,IAAMC,EAAM,CACV7tB,GAAI4tB,EAAY5tB,GAChB8Z,KAAM8T,EAAY9T,KAClB7tB,OAAQ2hC,EAAY3hC,OAASi9B,WAAW0E,EAAY3hC,QAAU,EAC9D6hC,SAAmC,SAAzBF,EAAYE,SAAsBrZ,IAAYsZ,KAAOtZ,IAAYuZ,KAC3EC,QAASL,EAAYK,QACrBC,YAAaN,EAAYM,YACzB1iB,KAAM,CACJxL,GAAI4tB,EAAYpiB,KAAKxL,GACrBxX,QAASolC,EAAYpiB,KAAKhjB,QAC1B61B,MAAOmP,EAAaI,EAAYpiB,KAAK6S,OACrC8P,UAAWX,EAAaI,EAAYpiB,KAAK2iB,WACzCC,SAAUZ,EAAaI,EAAYpiB,KAAK4iB,YAQ5C,OAJIR,EAAYtX,QACduX,EAAIvX,MAAQ+X,EAAuBT,EAAYtX,QAG1CuX,GAGIQ,EAAyB,SAACC,GACrC,IAqB0BC,EApBxBvuB,EAkBEsuB,EAlBFtuB,GACAwuB,EAiBEF,EAjBFE,MACAC,EAgBEH,EAhBFG,OACAzW,EAeEsW,EAfFtW,WACA0W,EAcEJ,EAdFI,QACAC,EAaEL,EAbFK,OACAC,EAYEN,EAZFM,UACAC,EAWEP,EAXFO,UACA5W,EAUEqW,EAVFrW,SACA6W,EASER,EATFQ,WACAX,EAQEG,EARFH,UACAY,EAOET,EAPFS,YACAC,EAMEV,EANFU,SACAC,EAKEX,EALFW,SACAC,EAIEZ,EAJFY,WACAC,EAGEb,EAHFa,WACArB,EAEEQ,EAFFR,SAjBF,EAmBIQ,EADFc,YAlBF,MAkBS,GAlBT,EAiCA,MAAO,CACLpvB,KACAyuB,SACAD,MAAOhB,EAAagB,GACpBxW,WAAYwV,EAAaxV,GACzB0W,QAASlB,EAAakB,GACtBC,OAAQnB,EAAamB,GACrBC,UAAWpB,EAAaoB,GACxBC,UAAWA,EAAY3F,WAAW2F,GAAa,KAC/C5W,SAAUuV,EAAavV,GACvB6W,WAAYA,EAAa5F,WAAW4F,GAAc,KAClDX,UAAWX,EAAaW,GACxBY,YAAaA,EAAc7F,WAAW6F,GAAe,EACrDC,SAAUxB,EAAawB,GACvBC,SAAUzB,EAAayB,GACvBC,WAAY1B,EAAa0B,GACzBC,WAAY3B,EAAa2B,GACzBrB,UA7BwBS,EA6BGT,EA5BF,SAArBS,EACK9Z,IAAYsZ,KAGI,SAArBQ,EACK9Z,IAAYuZ,KAGd,MAqBPoB,KAAMA,EAAKjpB,IAAIwnB,KAkBN0B,EAAiB,SAACxB,EAAUyB,GACvC,IAAQhZ,EAAUuX,EAAVvX,MACR,GAAIA,EAAMmY,OACR,OAAOlB,EAAOgC,SAGhB,GAAIjZ,EAAMkY,OAASc,EAAe,EAChC,OAAO/B,EAAOiC,KAEhB,IAAMC,EAAsBnZ,EAAMwY,WAAaxY,EAAMuY,UAAYpa,IAAYsZ,KAAOtZ,IAAYuZ,KAEhG,OAAOH,EAAIC,WAAa2B,EAAsBlC,EAAOmC,IAAMnC,EAAOoC,MAMvDC,EAAc,SAAC/B,GAC1B,OAAQA,EAAII,UAAYJ,EAAIC,WAAaD,EAAIvX,MAAMwX,WAAiC,IAArBD,EAAIvX,MAAMmY,SAO9DoB,EAA0B,SAACT,GACtC,OAAOA,EAAK9gB,OAAOshB,IAyBRE,EAAa,uCAAG,8CAAA/rC,EAAA,6DAC3BgsC,EAD2B,+BACI,GAC/B7O,EAF2B,+BAEnB,IACR8O,EAH2B,+BAGpB,EAHoB,SAKJC,kBACrBC,IACAC,cAF6B,IAAD,+UC3GA,qEArBE,0NA8BD,yDDiH7B,CAAEjP,QAAO8O,OAAMD,UApBU,cAKrB7rC,EALqB,yBAsBpBA,EAASkrC,MAtBW,2CAAH,qDAiDbgB,EAAa,uCAAG,WAAOj0B,EAAiBk0B,GAAxB,mBAAAtsC,EAAA,6DACrByE,EAAUqB,cACVymC,EAAcD,EAAOlqB,KAAI,SAACqoB,GAAD,MAAY,CACzChmC,UACA+d,KAAM,SACNC,OAAQ,CAACgoB,EAAOryB,OALS,SAOJ2K,YAAyC9B,EAAgBsrB,GAPrD,cAOrBpsC,EAPqB,yBAQpBA,GARoB,2CAAH,wDAWbqsC,EAAgB,uCAAG,WAC9Bp0B,EACAk0B,GAF8B,qBAAAtsC,EAAA,6DAIxByE,EAAUqB,cACV2mC,EAAiBH,EAAOlqB,KAAI,SAACqoB,GAAD,MAAY,CAC5ChmC,UACA+d,KAAM,YACNC,OAAQ,CAACgoB,EAAOryB,OARY,SAUG2K,YAA8C9B,EAAgBwrB,GAVjE,cAUxBC,EAVwB,gBAeAL,EAAcj0B,EAASk0B,GAfvB,cAexBK,EAfwB,yBAiBvBD,EAAmBjoB,QAAO,SAAC0c,EAAOyL,EAAmBjN,GAC1D,MAA4BgN,EAAgBhN,GAApCz3B,EAAR,EAAQA,OAAQgiC,EAAhB,EAAgBA,QACVO,EAAQ6B,EAAO3M,GACdkN,EAAP,YAAoBD,EAApB,MAEA,OAAO,2BACFzL,GADL,kBAEGsJ,EAAQoC,GAAa3kC,EAAOsrB,GAAG,KAAO0W,MAExC,KA1B2B,2CAAH,wDAiChB4C,EAAiB,uCAAG,0DAAA9sC,EAAA,6DACzByE,EAAUqB,cACVinC,EAAc,CAAC,eAAgB,iBAAkB,eAAgB,SAAU,eAAgB,cAAc3qB,KAC7G,SAACugB,GAAD,MAAa,CACXl+B,UACA+d,KAAMmgB,MALqB,SAQ0E5f,YACvG9B,EACA8rB,GAV6B,gEAQvBxB,EARuB,2BAQPyB,EARO,2BAQWC,EARX,2BAQ2BC,EAR3B,2BAQqCC,EARrC,2BAQqDC,EARrD,uBAaxB,CACLC,OAAQH,EAASvc,IAAiB2c,OAAS3c,IAAiB8a,KAC5DF,aAAcA,EAAa7iC,WAC3BskC,eAAgBA,EAAetkC,WAC/BykC,aAAcA,EAAazkC,WAC3BukC,aAAcA,EAAa/pC,WAC3BkqC,WAAYA,EAAW1kC,aAnBM,4CAAH,qDAuBjB6kC,EAAa,uCAAG,WAAOjB,GAAP,mBAAAtsC,EAAA,6DACrByE,EAAUqB,cACVgc,EAAQwqB,EAAOlqB,KAAI,SAACqoB,GAAD,MAAY,CACnChmC,UACA+d,KAAM,SACNC,OAAQ,CAACgoB,OALgB,SAOJ1nB,YAAyC9B,EAAgBa,GAPrD,cAOrB3hB,EAPqB,yBAQpBA,GARoB,2CAAH,sDAWbqtC,EAA0B,SAAC/C,EAAexW,GACrD,MAAO,CACLwW,QACAxW,aACA4W,UAAW,KACX3W,SAAU,KACV4W,UAAW,KACXC,WAAY,KACZC,YAAavhC,IAAOhC,UAAUiC,KAAK,GAAG1B,SACtCojC,WAAY3hC,IAAOhC,UAAUiC,KAAK,GAAG1B,SACrCmjC,WAAY1hC,IAAOhC,UAAUiC,KAAK,GAAG1B,SACrCylC,oBAAqBhkC,IAAOhC,UAAUiC,KAAK,GAAG1B,SAC9C0lC,aAAcjkC,IAAOhC,UAAUiC,KAAK,GAAG1B,SACvC2lC,cAAc,IAILC,EAAgB,SAACC,GAC5B,OAAOA,EAAOppB,QAAO,SAAC0c,EAAO5O,GAC3B,OAAO,2BACF4O,GADL,kBAEG5O,EAAMkY,MAAMvnC,WAAaqvB,MAE3B,KASQub,EAAiB,SAAC11B,EAAiB21B,EAAsCzB,GACpF,OAAOyB,EAAQtpB,QAAO,SAAC0c,EAAO6M,EAAgBrO,GAC5C,IAAKqO,EACH,OAAO7M,EAIT,GAAI6M,EAAe9lC,OAAO+lC,GAAG,GAC3B,OAAO9M,EAGT,IAAMsJ,EAAQ6B,EAAO3M,GAAOz8B,WAE5B,OAAO,2BACFi+B,GADL,kBAEG/oB,EAFH,2BAGO+oB,EAAM/oB,IAHb,kBAIKqyB,EAvByC,SAACuD,GAAD,MAAiE,CACjHjE,SAAsC,IAA5BiE,EAAejE,SAAiBrZ,IAAYsZ,KAAOtZ,IAAYuZ,KACzE/hC,OAAQ8lC,EAAe9lC,OAAOF,SAC9BkiC,QAAS8D,EAAe9D,SAoBTgE,CAAmCF,SAG/C,KAMQG,EAAqC,SAAChuC,GACjD,IACEsqC,EAYEtqC,EAZFsqC,MACAxW,EAWE9zB,EAXF8zB,WACA4W,EAUE1qC,EAVF0qC,UACA3W,EASE/zB,EATF+zB,SACA4W,EAQE3qC,EARF2qC,UACAC,EAOE5qC,EAPF4qC,WACAC,EAME7qC,EANF6qC,YACAI,EAKEjrC,EALFirC,WACAD,EAIEhrC,EAJFgrC,WACAuC,EAGEvtC,EAHFutC,aACAD,EAEEttC,EAFFstC,oBACAE,EACExtC,EADFwtC,aAGF,MAAO,CACLlD,MAAOA,EAAM/hC,WACburB,WAAYA,EAAWvrB,WACvBmiC,UAAWA,EAAUniC,WACrBwrB,SAAUA,EAASxrB,WACnBoiC,UAAWA,EAAUmD,GAAG,GAAK,KAAOnD,EAAU9iC,SAC9C+iC,WAAYA,EAAWkD,GAAG,GAAK,KAAOlD,EAAW/iC,SACjDgjC,YAAaA,EAAYhjC,SACzBojC,WAAYA,EAAWpjC,SACvBmjC,WAAYA,EAAWnjC,SACvB0lC,aAAcA,EAAa1lC,SAC3BylC,oBAAqBA,EAAoBzlC,SACzC2lC,iBAQSS,EAAoB,SAAmD/tC,GAClF,OAAOsC,OAAOC,KAAKvC,GAAMokB,QAAO,SAAC0c,EAAO5+B,GACtC,IAAMa,EAAQ/C,EAAKkC,GAEnB,OAAIa,GAAyB,eAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAO2T,MACX,2BACFoqB,GADL,kBAEG5+B,EAAMkH,IAAOhC,UAAUiC,KAAKtG,KAI1B,2BACF+9B,GADL,kBAEG5+B,EAAMa,MAER,M,6BEzaL,4UAYairC,EAAmB,WAA6B,IAA5BC,EAA2B,wDACpDjnB,EAAW+U,cACjB,EAAwBmS,cAAhBC,EAAR,EAAQA,YACR,EAAoB7nC,cAAZyR,EAAR,EAAQA,QAERzW,qBAAU,WACR,IACM8sC,GADeH,EAAiBI,IAAcC,KAC1BvsB,KAAI,SAACwsB,GAAD,OAAiBA,EAAYC,OAE3DxnB,EAASynB,YAA0BL,IAE/Br2B,GACFiP,EAAS0nB,YAAuB,CAAE32B,UAASq2B,YAE5C,CAACH,EAAgBjnB,EAAUmnB,EAAap2B,KAQhC42B,EAAsB,WACjC,IAAM3nB,EAAW+U,cACT6S,EAAgBV,cAAhBU,YAERttC,qBAAU,WACR0lB,EAASynB,YAA0B,CAAC,EAAG,OACtC,CAACznB,EAAU4nB,KAGHC,EAAW,WAEtB,OADc1nB,aAAY,SAAC/lB,GAAD,OAAkBA,EAAM+4B,UAIvC2U,EAAiB,SAACN,GAE7B,OADarnB,aAAY,SAAC/lB,GAAD,OAAkBA,EAAM+4B,MAAMn6B,KAAKmf,MAAK,SAAC4vB,GAAD,OAAOA,EAAEP,MAAQA,SASvEQ,EAAc,SAACR,GAC1B,IAAMS,EAAOH,EAAeN,GAE5B,MAAO,CACL/f,UAAWwgB,EAAKrL,SAAW,IAAIx8B,IAAU6nC,EAAKrL,SAASnV,WAAatnB,IACpE+nC,aAAcD,EAAKrL,SAAW,IAAIx8B,IAAU6nC,EAAKrL,SAASsL,cAAgB/nC,IAC1Em+B,cAAe2J,EAAKrL,SAAW,IAAIx8B,IAAU6nC,EAAKrL,SAAS0B,eAAiBn+B,IAC5EgoC,SAAUF,EAAKrL,SAAW,IAAIx8B,IAAU6nC,EAAKrL,SAASuL,UAAYhoC,MAUzDioC,EAAkB,SAAC3kC,GAC9B,IAvBkC4kC,EAuB5BJ,GAvB4BI,EAuBD5kC,EAtBpB0c,aAAY,SAAC/lB,GAAD,OAAkBA,EAAM+4B,MAAMn6B,KAAKmf,MAAK,SAAC4vB,GAAD,OAAOA,EAAEM,WAAaA,SAuBjFC,EAP2B,SAACd,GAClC,IAAMS,EAAOH,EAAeN,GAC5B,OAAOS,GAAQ,IAAI7nC,IAAU6nC,EAAK3qB,MAAMirB,WAKZC,CAAoBP,EAAKT,KACjDiB,EAAetoC,IAEnB,GAAI8nC,EAAKS,eAAiBT,EAAKU,oBAAqB,CAElD,IAEMC,EAFyBN,EAAoBvnC,MAAMknC,EAAKY,kBAED9nC,MAAM,GAE7D+nC,EAAgB7nC,YAAiB,IAAIb,IAAU6nC,EAAKS,gBAC1DD,EAAeG,EAA8B5rC,IAAI8rC,GAGnD,OAAOL,GAKIM,EAAkB,WAC7B,IAAMC,EAAclB,EAAe,GACnC,OAAO,IAAI1nC,IAAU4oC,EAAYC,WAAWV,YAGjCW,EAAmB,WAC9B,IAAMC,EAAcrB,EAAe,GACnC,OAAO,IAAI1nC,IAAU+oC,EAAY7rB,MAAMirB,a,6BCtGzC,oBAGMlV,EAAsB,CAC1B,CACEhb,OAAQ,EACRogB,aAAcj7B,IAAOC,KACrBmgC,aAAcpgC,IAAOC,KACrBkb,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENL,aAAcC,IAAa6wB,KAC3BC,SAAS,EACTtL,cAAe,KACfuL,UAAW,EACXxc,YAAY,GAEd,CACEzU,OAAQ,EACRogB,aAAcj7B,IAAOC,KACrBmgC,aAAcpgC,IAAOmG,KACrBgV,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENL,aAAcC,IAAa6wB,KAC3BC,SAAS,EACTC,UAAW,EACXvL,cAAe,OAOH1K,O,6BCpChB,oBAaekW,IAVE,WACf,IAAMC,EAAertC,qBAAWstC,KAEhC,QAAqB3vC,IAAjB0vC,EACF,MAAM,IAAIptC,MAAM,4BAGlB,OAAOotC,I,+BCVT,uDAGME,EAAUC,cAEH/pC,EAAoB,IAAIwC,IAAOwnC,UAAUC,gBAAgBH,I,6BCLtE,+QAgDO,SAASI,EACd1sC,EACAI,GAEA,IAAMusC,EAA2Bt2B,mBAC/B,yCAAMjW,QAAN,IAAMA,OAAN,EAAMA,EAAQ0lB,QAAO,SAAClnB,GAAD,OAAqD,IAA1BwT,YAAS,OAACxT,QAAD,IAACA,OAAD,EAACA,EAAGoB,mBAA7D,QAAoF,KACpF,CAACI,IAGGwsC,EAA0Bv2B,mBAAQ,kBAAMs2B,EAAgBhvB,KAAI,SAACkvB,GAAD,OAAQA,EAAG7sC,aAAU,CAAC2sC,IAElFG,EAAW9iB,YAA8B4iB,EAAyBG,IAAiB,YAAa,CAAC/sC,IAEjGgtC,EAAsB32B,mBAAQ,kBAAMy2B,EAASG,MAAK,SAACC,GAAD,OAAeA,EAAU5qB,aAAU,CAACwqB,IAE5F,MAAO,CACLz2B,mBACE,kBACErW,GAAW2sC,EAAgBjrB,OAAS,EAChCirB,EAAgB3sB,QAA4D,SAACyG,EAAMvG,EAAO9B,GAAO,IAAD,IACxFzf,EAAK,OAAGmuC,QAAH,IAAGA,GAAH,UAAGA,EAAW1uB,UAAd,iBAAG,EAAeK,cAAlB,aAAG,EAAwB,GAChChb,EAAS9E,EAAQuU,IAAKC,OAAOxU,EAAMF,iBAAc/B,EAIvD,OAHI+G,IACFgjB,EAAKvG,EAAMlgB,SAAW,IAAI+mB,IAAY7G,EAAOzc,IAExCgjB,IACN,IACH,KACN,CAACzmB,EAAS2sC,EAAiBG,IAE7BE,GAIG,SAASG,EACdntC,EACAI,GAEA,OAAOssC,EAAqC1sC,EAASI,GAAQ,GAIxD,SAASgtC,EAAgBz5B,EAAkBuM,GAChD,IAAMkd,EAAgB+P,EAAiBx5B,EAAS,CAACuM,IACjD,GAAKA,EACL,OAAOkd,EAAcld,EAAMlgB,SAGtB,SAASqtC,EACd15B,EACA25B,GAEA,IAAMltC,EAASiW,mBACb,yCAAMi3B,QAAN,IAAMA,OAAN,EAAMA,EAAYxnB,QAAO,SAACrR,GAAD,OAAiCA,aAAoB/O,cAA9E,QAAwF,KACxF,CAAC4nC,IAGGlQ,EAAgB+P,EAAiBx5B,EAASvT,GAE1CmtC,EA/FD,SAAwBC,GAG7B,IAAMC,EAAoBj0B,cAEpBjZ,EAAsB8V,mBAC1B,kBACEm3B,EACIA,EACG7vB,IAAIvL,KACJ0T,QAAO,SAACvqB,GAAD,OAA0B,IAANA,KAC3B+sB,OACH,KACN,CAACklB,IAGG5jB,EAAUN,YACdmkB,EACA,gBACAltC,EAAUod,KAAI,SAAC3d,GAAD,MAAa,CAACA,OAG9B,OAAOqW,mBACL,kBACE9V,EAAUyf,QAA8C,SAACyG,EAAMzmB,EAASoe,GAAO,IAAD,IACtEzf,EAAK,OAAGirB,QAAH,IAAGA,GAAH,UAAGA,EAAUxL,UAAb,iBAAG,EAAcK,cAAjB,aAAG,EAAuB,GAErC,OADI9f,IAAO8nB,EAAKzmB,GAAWgkC,IAAeC,MAAM/wB,IAAKC,OAAOxU,EAAMF,cAC3DgoB,IACN,MACL,CAAClmB,EAAWqpB,IAkEK8jB,CADUr3B,mBAAQ,yCAAMi3B,QAAN,IAAMA,OAAN,EAAMA,EAAYL,MAAK,SAACx4B,GAAD,OAAcA,IAAaC,cAAlD,WAAmE,CAAC44B,IACzD,CAAC35B,GAAW,IAE5D,OAAO0C,mBACL,yCACEi3B,QADF,IACEA,OADF,EACEA,EAAY3vB,KAAI,SAAClJ,GACf,GAAKd,GAAYc,EACjB,OAAIA,aAAoB/O,IAAc03B,EAAc3oB,EAASzU,SACzDyU,IAAaC,IAAc64B,EAAW55B,QAA1C,YAJJ,QAMQ,KACR,CAACA,EAAS25B,EAAYC,EAAYnQ,IAI/B,SAASuQ,EAAmBh6B,EAAkBc,GACnD,OAAO44B,EAAoB15B,EAAS,CAACc,IAAW,GAI3C,SAASm5B,IACd,IAAQj6B,EAAYzR,cAAZyR,QACFomB,EAAY3Z,cAEZ0sB,EAAWK,EAAgB,OAACx5B,QAAD,IAACA,SAAWjX,EADtB2Z,mBAAQ,kBAAMnY,OAAOgjB,OAAP,OAAc6Y,QAAd,IAAcA,IAAa,MAAK,CAACA,KAEtE,cAAO+S,QAAP,IAAOA,IAAY,K,6BCnIrB,4MAAO,IAAMe,EAAoBpyC,8DACpBisC,EAAuBjsC,iEACvBqyC,EAAoBryC,8DACpBsyC,EAAsBtyC,0CACtBuyC,EAAoBvyC,4BACpBwyC,EAAY,UAAMD,EAAN,YACZE,EAAgB,UAAMF,EAAN,iB,wuECIdG,IANE,WACf,MAA8BzqB,cAA9B,mBAAOC,EAAP,KAAewN,EAAf,KAEA,MAAO,CAAExN,SAAQyqB,MADHrvC,qBAAWsvC,KACDld,iB,uKCJpBmd,EAAOpvC,YAAOC,IAAPD,CAAH,0KAMC,gBAAGE,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGtB,qBAAGG,WACJ,qBAAGC,UACI,qBAAGC,gBACA,qBAAG2uC,MAAkBG,OAAOC,cAEnCF,MAER,IAAMG,EAAYvvC,YAAOovC,EAAPpvC,CAAH,gFACA,qBAAGkvC,MAAkBG,OAAOC,cAC5B,qBAAGJ,MAAkBG,OAAOG,iBAGrCC,EAAgBzvC,YAAOovC,EAAPpvC,CAAH,gFACJ,qBAAGkvC,MAAkBG,OAAOK,cAC5B,qBAAGR,MAAkBG,OAAOC,cAGrCK,EAAW3vC,YAAOovC,EAAPpvC,CAAH,sDACC,qBAAGkvC,MAAkBG,OAAOO,a,gCC5BlD,sGAAO,IAEM9yC,EAAe,CAAEV,OAAQ,QAASmC,SAAU,UAAWsxC,KAAM,MA2B7DhyC,EAAY,CACvB,QA9B0B,CAAEzB,OAAQ,QAASmC,SAAU,6CAAWsxC,KAAM,MA+BxE,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,iCAASsxC,KAAM,MA+BtE,QAAS/yC,EACT,QA9B0B,CAAEV,OAAQ,QAASmC,SAAU,UAAWsxC,KAAM,MA+BxE,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,mDAAYsxC,KAAM,MA+BzE,QA9B4B,CAAEzzC,OAAQ,QAASmC,SAAU,aAAWsxC,KAAM,SA+B1E,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,cAAesxC,KAAM,MA+B5E,SA9B2B,CAAEzzC,OAAQ,SAAUmC,SAAU,WAAYsxC,KAAM,OA+B3E,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,cAAYsxC,KAAM,MA+BzE,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,iCAASsxC,KAAM,MA+BtE,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,SAAUsxC,KAAM,MA+BvE,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,mBAAoBsxC,KAAM,MA+BjF,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,WAAYsxC,KAAM,MA+BzE,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,qBAAOsxC,KAAM,MA+BpE,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,qBAAOsxC,KAAM,MA+BpE,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,aAAcsxC,KAAM,MA+B3E,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,SAAUsxC,KAAM,MA+BvE,QA9B4B,CAAEzzC,OAAQ,QAASmC,SAAU,wBAAsBsxC,KAAM,SA+BrF,QA9B4B,CAAEzzC,OAAQ,QAASmC,SAAU,eAAasxC,KAAM,SA+B5E,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,iBAAUsxC,KAAM,MA+BvE,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,6CAAWsxC,KAAM,MA+BxE,QA9B4B,CAAEzzC,OAAQ,QAASmC,SAAU,UAAWsxC,KAAM,MA+B1E,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,iCAASsxC,KAAM,MA+BtE,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,eAAUsxC,KAAM,MA+BvE,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,+DAAcsxC,KAAM,MA+B3E,QA9B0B,CAAEzzC,OAAQ,QAASmC,SAAU,uBAAcsxC,KAAM,MA+B3E,QA9B4B,CAAEzzC,OAAQ,QAASmC,SAAU,2BAAQsxC,KAAM,SA+BvE,QA9B4B,CAAEzzC,OAAQ,QAASmC,SAAU,2BAAQsxC,KAAM,UAiC5DC,EAAe9wC,OAAOgjB,OAAOnkB,I,8EC7C3BkyC,IAZM,SAACj1B,GACpB,IAAQpb,EAAMC,cAAND,EACR,EAA0BswC,cAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACPC,EAA0BC,aAAeH,EAAOC,GAAhDC,sBAER,OACE,cAAC,IAAD,yBAAQt1B,QAASs1B,GAA2Br1B,GAA5C,aACGpb,EAAE,sB,8BCXT,4KAQO,SAASssB,IAQd,MAA6BhpB,cAArBE,EAAR,EAAQA,QAASuR,EAAjB,EAAiBA,QACXiP,EAAWC,cAEjB,OAAOhlB,uBACL,SACEnC,GAMI,IAAD,yDAD4G,GAH7GiwB,EAIC,EAJDA,QACAC,EAGC,EAHDA,SACA2F,EAEC,EAFDA,MAGF,GAAK5d,GACAvR,EAAL,CAEA,IAAQkvB,EAAS51B,EAAT41B,KACR,IAAKA,EACH,MAAMtyB,MAAM,8BAEd4jB,EAASqI,YAAe,CAAEqG,OAAMrsB,KAAM0O,EAASvR,UAASwpB,WAAUD,UAAS4F,cAE7E,CAAC3O,EAAUxgB,EAASuR,IAKjB,SAAS47B,IAAgE,IAAD,EACrEntC,EAAYF,cAAZE,QAEFpF,EAAQ+lB,aAAgD,SAAC2R,GAAD,OAAOA,EAAErD,gBAEvE,OAAOjvB,GAAO,UAAGpF,EAAMoF,UAAT,QAA0B,GAenC,SAASotC,EAAoB5d,GAClC,OAAO,IAAInB,MAAOC,UAAYkB,EAAGH,UAAY,MAIxC,SAAS/G,EAAsB/R,EAAkCyR,GACtE,IAAMqlB,EAAkBF,IACxB,OAAOl5B,mBACL,iBAC0B,kBAAjBsC,GACY,kBAAZyR,GACPlsB,OAAOC,KAAKsxC,GAAiBxC,MAAK,SAAC3b,GACjC,IAAMM,EAAK6d,EAAgBne,GAC3B,IAAKM,EAAI,OAAO,EAChB,GAAIA,EAAGG,QACL,OAAO,EAET,IAAQnG,EAAagG,EAAbhG,SACR,QAAKA,IACEA,EAASxB,UAAYA,GAAWwB,EAASjT,eAAiBA,GAAgB62B,EAAoB5d,SAEzG,CAAC6d,EAAiBrlB,EAASzR,M,0VClExB,SAAS+2B,IACd,OAAO3sB,aAAwC,SAAC/lB,GAAD,OAAWA,EAAMg6B,QAG3D,SAAS2Y,IAMd,IAAM/sB,EAAWC,cACX+sB,EAAsB/xC,uBAC1B,SAACw0B,EAAc5d,GACbmO,EACE/gB,YAAe,CACbwwB,QACA7P,WAAY/N,aAAoB/O,IAAQ+O,EAASzU,QAAUyU,IAAaC,IAAQ,MAAQ,QAI9F,CAACkO,IAqBH,MAAO,CACLitB,eAnBqBhyC,uBAAY,WACjC+kB,EAAS9gB,iBACR,CAAC8gB,IAkBFgtB,sBACAE,YAjBkBjyC,uBAClB,SAACw0B,EAAcH,GACbtP,EAASlhB,YAAU,CAAE2wB,QAAOH,kBAE9B,CAACtP,IAcDmtB,kBAXwBlyC,uBACxB,SAACu0B,GACCxP,EAAS5gB,YAAa,CAAEowB,iBAE1B,CAACxP,KAYE,SAASotB,EAAerxC,EAAgB8V,GAC7C,GAAK9V,GAAU8V,EAGf,IACE,IAAMw7B,EAAmBC,qBAAWvxC,EAAO8V,EAAS/Q,UAAUjF,WAC9D,GAAyB,MAArBwxC,EACF,OAAOx7B,aAAoB/O,IACvB,IAAIqhB,IAAYtS,EAAUvB,IAAKC,OAAO88B,IACtCjM,IAAeC,MAAM/wB,IAAKC,OAAO88B,IAEvC,MAAOz3B,GAEPC,QAAQ4Q,MAAR,yCAAgD1qB,EAAhD,KAA0D6Z,IAM9D,IAAM23B,EAAoC,CACxC,6CACA,6CACA,8CAQF,SAASC,EAAgBljC,EAAcmjC,GACrC,OACEnjC,EAAMq2B,MAAM+M,KAAKrD,MAAK,SAAC/sB,GAAD,OAAWA,EAAMlgB,UAAYqwC,MACnDnjC,EAAMq2B,MAAMtd,MAAMgnB,MAAK,SAACloB,GAAD,OAAUA,EAAKwrB,eAAevwC,UAAYqwC,KAK9D,SAASG,IAMb,IAAD,QAuCIC,EAKe,EAIwC,EA/CnD98B,EAAY1R,cAAZ0R,QAER,EAMI+7B,IALFzd,EADF,EACEA,iBACAC,EAFF,EAEEA,WAC6BI,EAH/B,EAGG7wB,IAAMuqB,OAAUxJ,WACa+P,EAJhC,EAIG9wB,IAAM0wB,QAAW3P,WAClB4P,EALF,EAKEA,UAGIse,EAAgBnuB,YAAY+P,GAC5Bqe,EAAiBpuB,YAAYgQ,GAC7Bqe,EAAkBC,YAAM,OAACze,QAAD,IAACA,SAAa11B,GACtCo0C,EAAiB,UAAkB,OAAd1e,EAAqBze,EAAUi9B,EAAgB5wC,eAAnD,QAA+D,KAEhF+wC,EAAwB1D,YAAmB,OAAC15B,QAAD,IAACA,SAAWjX,EAAW,QACtEg0C,QADsE,IACtEA,SAAiBh0C,EADqD,OAEtEi0C,QAFsE,IAEtEA,SAAkBj0C,IAGds0C,EAAqB/e,IAAqBxwB,IAAMuqB,MAChDilB,EAAejB,EAAe9d,EAAD,UAAc8e,EAAYN,EAAgBC,SAA1C,aAA6Dj0C,GAE1Fw0C,EAAmBC,YAAgBH,EAAYC,OAAev0C,EAA5B,OAAuCi0C,QAAvC,IAAuCA,SAAkBj0C,GAC3F00C,EAAoBC,YAAgB,OAACX,QAAD,IAACA,SAAiBh0C,EAAYs0C,OAA2Bt0C,EAAfu0C,GAE9EK,EAAUN,EAAYE,EAAmBE,EAEzCG,GAAgB,mBACnB9vC,IAAMuqB,MAAQ+kB,EAAsB,IADjB,cAEnBtvC,IAAM0wB,OAAS4e,EAAsB,IAFlB,GAKhBzD,GAA2C,mBAC9C7rC,IAAMuqB,MADwC,OAChC0kB,QADgC,IAChCA,SAAiBh0C,GADe,cAE9C+E,IAAM0wB,OAFwC,OAE/Bwe,QAF+B,IAE/BA,SAAkBj0C,GAFa,IAM5CiX,IACH88B,EAAa,kBAGVQ,KACHR,EAAU,UAAGA,SAAH,QAAiB,mBAGxBnD,EAAW7rC,IAAMuqB,QAAWshB,EAAW7rC,IAAM0wB,UAChDse,EAAU,UAAGA,SAAH,QAAiB,kBAG7B,IACyB,EADnBe,EAAcp/B,YAAU0+B,GAC9B,GAAKA,GAAOU,GAEL,IAC6C,IAAlDrB,EAAwB/oB,QAAQoqB,IAC/BN,GAAoBd,EAAgBc,EAAkBM,IACtDJ,GAAqBhB,EAAgBgB,EAAmBI,GACzD,CAAC,IAAD,EACAf,EAAU,UAAGA,SAAH,QAAiB,0BAN3BA,EAAU,UAAGA,SAAH,QAAiB,oBAS7B,MAA0BxsB,cAAnB6H,EAAP,oBAEM2lB,EAA0BH,GAAWxlB,GAAmBC,YAA+BulB,EAASxlB,GAGtG,EAA8B,CAC5BylB,EAAiB9vC,IAAMuqB,OACvBylB,EAA0BA,EAAwBhwC,IAAMuqB,OAAS,MAF5D0lB,EAAP,KAAkBC,EAAlB,KASA,OAJID,GAAaC,GAAYD,EAAU7mB,SAAS8mB,KAC9ClB,EAAU,uBAAmBkB,EAASl9B,SAASpO,OAArC,aAGL,CACLinC,aACAiE,mBACAN,eACAK,QAAO,OAAEA,QAAF,IAAEA,SAAW50C,EACpB+zC,cAIJ,SAASmB,EAA8BC,GACrC,GAAwB,kBAAbA,EAAuB,CAChC,IAAMlqB,EAAQvV,YAAUy/B,GACxB,GAAIlqB,EAAO,OAAOA,EAClB,GAA+B,QAA3BkqB,EAASnvB,cAAyB,MAAO,MAC7C,IAAc,IAAViF,EAAiB,MAAO,MAE9B,cAAO,YAAS,GAYlB,IAAMmqB,EAAiB,qFACjBlN,EAAgB,sBAUf,SAASmN,EAA2BC,GAAgC,IAAD,EACpEtB,EAAgBkB,EAA8BI,EAAStB,eACvDC,EAAiBiB,EAA8BI,EAASrB,gBACxDD,IAAkBC,IACmB,kBAA5BqB,EAASrB,eAClBD,EAAgB,GAEhBC,EAAiB,IAIrB,IA/BoCkB,EA+B9Bzf,EApBR,SAA4BA,GAC1B,MAAyB,kBAAdA,EAA+B,KAC1BhgB,YAAUggB,KAEtB0f,EAAenwB,KAAKyQ,IACpBwS,EAAcjjB,KAAKyQ,GADoBA,EAEpC,MAcW6f,CAAmBD,EAAS5f,WAE9C,OAAO,EAAP,iBACG3wB,IAAMuqB,MAAQ,CACbxJ,WAAYkuB,IAFhB,cAIGjvC,IAAM0wB,OAAS,CACd3P,WAAYmuB,IALhB,2BA/B2B,kBAFSkB,EAwCOG,EAASE,cAtCZhN,MAAMxE,WAAWmR,IAAwB,GAAXA,GA+BtE,iCA5BF,SAA2CA,GACzC,MAA2B,kBAAbA,GAAoD,WAA3BA,EAASh0B,cAA6Bpc,IAAM0wB,OAAS1wB,IAAMuqB,MAmC9EmmB,CAAkCH,EAASI,aAR/D,0BASEhgB,GATF,EAcK,SAASigB,IAGd,IAAQjwC,EAAYH,cAAZG,QACFwgB,EAAWC,cACXmvB,EChQO,WACb,IAAQM,EAAWC,cAAXD,OACR,OAAOj8B,mBACL,kBAAOi8B,GAAUA,EAAO5wB,OAAS,EAAI8G,gBAAM8pB,EAAQ,CAAEE,aAAa,EAAOC,mBAAmB,IAAU,KACtG,CAACH,ID4PcI,GACjB,EAA4B71C,qBAA5B,mBAAO4hB,EAAP,KAAek0B,EAAf,KAsBA,OAlBAz1C,qBAAU,WACR,GAAKkF,EAAL,CACA,IAAMsQ,EAASq/B,EAA2BC,GAE1CpvB,EACE7gB,YAAiB,CACfmwB,WAAYxf,EAAOwf,WACnBG,MAAO3f,EAAOuf,iBACdK,gBAAiB5f,EAAOjR,IAAMuqB,OAAOxJ,WACrC+P,iBAAkB7f,EAAOjR,IAAM0wB,QAAQ3P,WACvC4P,UAAW,QAIfugB,EAAU,CAAErgB,gBAAiB5f,EAAOjR,IAAMuqB,OAAOxJ,WAAY+P,iBAAkB7f,EAAOjR,IAAM0wB,QAAQ3P,gBAEnG,CAACI,EAAUxgB,IAEPqc,I,6BE3RT,oJAcawM,EAAiBtpB,YAO3B,+BACU+vB,EAAuB/vB,YAAmC,qCAC1DmwB,EAAsBnwB,YAIhC,oCACUgwB,EAAqBhwB,YAI/B,oC,8BChCH,oEAAO,IAAMwsB,EAA2C,SAAC,GAOlD,IANLC,EAMI,EANJA,aACAC,EAKI,EALJA,QACAC,EAII,EAJJA,WAII,IAHJP,wBAGI,MAHe,EAGf,MAFJC,yBAEI,MAFgB,EAEhB,MADJR,sBACI,MADa,EACb,EAEEolB,EAAkB,IAAM5kB,EAE1B6kB,EAAexkB,EAAU,IAEzBb,IAIFqlB,GADoBxkB,EADMA,EAAU,IAAOb,GAEd,KAG/B,IAAMslB,EAAsB1kB,EAAe,IAErC2kB,EAAY,IAAOzkB,EAEnB0kB,EAAcD,EAAS,SAAI,EAAIF,EAAeD,EAAqBA,EAAkBE,GAI3F,OAAOpS,YAFgBsS,EAAcD,GAEJ3uC,QAAQ2pB,KAG9BQ,EAAS,SAAC,GAErB,OAF0D,EAAnCC,aAAmC,EAArBC,eACgB,M,iWCpBjDwkB,EAAkB77B,cAGlB87B,EAAoC,SAACx3C,EAAUy3C,GACnD,IACEvK,EAaEltC,EAbFktC,OACAwK,EAYE13C,EAZF03C,UACAC,EAWE33C,EAXF23C,QACAC,EAUE53C,EAVF43C,kBACAC,EASE73C,EATF63C,gBACAC,EAQE93C,EARF83C,YACAC,EAOE/3C,EAPF+3C,cACAC,EAMEh4C,EANFg4C,aACAC,EAKEj4C,EALFi4C,sBACAC,EAIEl4C,EAJFk4C,YACAC,EAGEn4C,EAHFm4C,eACAC,EAEEp4C,EAFFo4C,uBACAC,EACEr4C,EADFq4C,iBAGIC,EAAY91C,OAAOC,KAAKgf,KAAeyrB,GACvCqL,EAA2BJ,EAAel2B,KAAI,SAACu2B,GAAD,OAAmB9wC,YAA4B8wC,MAC7FC,EAAmCL,EAAuBn2B,KAAI,SAACy2B,GAAD,OAClEhxC,YAA4BgxC,MAExBC,EAA6BN,EAAiBp2B,KAAI,SAAC22B,GAAD,OAAYlxC,YAA4BkxC,MAEhG,MAAO,CACLpV,WAAW,EACXiU,YACAvK,OAAQzrB,IAAc62B,GACtBZ,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAW30C,WACtB40C,QAAO,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAS50C,WAClB60C,kBAAmBlwC,YAA4BkwC,GAC/CC,gBAAe,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAiB90C,WAClC+0C,YAAW,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAa/0C,WAC1Bg1C,cAAa,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAeh1C,WAC9Bi1C,aAAY,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAcj1C,WAC5Bk1C,sBAAuBvwC,YAA4BuwC,GACnDC,cACAC,eAAgBI,EAChBH,uBAAwBK,EACxBJ,iBAAkBM,IAIhBE,EAAkC,SAACpB,GACvC,MAAO,CACLjU,WAAW,EACXiU,YACAvK,OAAQzrB,IAAc2N,QACtBsoB,UAAW,GACXC,QAAS,GACTC,kBAAmB,GACnBC,gBAAiB,GACjBC,YAAa,GACbC,cAAe,GACfC,aAAc,GACdC,sBAAuB,GACvBC,YAAa,KACbC,eAAgB,GAChBC,uBAAwB,GACxBC,iBAAkB,KAITS,EAAY,uCAAG,WAAOrB,GAAP,eAAA53C,EAAA,+EAEE03C,EAAgBwB,YAAYtB,GAF9B,cAElBuB,EAFkB,yBAGjBxB,EAAkCwB,EAAavB,IAH9B,yDAKjBoB,EAAgCpB,IALf,yDAAH,sDASZwB,EAAsB,uCAAG,WAAOC,GAAP,mBAAAr5C,EAAA,6DAC9B8hB,EAAQu3B,EAAWj3B,KAAI,SAACnG,GAAD,MAAS,CACpCuG,KAAM,cACN/d,QAASW,cACTqd,OAAQ,CAACxG,OAJyB,kBAOP8G,YAAYpC,EAAcmB,EAAO,CAAEkB,gBAAgB,IAP5C,cAO5Bs2B,EAP4B,OAQ5BC,EAAqBD,EAAal3B,KAAI,SAACQ,EAAK+c,GAAN,OAC1CgY,EAAkC/0B,EAAI,GAAIy2B,EAAW1Z,OATrB,kBAW3B4Z,GAX2B,uCAalCr8B,QAAQD,MAAR,MAbkC,kBAc3B6E,EAAMM,KAAI,SAACC,EAAMsd,GAAP,OAAiBqZ,EAAgCK,EAAW1Z,QAd3C,yDAAH,sDAkBtB6Z,EAA8B,uCAAG,wCAAAx5C,EAAA,sEAEpC8hB,EAAQ,CAAC,mBAAoB,iCAAiCM,KAAI,SAACugB,GAAD,MAAa,CACnFl+B,QAASW,cACTod,KAAMmgB,MAJkC,SAM2B5f,YACnEpC,EACAmB,GARwC,gEAMlC23B,EANkC,2BAMdC,EANc,uBAWnC,CACLD,iBAAkBA,EAAmBA,EAAiBv2C,WAAa,KACnEw2C,8BAA+BA,EAAgCA,EAA8Bx2C,WAAa,OAblE,2DAgBnC,CACLu2C,iBAAkB,KAClBC,8BAA+B,OAlBS,0DAAH,qDAuB9BC,EAAmB,SAACF,GAG/B,IAFA,IAAMG,EAAiBC,SAASJ,EAAkB,IAC5CK,EAAW,GACRj3B,EAAI,EAAGA,EAAIk3B,IAAgCl3B,IAClDi3B,EAASrhB,KAAKmhB,EAAiB/2B,GAEjC,OAAOi3B,EAAS13B,KAAI,SAAC43B,GAAD,OAAaA,EAAQ92C,eAG9B+2C,EAA4B,SACvCd,GAEA,IACqBe,EAGjBf,EAHFpB,kBACiBoC,EAEfhB,EAFFnB,gBACuBoC,EACrBjB,EADFf,sBAGIJ,EAAkBl9B,mBAAQ,WAC9B,OAAO,IAAIrT,IAAU0yC,KACpB,CAACA,IAEEpC,EAAoBj9B,mBAAQ,WAChC,OAAO,IAAIrT,IAAUyyC,KACpB,CAACA,IAEE9B,EAAwBt9B,mBAAQ,WACpC,OAAO,IAAIrT,IAAU2yC,KACpB,CAACA,IAEJ,MAAO,CACLzW,UAAWwV,EAAYxV,UACvBiU,UAAWuB,EAAYvB,UACvByC,YAAalB,EAAYkB,YACzBhN,OAAQ8L,EAAY9L,OACpBwK,UAAWsB,EAAYtB,UACvBC,QAASqB,EAAYrB,QACrBC,oBACAC,kBACAC,YAAakB,EAAYlB,YACzBC,cAAeiB,EAAYjB,cAC3BC,aAAcgB,EAAYhB,aAC1BC,wBACAC,YAAac,EAAYd,YACzBC,eAAgBa,EAAYb,eAC5BC,uBAAwBY,EAAYZ,uBACpCC,iBAAkBW,EAAYX,mBAIrB8B,EAAsB,SAACC,GAElC,OADuBA,EAAQhwB,QAAO,SAACiwB,GAAD,OAAYA,EAAOnN,UACnClnB,OAAS,I,4MC7JlBs0B,EApBsB,CAQnC,CACE5L,IAAK,KACLa,SAAU,aACVgL,YAAa,CACX,GAAI,GACJ,GAAI,8CAEN/1B,MAAO9f,IAAOwP,IACdi8B,WAAYzrC,IAAOM,O,kECyFRw1C,EAxFA,uCAAG,WAAOrL,GAAP,mEAAAtvC,EAAA,6DACR6uC,EAAwCS,EAAxCT,IAAK6L,EAAmCpL,EAAnCoL,YAAa/1B,EAAsB2qB,EAAtB3qB,MAAO2rB,EAAehB,EAAfgB,WAC3BsK,EAAYp2C,YAAWk2C,GACvB54B,EAAQ,CAEZ,CACErd,QAASD,YAAWmgB,EAAMlgB,SAC1B+d,KAAM,YACNC,OAAQ,CAACm4B,IAGX,CACEn2C,QAASD,YAAW8rC,EAAW7rC,SAC/B+d,KAAM,YACNC,OAAQ,CAACm4B,IAGX,CACEn2C,QAASm2C,EACTp4B,KAAM,YACNC,OAAQ,CAAC1d,gBAGX,CACEN,QAASm2C,EACTp4B,KAAM,eAGR,CACE/d,QAASD,YAAWmgB,EAAMlgB,SAC1B+d,KAAM,YAGR,CACE/d,QAASD,YAAW8rC,EAAW7rC,SAC/B+d,KAAM,aAnCM,SAwCRX,YAAUg5B,EAAO/4B,GAxCT,sCAuCTg5B,EAvCS,KAuCOC,EAvCP,KAuC4BC,EAvC5B,KAuC8CjL,EAvC9C,KAuC6DkL,EAvC7D,KAuC4EC,EAvC5E,KA2CVC,EAAe,IAAI1zC,IAAUuzC,GAAkB32C,IAAI,IAAIoD,IAAUsoC,IAGjEG,EAAmB,IAAIzoC,IAAUqzC,GAAgBz2C,IAAIuD,IAAQS,IAAI4yC,IACjEG,EAAwB,IAAI3zC,IAAUszC,GAAqB12C,IAAIuD,IAAQS,IAAI6yC,IAG3EG,EAAgBnL,EAAiB9nC,MAAM+yC,GACvCG,EAAqBF,EAAsBhzC,MAAM+yC,GAGjDnL,EAAsBsL,EAAmBlzC,MAAM,IAAIX,IAAU,KAIjEonC,GAAe,IAARA,EA1DO,kCA2DJhtB,YAAU05B,EAAe,CAC7B,CACE92C,QAASM,cACTyd,KAAM,WACNC,OAAQ,CAACosB,IAEX,CACEpqC,QAASM,cACTyd,KAAM,qBAnEA,iDAsEV,CAAC,KAAM,MAtEG,yCAyDTg5B,EAzDS,KAyDHC,EAzDG,KAwEVC,EAAaF,EAAO,IAAI/zC,IAAJ,UAAc+zC,EAAKE,kBAAnB,aAAc,EAAiBtZ,MAAQ56B,IAC3Dm0C,EAAaF,EAAkBC,EAAWr3C,IAAI,IAAIoD,IAAUg0C,IAAoBj0C,IAzEtE,kBA2ET,CACL6zC,cAAeA,EAAcrzC,SAC7BszC,mBAAoBA,EAAmBtzC,SACvCkoC,iBAAkBA,EAAiBloC,SACnCozC,sBAAuBA,EAAsBpzC,SAC7C+nC,cAAe,IAAItoC,IAAUsoC,GAAe/nC,SAC5CgoC,oBAAqBA,EAAoBhoC,SACzC4zC,kBAAmBR,EAAsB/2C,IAAI6rC,GAAkBloC,SAC/D2zC,WAAYA,EAAW3zC,SACvB6zC,WAAW,GAAD,OAAKH,EAAWr3C,IAAI,KAAKnB,WAAzB,OApFI,4CAAH,sDCXAy3C,EANA,uCAAG,WAAOrL,GAAP,eAAAtvC,EAAA,sEACa87C,EAAoBxM,GADjC,cACVyM,EADU,oDAGJzM,GAASyM,IAHL,2CAAH,sDCUAC,EAVC,uCAAG,WAAOC,GAAP,eAAAj8C,EAAA,sEACEghC,QAAQC,IACzBgb,EAAa75B,IAAb,uCAAiB,WAAO85B,GAAP,eAAAl8C,EAAA,sEACI26C,EAAUuB,GADd,cACT5M,EADS,yBAERA,GAFQ,2CAAjB,wDAFe,cACXjvC,EADW,yBAOVA,GAPU,2CAAH,sDCKH87C,EAA0B,SAAC3hB,GAA4E,IAA7D4hB,EAA4D,uDAA3B,CAAC,OAAQ,QACzFC,EAAgB7hB,EAAMhb,MAAK,SAAC8vB,GAChC,OAAO8M,EAAqB1K,MAAK,SAACpB,GAChC,OAAOhB,EAAKgB,WAAWxlC,SAAWwlC,QAGtC,OAAO+L,GAAiB7hB,EAAM,ICT1B8hB,EAAyB,SAAC9hB,EAAe+hB,EAAqBH,GAClE,IAAMI,EAAuBhiB,EAAMjQ,QAAO,SAAC+kB,GAAD,OAAUA,EAAK3qB,MAAM7Z,SAAWyxC,KAE1E,OADqBJ,EAAwBK,EAAsBJ,IAI/DK,EAAwB,SAACnN,EAAYoN,EAAsBC,GAC/D,IAAMC,EAAuBxjC,QAAQk2B,EAAKsM,mBAE1C,GAA+B,SAA3BtM,EAAKgB,WAAWxlC,OAClB,OAAO8xC,EAAuB,IAAIn1C,IAAU6nC,EAAKsM,mBAAqBp0C,IAGxE,GAA+B,SAA3B8nC,EAAKgB,WAAWxlC,OAClB,OAAO8xC,EAAuBD,EAAav0C,MAAMknC,EAAKsM,mBAAqBp0C,IAI7E,IAAKk1C,EACH,OAAOl1C,IAQT,GAAyC,SAArCk1C,EAAepM,WAAWxlC,OAAmB,CAC/C,IAAM+xC,EAAmBF,EAAav0C,MAAMs0C,EAAed,mBAC3D,OAAOgB,GAAwBC,EAC3B,IAAIp1C,IAAU6nC,EAAKsM,mBAAmBxzC,MAAMy0C,GAC5Cr1C,IAGN,GAAyC,SAArCk1C,EAAepM,WAAWxlC,OAAmB,CAC/C,IAAM+xC,EAAmBH,EAAed,kBACxC,OAAOgB,GAAwBC,EAC3B,IAAIp1C,IAAU6nC,EAAKsM,mBAAmBxzC,MAAMy0C,GAC5Cr1C,IAIN,OAAOA,KAGHs1C,EAAyB,SAACxN,EAAYoN,EAAsBC,GAChE,MAA+B,SAA3BrN,EAAKgB,WAAWxlC,OACXpD,IAGsB,SAA3B4nC,EAAKgB,WAAWxlC,OACX6xC,EAGJD,EAIoC,SAArCA,EAAepM,WAAWxlC,OACrB4xC,EAAed,kBAAoBe,EAAav0C,MAAMs0C,EAAed,mBAAqBp0C,IAG1D,SAArCk1C,EAAepM,WAAWxlC,QACrB4xC,EAAed,kBAAoB,IAAIn0C,IAAUi1C,EAAed,mBAGlEp0C,IAXEA,KA8BIu1C,EAhBO,uCAAG,WAAOviB,GAAP,mBAAAx6B,EAAA,6DACjBqwC,EAAc7V,EAAMhb,MAAK,SAAC8vB,GAAD,OAA6B,IAAbA,EAAKT,OAC9C8N,EAAetM,EAAYuL,kBAAoBl0C,IAAQrD,IAAIgsC,EAAYuL,mBAAqBp0C,IAE5Fw1C,EAAkBxiB,EAAMpY,KAAI,SAACktB,GACjC,IAAMoN,EAAiBJ,EAAuB9hB,EAAO8U,EAAKgB,WAAWxlC,QAC/DmyC,EAAiBR,EAAsBnN,EAAMoN,EAAgBC,GAC7DO,EAAkBJ,EAAuBxN,EAAMoN,EAAgBC,GAC/Dh4B,EAAK,2BAAQ2qB,EAAK3qB,OAAb,IAAoBirB,UAAWqN,EAAej1C,WACnDsoC,EAAU,2BAAQhB,EAAKgB,YAAb,IAAyBV,UAAWsN,EAAgBl1C,WACpE,OAAO,2BAAKsnC,GAAZ,IAAkB3qB,QAAO2rB,kBAVJ,kBAahB0M,GAbgB,2CAAH,sDCnETG,EAAuB,uCAAG,WAAO/kC,EAAiB6jC,GAAxB,qBAAAj8C,EAAA,6DAC/Bo9C,EAAoBr4C,cAEpB+c,EAAQm6B,EAAa75B,KAAI,SAACktB,GAE9B,MAAO,CAAE7qC,QADiBD,YAAW8qC,EAAKoL,aACLl4B,KAAM,YAAaC,OAAQ,CAACrK,EAASglC,OALvC,SAQPv7B,YAAU2f,EAAU1f,GARb,cAQ/Bu7B,EAR+B,OAS/BC,EAAqBD,EAAgBj7B,KAAI,SAACm7B,GAC9C,OAAO,IAAI91C,IAAU81C,GAAWv1C,YAVG,kBAY9Bs1C,GAZ8B,2CAAH,wDAevBE,EAA0B,uCAAG,WAAOplC,EAAiB6jC,GAAxB,mBAAAj8C,EAAA,6DAClC8hB,EAAQm6B,EAAa75B,KAAI,SAACktB,GAE9B,MAAO,CACL7qC,QAFwBD,YAAW8qC,EAAKoL,aAGxCl4B,KAAM,YACNC,OAAQ,CAACrK,OAN2B,SAUTyJ,YAAU2f,EAAU1f,GAVX,cAUlC27B,EAVkC,OAWlCC,EAAsBD,EAAiBr7B,KAAI,SAACmtB,GAChD,OAAO,IAAI9nC,IAAU8nC,GAAcvnC,YAZG,kBAcjC01C,GAdiC,2CAAH,wDAiB1BC,EAA2B,uCAAG,WAAOvlC,EAAiB6jC,GAAxB,qBAAAj8C,EAAA,6DACnCo9C,EAAoBr4C,cAEpB+c,EAAQm6B,EAAa75B,KAAI,SAACktB,GAC9B,MAAO,CACL7qC,QAAS24C,EACT56B,KAAM,WACNC,OAAQ,CAAC6sB,EAAKT,IAAKz2B,OAPkB,SAWTyJ,YAAU05B,EAAez5B,GAXhB,cAWnC87B,EAXmC,OAYnCC,EAAuBD,EAAkBx7B,KAAI,SAACujB,GAClD,OAAO,IAAIl+B,IAAUk+B,EAAc,GAAGvD,MAAMp6B,YAbL,kBAelC61C,GAfkC,2CAAH,wDAkB3BC,EAAqB,uCAAG,WAAO1lC,EAAiB6jC,GAAxB,qBAAAj8C,EAAA,6DAC7Bo9C,EAAoBr4C,cAEpB+c,EAAQm6B,EAAa75B,KAAI,SAACktB,GAC9B,MAAO,CACL7qC,QAAS24C,EACT56B,KAAM,cACNC,OAAQ,CAAC6sB,EAAKT,IAAKz2B,OAPY,SAWTyJ,YAAU05B,EAAez5B,GAXhB,cAW7Bi8B,EAX6B,OAY7BC,EAAiBD,EAAY37B,KAAI,SAACotB,GACtC,OAAO,IAAI/nC,IAAU+nC,GAAUxnC,YAbE,kBAe5Bg2C,GAf4B,2CAAH,wDCjC5Bt9C,EAA2B,CAAEL,KAVPquC,IAAYtsB,KAAI,SAACktB,GAAD,mBAAC,eACxCA,GADuC,IAE1CrL,SAAU,CACRnV,UAAW,IACXygB,aAAc,IACd5J,cAAe,IACf6J,SAAU,UAIgDyO,uBAAuB,EAAOna,gBAAgB,GAE/F6K,EAAmBD,IAAYnkB,QAAO,gBAAGskB,EAAH,EAAGA,IAAH,OAAcqP,YAAcrP,MAGlEC,EAA4B3I,YACvC,kCADuD,uCAEvD,WAAOsI,GAAP,uBAAAzuC,EAAA,6DACQi8C,EAAevN,IAAYnkB,QAAO,SAAC2xB,GAAD,OAAgBzN,EAAKtpB,SAAS+2B,EAAWrN,QAG3EsP,EAAwBlC,EAAajxB,OAAOozB,GAJpD,SAMsBpC,EAAWmC,GANjC,cAMQ3jB,EANR,gBAOgCuiB,EAAiBviB,GAPjD,cAOQwiB,EAPR,OAUQqB,EAAwBrB,EAAgBzyB,QAAO,SAAC+kB,GACpD,OAAOA,EAAKT,KAAoB,IAAbS,EAAKT,OAX5B,kBAcSwP,GAdT,4CAFuD,uDA4B5CtP,EAAyB5I,YACpC,+BADoD,uCAEpD,yCAAAnmC,EAAA,6DAASoY,EAAT,EAASA,QAASq2B,EAAlB,EAAkBA,KACVwN,EAAevN,IAAYnkB,QAAO,SAAC2xB,GAAD,OAAgBzN,EAAKtpB,SAAS+2B,EAAWrN,QADnF,SAEmCsO,EAAwB/kC,EAAS6jC,GAFpE,cAEQqC,EAFR,gBAGsCd,EAA2BplC,EAAS6jC,GAH1E,cAGQsC,EAHR,iBAImCZ,EAA4BvlC,EAAS6jC,GAJxE,eAIQuC,EAJR,iBAKiCV,EAAsB1lC,EAAS6jC,GALhE,eAKQwC,EALR,yBAOSH,EAAmBl8B,KAAI,SAACs8B,EAAe/e,GAC5C,MAAO,CACLkP,IAAKoN,EAAatc,GAAOkP,IACzB/f,UAAWwvB,EAAmB3e,GAC9B4P,aAAcgP,EAAsB5e,GACpCgG,cAAe6Y,EAAmB7e,GAClC6P,SAAUiP,EAAiB9e,QAbjC,4CAFoD,uDAqBzCgf,EAAalY,YAAY,CACpCjkB,KAAM,QACN9hB,eACAgmC,SAAU,CACRkY,yBAA0B,SAACn9C,EAAOqzB,GAChC,IAAMmpB,EAAwBnpB,EAAOC,QACrCtzB,EAAMw8C,sBAAwBA,IAGlClX,cAAe,SAACpS,GAEdA,EAAQC,QAAQka,EAA0B3W,WAAW,SAAC12B,EAAOqzB,GAC3DrzB,EAAMpB,KAAOoB,EAAMpB,KAAK+hB,KAAI,SAACktB,GAC3B,IAAMuP,EAAe/pB,EAAOC,QAAQvV,MAAK,SAACs/B,GAAD,OAAcA,EAASjQ,MAAQS,EAAKT,OAC7E,OAAO,2BAAKS,GAASuP,SAKzBlqB,EAAQC,QAAQma,EAAuB5W,WAAW,SAAC12B,EAAOqzB,GACxDA,EAAOC,QAAQlyB,SAAQ,SAACk8C,GACtB,IAAQlQ,EAAQkQ,EAARlQ,IACFlP,EAAQl+B,EAAMpB,KAAKymC,WAAU,SAACwI,GAAD,OAAUA,EAAKT,MAAQA,KAC1DptC,EAAMpB,KAAKs/B,GAAX,2BAAyBl+B,EAAMpB,KAAKs/B,IAApC,IAA4CsE,SAAU8a,OAExDt9C,EAAMqiC,gBAAiB,QAMe6a,EAAW3X,QAAxC4X,yBAEAD,MAAf,S,0NCpGaK,EAA2B,SAACC,GACvC,IAAWC,EAA+ED,EAAlF,GAAcE,EAAoEF,EAAvE,GAAoBG,EAAmDH,EAAtD,GAAcI,EAAwCJ,EAA3C,GAAkBK,EAAyBL,EAA5B,GAAeM,EAAaN,EAAhB,GAE1E,MAAO,CACLC,OAAQ9hB,OAAO8hB,GACfM,OAAQpiB,OAAO+hB,GACfC,OAAQhiB,OAAOgiB,GACfE,QAASliB,OAAOkiB,GAChBD,aACAE,aCZEE,EAAkB9jC,cAQlB+jC,EAAW,uCAAG,WAAOj7C,GAAP,qBAAAzE,EAAA,+EAEOC,MAAM,GAAD,OATbC,kCASa,sBAA4BuE,IAFxC,WAEVtE,EAFU,QAIFw/C,GAJE,yCAKP,IALO,uBAQgBx/C,EAASC,OARzB,2BAQRw/C,gBARQ,MAQG,GARH,oBAUTA,GAVS,2DAYT,IAZS,0DAAH,sDAgEFC,EAhDC,uCAAG,WAAOp7C,GAAP,yCAAAzE,EAAA,+EAEcy/C,EAAgBK,cAAcr7C,GAF5C,UAETq7C,EAFS,gDAKN,CAAEA,gBAAehlB,QAAS,OALpB,uBAQe2kB,EAAgBM,eAAet7C,GAR9C,cAQTw6C,EARS,SASmDD,EAAyBC,GAAnFC,EATO,EASPA,OAAQM,EATD,EASCA,OAAQJ,EATT,EASSA,OAAQE,EATjB,EASiBA,QAASD,EAT1B,EAS0BA,WAAYE,EATtC,EASsCA,SATtC,UAUIS,YAAQZ,GAVZ,eAUTa,EAVS,iBAWQP,EAAYj7C,GAXpB,WAWTm7C,EAXS,QAgBXL,EAhBW,kCAiBDW,YAAgBb,EAAYC,GAjB3B,QAiBba,EAjBa,OAoBbC,IAAQr/C,IAAR,kBACa0D,GACX,CACEm7C,WACAS,OAAO,2CAAD,iBAA6CF,SAA7C,aAA6C,EAAKG,OAAOC,KAEjE,CAAEC,OAAQ,sBAAuBC,QAAQ,EAAMC,QAAS,KA1B7C,eA8BT5lB,EAAU,CACdokB,SACAM,SACAJ,SACAE,UACAM,WACAP,aACAE,WACAY,MACAF,QAvCa,kBA0CR,CAAEH,gBAAehlB,YA1CT,2DA4CR,MA5CQ,0DAAH,sDC3BVp6B,EAA6B,CACjCigD,eAAe,EACfhd,WAAW,EACXmc,eAAe,EACfz/C,KAAM,MAGKugD,EAAena,YAAY,CACtCjkB,KAAM,UACN9hB,eACAgmC,SAAU,CACRma,kBAAmB,SAACp/C,GAClBA,EAAMkiC,WAAY,GAEpBmd,sBAAuB,SAACC,EAAQjsB,GAC9B,MAAmCA,EAAOC,QAAlC+F,EAAR,EAAQA,QAER,MAAO,CACL6lB,eAAe,EACfhd,WAAW,EACXmc,cALF,EAAiBA,cAMfz/C,KAAMy6B,IAGVkmB,mBAAoB,SAACv/C,GACnBA,EAAMkiC,WAAY,EAClBliC,EAAMk/C,eAAgB,GAExBM,aAAc,8BAAC,eACVvgD,GADS,IAEZijC,WAAW,KAEbud,UAAW,SAACz/C,EAAOqzB,GACjBrzB,EAAMpB,KAAKm/C,QAAU1qB,EAAOC,YAM3B,EACL6rB,EAAa5Z,QADA6Z,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,sBAAuBE,EAAlD,EAAkDA,mBAAoBC,EAAtE,EAAsEA,aAAcC,EAApF,EAAoFA,UAK9EC,EAAe,SAAC18C,GAAD,8CAAqB,WAAO4iB,GAAP,eAAArnB,EAAA,sEAE7CqnB,EAASw5B,KAFoC,SAGtBhB,EAAWp7C,GAHW,OAGvCtE,EAHuC,OAI7CknB,EAASy5B,EAAsB3gD,IAJc,gDAM7CknB,EAAS25B,KANoC,yDAArB,uDAUbJ,MAAf,S,wIChDYQ,E,gEAFNC,EAAiB,IAAIn/B,IAAUlE,KAS9B,SAASsjC,EAASvP,GACvB,IAAQlrC,EAAYH,cAAZG,QAEFhC,EAASiW,mBACb,kBACEi3B,EAAW3vB,KAAI,mCAAEm/B,EAAF,KAAaC,EAAb,WAA4B,CACzCn2B,YAAgBk2B,EAAW16C,GAC3BwkB,YAAgBm2B,EAAW36C,SAE/B,CAACA,EAASkrC,IAGN0P,EAAgB3mC,mBACpB,kBACEjW,EAAOud,KAAI,YAAuB,IAAD,mBAApB2H,EAAoB,KAAZC,EAAY,KAC/B,OAAOD,GAAUC,IAAWD,EAAO2B,OAAO1B,GAAUC,IAAKzlB,WAAWulB,EAAQC,QAAU7oB,OAE1F,CAAC0D,IAGGwpB,EAAUI,YAA8BgzB,EAAeJ,EAAgB,eAE7E,OAAOvmC,mBAAQ,WACb,OAAOuT,EAAQjM,KAAI,SAACc,EAAQL,GAC1B,IAAgB6+B,EAAsBx+B,EAA9BA,OAAkB6D,EAAY7D,EAAZ6D,QACpBgD,EAASllB,EAAOge,GAAG,GACnBmH,EAASnlB,EAAOge,GAAG,GAEzB,GAAIkE,EAAS,MAAO,CAACq6B,EAAUO,QAAS,MACxC,IAAK53B,IAAWC,GAAUD,EAAO2B,OAAO1B,GAAS,MAAO,CAACo3B,EAAUQ,QAAS,MAC5E,IAAKF,EAAU,MAAO,CAACN,EAAUS,WAAY,MAC7C,IAAQC,EAAuBJ,EAAvBI,SAAUC,EAAaL,EAAbK,SAClB,EAAyBh4B,EAAOqB,YAAYpB,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAON,EAAP,KAAeC,EAAf,KACA,MAAO,CACL03B,EAAUY,OACV,IAAI/3B,IAAK,IAAIuB,IAAY/B,EAAQq4B,EAAS5+C,YAAa,IAAIsoB,IAAY9B,EAAQq4B,EAAS7+C,mBAG3F,CAACmrB,EAASxpB,IAGR,SAASo9C,EAAQl4B,EAAmBC,GACzC,OAAOs3B,EAAS,CAAC,CAACv3B,EAAQC,KAAU,I,SAjD1Bo3B,O,qBAAAA,I,2BAAAA,I,mBAAAA,I,sBAAAA,M,yFCRG,SAASc,EAAe9+C,EAAU++C,GAC/C,MAA4C7gD,mBAAY8B,GAAxD,mBAAOg/C,EAAP,KAAuBC,EAAvB,KAgBA,OAdA1gD,qBAAU,WAER,IAAM2gD,EAAUC,YAAW,WACzBF,EAAkBj/C,KACjB++C,GAKH,OAAO,WACLK,aAAaF,MAEd,CAACl/C,EAAO++C,IAEJC,I,mICjBMK,EAHS,SAACh+C,GAAD,gFAC6CA,EAD7C,c,gBCSlBi+C,EAAa/+C,YAAOkgB,IAAPlgB,CAAH,2DACL,qBAAG6f,QACF,qBAAGA,QAGA,SAASC,EAAT,GAQX,IAAD,EAPDvK,EAOC,EAPDA,SAOC,IANDsK,YAMC,MANM,OAMN,EALDE,EAKC,EALDA,MAMMi/B,EAAez+B,YAAiBhL,aAAoBqkB,IAAmBrkB,EAAS6K,aAAU5iB,GAE1F8iB,EAAiBnJ,mBAAQ,WAC7B,OAAI5B,IAAaC,IAAc,GAE3BD,aAAoB/O,IAClB+O,aAAoBqkB,IAChB,GAAN,mBAAWolB,GAAX,CAAyBF,EAAgBvpC,EAASzU,WAE7C,CAACg+C,EAAgBvpC,EAASzU,UAE5B,KACN,CAACyU,EAAUypC,IAEd,OAAIzpC,IAAaC,IACR,cAAC,IAAD,CAAatV,MAAO2f,EAAME,MAAOA,IAGnC,cAACg/B,EAAD,CAAYl/B,KAAMA,EAAMS,KAAMA,EAAMD,IAAG,2BAAK9K,QAAL,IAAKA,OAAL,EAAKA,EAAUpO,cAAf,QAAyB,QAAzB,SAAyC4Y,MAAOA,M,6BCzChG,YAGM8W,EAAsB,CAI1B,CACEqU,IAAK,EACLa,SAAU,MACVgL,YAAa,CACX,GAAI,GACJ,GAAI,8CAEN/1B,MAAO9f,IAAO8K,MACd2gC,WAAYzrC,IAAOM,MAErB,CACE0pC,IAAK,EACLa,SAAU,aACVgL,YAAa,CACX,GAAI,GACJ,GAAI,8CAEN/1B,MAAO9f,IAAOC,KACdwrC,WAAYzrC,IAAOM,MAErB,CACE0pC,IAAK,EACLa,SAAU,cACVgL,YAAa,CACX,GAAI,GACJ,GAAI,8CAEN/1B,MAAO9f,IAAOC,KACdwrC,WAAYzrC,IAAOiL,MAGrB,CACE++B,IAAK,EACLa,SAAU,cACVgL,YAAa,CACX,GAAI,GACJ,GAAI,8CAEN/1B,MAAO9f,IAAOiL,KACdwgC,WAAYzrC,IAAOM,MAErB,CACE0pC,IAAK,EACLa,SAAU,aACVgL,YAAa,CACX,GAAI,GACJ,GAAI,8CAEN/1B,MAAO9f,IAAOkL,IACdugC,WAAYzrC,IAAOC,MAErB,CACE+pC,IAAK,EACLa,SAAU,cACVgL,YAAa,CACX,GAAI,GACJ,GAAI,8CAEN/1B,MAAO9f,IAAOmG,KACdslC,WAAYzrC,IAAOC,MAErB,CACE+pC,IAAK,EACLa,SAAU,cACVgL,YAAa,CACX,GAAI,GACJ,GAAI,8CAEN/1B,MAAO9f,IAAO2P,KACd87B,WAAYzrC,IAAOC,MAErB,CACE+pC,IAAK,EACLa,SAAU,cACVgL,YAAa,CACX,GAAI,GACJ,GAAI,8CAEN/1B,MAAO9f,IAAO2P,KACd87B,WAAYzrC,IAAOM,OAMPq1B,O,qCCxFD,SAASooB,EAAOC,GAC7B,MAAO,SAASz8B,KAAKy8B,GALvB,mC,0MCOaC,EAAqB,WAChC,IAAMz7B,EAAW+U,cAEjBz6B,qBAAU,WACR,IAAMohD,EAAWC,YAAW,sBAAC,4BAAAhjD,EAAA,sEACDiH,IAAkBg8C,iBADjB,OACrB52B,EADqB,OAE3BhF,EAAS67B,YAAS72B,IAFS,2CAG1B,KAEH,OAAO,kBAAM82B,cAAcJ,MAC1B,CAAC17B,KAGO+7B,EAAW,WACtB,OAAO57B,aAAY,SAAC/lB,GAAD,OAAkBA,EAAM64B,UAGhC+oB,EAAkB,WAC7B,OAAO77B,aAAY,SAAC/lB,GAAD,OAAkBA,EAAM64B,MAAMgpB,kB,yHCvBtCC,EAAe,8BAEfC,GAAqB,mBAC/B7hC,IAAQ8hC,OAAS,CAChBh/C,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENi/C,cAAe,UANe,cAQ/B/hC,IAAQgiC,MAAQ,CACfl/C,QAAS,CACP,GAAI,6CACJ,GAAI,IAENi/C,cAAe,UAbe,GAsB5BE,EAAc,CAClB,CACEphC,KAAM,SACNqhC,YAAa,mEACbvD,OAAQ,CACNwD,GAAI,gBACJC,GAAI,gBACJxD,GAAI,gBACJyD,KAAM,8FAERrT,UAAW,IACXsT,WAAY,SACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,IAEf,CACE1hC,KAAM,aACNqhC,YAAa,mDACbvD,OAAQ,CACNwD,GAAI,cACJC,GAAI,cACJxD,GAAI,cACJyD,KAAM,kGAERG,MAAO,CACLC,KAAM,mGACNC,IAAK,mGAEP1T,UAAW,IACXsT,WAAY,aACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,IAEf,CACE1hC,KAAM,WACNqhC,YAAa,kGACbvD,OAAQ,CACNwD,GAAI,iBACJC,GAAI,iBACJxD,GAAI,iBACJyD,KAAM,sGAERrT,UAAW,IACXsT,WAAY,iBACZltC,KAAM4K,IAAQgiC,MACdO,YAAa,GAEf,CACE1hC,KAAM,WACNqhC,YAAa,kGACbvD,OAAQ,CACNwD,GAAI,iBACJC,GAAI,iBACJxD,GAAI,iBACJyD,KAAM,sGAERrT,UAAW,IACXsT,WAAY,iBACZltC,KAAM4K,IAAQgiC,MACdO,YAAa,GAEf,CACE1hC,KAAM,WACNqhC,YAAa,kGACbvD,OAAQ,CACNwD,GAAI,iBACJC,GAAI,iBACJxD,GAAI,iBACJyD,KAAM,sGAERrT,UAAW,IACXsT,WAAY,iBACZltC,KAAM4K,IAAQgiC,MACdO,YAAa,GAEf,CACE1hC,KAAM,4BACNqhC,YAAa,kEACbvD,OAAQ,CACNwD,GAAI,+BACJC,GAAI,+BACJxD,GAAI,+BACJyD,KAAM,6GAERG,MAAO,CACLC,KAAM,8GACNC,IAAK,8GAEP1T,UAAW,IACXsT,WAAY,wBACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,IAEf,CACE1hC,KAAM,sBACNqhC,YAAa,0CACbvD,OAAQ,CACNwD,GAAI,4BACJC,GAAI,4BACJxD,GAAI,4BACJyD,KAAM,oGAERrT,UAAW,IACXsT,WAAY,eACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,IAEf,CACE1hC,KAAM,qBACNqhC,YAAa,8CACbvD,OAAQ,CACNwD,GAAI,2BACJC,GAAI,2BACJxD,GAAI,2BACJyD,KAAM,sGAERrT,UAAW,IACXsT,WAAY,iBACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,IAEf,CACE1hC,KAAM,oBACNqhC,YAAa,kDACbvD,OAAQ,CACNwD,GAAI,0BACJC,GAAI,0BACJxD,GAAI,0BACJyD,KAAM,oGAERrT,UAAW,IACXsT,WAAY,eACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,IAEf,CACE1hC,KAAM,UACNqhC,YAAa,+EACbvD,OAAQ,CACNwD,GAAI,iBACJC,GAAI,iBACJxD,GAAI,iBACJyD,KAAM,+FAERG,MAAO,CACLC,KAAM,+FACNC,IAAK,+FAEP1T,UAAW,IACXsT,WAAY,UACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,IAEf,CACE1hC,KAAM,SACNqhC,YAAa,sEACbvD,OAAQ,CACNwD,GAAI,gBACJC,GAAI,gBACJxD,GAAI,gBACJyD,KAAM,8FAERrT,UAAW,IACXsT,WAAY,SACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,IAEf,CACE1hC,KAAM,SACNqhC,YAAa,uEACbvD,OAAQ,CACNwD,GAAI,gBACJC,GAAI,gBACJxD,GAAI,gBACJyD,KAAM,6FACNM,KAAM,mBAER3T,UAAW,IACXsT,WAAY,SACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,GAEf,CACE1hC,KAAM,QACNqhC,YAAa,kEACbvD,OAAQ,CACNwD,GAAI,eACJC,GAAI,eACJxD,GAAI,eACJyD,KAAM,4FACNM,KAAM,kBAER3T,UAAW,IACXsT,WAAY,QACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,GAEf,CACE1hC,KAAM,SACNqhC,YAAa,wEACbvD,OAAQ,CACNwD,GAAI,gBACJC,GAAI,gBACJxD,GAAI,gBACJyD,KAAM,6FACNM,KAAM,mBAER3T,UAAW,IACXsT,WAAY,SACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,GAEf,CACE1hC,KAAM,SACNqhC,YAAa,6DACbvD,OAAQ,CACNwD,GAAI,gBACJC,GAAI,gBACJxD,GAAI,gBACJyD,KAAM,6FACNM,KAAM,mBAER3T,UAAW,IACXsT,WAAY,SACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,GAEf,CACE1hC,KAAM,UACNqhC,YAAa,wEACbvD,OAAQ,CACNwD,GAAI,iBACJC,GAAI,iBACJxD,GAAI,iBACJyD,KAAM,8FACNM,KAAM,oBAER3T,UAAW,IACXsT,WAAY,UACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,GAEf,CACE1hC,KAAM,WACNqhC,YAAa,6EACbvD,OAAQ,CACNwD,GAAI,kBACJC,GAAI,kBACJxD,GAAI,kBACJyD,KAAM,+FACNM,KAAM,qBAER3T,UAAW,IACXsT,WAAY,WACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,GAEf,CACE1hC,KAAM,UACNqhC,YAAa,oFACbvD,OAAQ,CACNwD,GAAI,iBACJC,GAAI,iBACJxD,GAAI,iBACJyD,KAAM,8FACNM,KAAM,oBAER3T,UAAW,IACXsT,WAAY,UACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,GAEf,CACE1hC,KAAM,cACNqhC,YAAa,oFACbvD,OAAQ,CACNwD,GAAI,qBACJC,GAAI,qBACJxD,GAAI,qBACJyD,KAAM,kGACNM,KAAM,wBAER3T,UAAW,IACXsT,WAAY,cACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,GAEf,CACE1hC,KAAM,WACNqhC,YAAa,mFACbvD,OAAQ,CACNwD,GAAI,kBACJC,GAAI,kBACJxD,GAAI,kBACJyD,KAAM,+FACNM,KAAM,qBAER3T,UAAW,IACXsT,WAAY,WACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,GAEf,CACE1hC,KAAM,UACNqhC,YAAa,6FACbvD,OAAQ,CACNwD,GAAI,iBACJC,GAAI,iBACJxD,GAAI,iBACJyD,KAAM,8FACNM,KAAM,oBAER3T,UAAW,IACXsT,WAAY,UACZltC,KAAM4K,IAAQ8hC,OACdS,YAAa,IAIFN,O,kJChVFW,EAAY,uCAAG,8BAAAvkD,EAAA,2DACpBkH,EAAWs9C,OAAOC,UADE,wBAGlB59C,EAAUgzC,SAAS35C,KAAgC,IAHjC,kBAKhBgH,EAASglC,QAAQ,CACrBvJ,OAAQ,0BACRlgB,OAAQ,CACN,CACE5b,QAAQ,KAAD,OAAOA,EAAQ3D,SAAS,KAC/BwhD,UAAW,8BACXC,eAAgB,CACdniC,KAAM,MACN1X,OAAQ,MACR3C,SAAU,IAEZy8C,QAASC,IACTC,kBAAmB,CAAC,GAAD,OAAIjoB,IAAJ,UAjBH,iCAqBf,GArBe,uCAuBtB3f,QAAQD,MAAM,2CAAd,MAvBsB,mBAwBf,GAxBe,uCA2BxBC,QAAQD,MAAM,gFA3BU,mBA4BjB,GA5BiB,yDAAH,qDAuCZ8nC,EAAa,uCAAG,WAAO3nC,EAAsBm/B,EAAqBtB,GAAlD,eAAAj7C,EAAA,sEACFwkD,OAAOC,SAASvY,QAAQ,CAC/CvJ,OAAQ,oBACRlgB,OAAQ,CACN1L,KAAM,QACN7N,QAAS,CACPzE,QAAS2Y,EACTtS,OAAQyxC,EACRp0C,SAAU8yC,EACV+J,MAAM,GAAD,OAAKroB,IAAL,0BAA+Bvf,EAA/B,YATgB,cACrB6nC,EADqB,yBAcpBA,GAdoB,2CAAH,2D,6BChD1B,6CAEO,SAASh+B,EAAW/N,GACzB,GAAIA,IAAaC,IAAO,MAAO,MAC/B,GAAID,aAAoB/O,IAAO,OAAO+O,EAASzU,QAC/C,MAAM,IAAIhB,MAAM,sB,+BCLlB,sDAIO,SAAS+qB,IACd,IAAQ3nB,EAAYF,cAAZE,QAER,OAAO2gB,aAAY,SAAC/lB,GAAD,OAAqBA,EAAM+5B,YAAYnP,YAAlB,OAA8BxlB,QAA9B,IAA8BA,KAAY,Q,u9ICFrE,SAASq+C,EAAUC,GAAwB,IAAD,IAEvD,OADiBA,EAAIn7C,MAAM,KAAK,GAAGsY,eAEjC,IAAK,QACH,MAAO,CAAC6iC,GACV,IAAK,OACH,MAAO,CAAC,QAAD,OAASA,EAAIC,OAAO,IAAMD,GACnC,IAAK,OACH,IAAMpvB,EAAI,UAAGovB,EAAI1iD,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqCszB,EAArC,oCAAsEA,EAAtE,MACT,IAAK,OACH,IAAMvT,EAAI,UAAG2iC,EAAI1iD,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqC+f,EAArC,oCAAsEA,EAAtE,MACT,QACE,MAAO,IAnBb,mC,6BCAA,+EAGO,SAAS4G,EAAezE,GAC7B,MAAO,CACL9d,QAAS8d,EAAM9d,QACfpC,QAASkgB,EAAMlgB,QACf0D,SAAUwc,EAAMxc,SAChB2C,OAAQ6Z,EAAM7Z,OACd0X,KAAMmC,EAAMnC,MAIT,SAASsI,EAAiB3B,GAC/B,OAAO,IAAIhf,IACTgf,EAAgBtiB,QAChBsiB,EAAgB1kB,QAChB0kB,EAAgBhhB,SAChBghB,EAAgBre,OAChBqe,EAAgB3G,Q,6BCnBpB,oBAQe+rB,IALI,WACjB,MAAuB/qC,qBAAW6hD,KAClC,MAAO,CAAEpW,YADT,EAAQqW,KACoB9W,YAD5B,EAAc+W,Q,sKCSV7kD,EAA2B,CAC/BigD,eAAe,EACfhd,WAAW,EACXtjC,KAV2BmlD,IAAU/gC,QAAO,SAAC0c,EAAO8e,GACpD,OAAO,2BACF9e,GADL,kBAEG8e,EAAKhkC,GAAKgkC,MAEZ,KAQUwF,EAAahf,YAAY,CACpCjkB,KAAM,QACN9hB,eACAgmC,SAAU,CACRgf,WAAY,SAACjkD,GACXA,EAAMkiC,WAAY,GAEpBgiB,YAAa,SAAClkD,GACZA,EAAMkiC,WAAY,EAClBliC,EAAMk/C,eAAgB,GAExBiF,mBAAoB,SAACnkD,EAAOqzB,GAC1BrzB,EAAMk/C,eAAgB,EACtBl/C,EAAMkiC,WAAY,EAClBliC,EAAMpB,KAAKy0B,EAAOC,QAAQ9Y,IAAM6Y,EAAOC,SAEzC8wB,oBAAqB,SAACpkD,EAAOqzB,GAC3BrzB,EAAMk/C,eAAgB,EACtBl/C,EAAMkiC,WAAY,EAClBliC,EAAMpB,KAAOy0B,EAAOC,YAMnB,EAA6E0wB,EAAWze,QAAhF0e,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,mBAAoBD,EAAxC,EAAwCA,YAAaE,EAArD,EAAqDA,oBAG/CC,EAAY,SAAC1G,GAAD,8CAAoB,WAAO/3B,GAAP,eAAArnB,EAAA,sEAEzCqnB,EAASq+B,KAFgC,SAGtB1F,YAAQZ,GAHc,OAGnCa,EAHmC,OAIzC54B,EAASu+B,EAAmB3F,IAJa,gDAMzC54B,EAASs+B,KANgC,yDAApB,uDAUZI,EAAa,yDAAM,WAAO1+B,GAAP,eAAArnB,EAAA,sEAE5BqnB,EAASq+B,KAFmB,SAGRM,cAHQ,OAGtBhrB,EAHsB,OAI5B3T,EAASw+B,EAAoB7qB,IAJD,gDAM5B3T,EAASs+B,KANmB,yDAAN,uDAUXF,MAAf,S,gvNCnEA,sGAAO,IAAMQ,EAA2B,KAC3BC,EAAkC,EAClCnM,EAAiC,G,yMCsBxC52B,EAAUxf,IAAOU,IAAV,4CAGP8hD,EAAUxiD,YAAO4D,IAAP5D,CAAH,8CAIPyiD,EAAgBziD,YAAO2D,IAAP3D,CAAH,gDAInB,SAAS0iD,EAAT,GAA+E,IAAzCC,EAAwC,EAAxCA,YAC5BjjD,EAAMC,cAAND,EACR,OACE,eAAC8f,EAAD,WACE,cAACijC,EAAD,UACE,cAAC,KAAD,MAEF,eAAC,IAAD,CAAY9hD,IAAI,OAAOP,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAMwiD,SAAS,OAAf,SAAuBljD,EAAE,8BACzB,cAAC,IAAD,CAAYiB,IAAI,OAAOP,QAAQ,SAA/B,SACE,cAAC,KAAD,CAAMyiD,MAAI,EAACC,OAAK,EAACC,UAAU,SAA3B,SACGJ,MAGL,cAAC,KAAD,CAAMG,OAAK,EAACroC,MAAM,aAAasoC,UAAU,SAAzC,SACGrjD,EAAE,mDAOb,SAASsjD,EAAT,GAUI,IAAD,EATDC,EASC,EATDA,UACA//C,EAQC,EARDA,QACAkvB,EAOC,EAPDA,KACA8wB,EAMC,EANDA,cAOQjgD,EAAYF,cAAZE,QAEAvD,EAAMC,cAAND,EAEFshB,EAA2B0G,YAAgBw7B,EAAehgD,GAEhE,OACE,cAACsc,EAAD,UACE,eAACgjC,EAAD,WACE,cAACC,EAAD,UACE,cAAC,IAAD,CAAaU,YAAa,GAAKjjD,MAAM,OAAOua,MAAM,cAEpD,eAAC,IAAD,CAAY9Z,IAAI,OAAOP,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAMwiD,SAAS,OAAf,SAAuBljD,EAAE,2BACxBwD,GAAWkvB,GACV,cAAC,KAAD,CAAMgxB,UAAQ,EAACN,OAAK,EAACO,KAAMlwC,YAAeif,EAAM,cAAelvB,GAA/D,SACGxD,EAAE,qBAGNwjD,IAAa,OAAIjgD,QAAJ,IAAIA,GAAJ,UAAIA,EAASM,gBAAb,aAAI,EAAmB+/C,aACnC,cAAC,IAAD,CACEC,QAAQ,WACRC,GAAG,OACHtjD,MAAM,cACN2a,QAAS,kBAAMumC,YAAcpgC,EAAMlgB,QAASkgB,EAAM7Z,OAAQ6Z,EAAMxc,WAJlE,SAME,eAAC,IAAD,WACG9E,EAAE,0BAA2B,CAAE+jD,MAAOP,EAAc/7C,SACrD,cAAC,KAAD,CAAcjH,MAAM,OAAOwjD,GAAG,aAIpC,cAAC,IAAD,CAAQ7oC,QAASooC,EAAWO,GAAG,OAA/B,SACG9jD,EAAE,mBAQR,SAASikD,EAAT,GAMH,IALFC,EAKC,EALDA,cACAC,EAIC,EAJDA,WAKA,OACE,eAACrkC,EAAD,WACE,cAAC,IAAD,UAAMqkC,MACN,cAAC,IAAD,UAAMD,SAKL,SAASE,EAAT,GAAsG,IAAnEC,EAAkE,EAAlEA,QAASd,EAAyD,EAAzDA,UACzCvjD,EAAMC,cAAND,EACR,OACE,eAAC8f,EAAD,WACE,eAAC,IAAD,CAAYpf,QAAQ,SAApB,UACE,cAAC,IAAD,CAAWqa,MAAM,UAAUva,MAAM,SACjC,cAAC,KAAD,CAAMua,MAAM,UAAUsF,MAAO,CAAEgjC,UAAW,SAAU7iD,MAAO,OAA3D,SACG6jD,OAIL,cAAC,IAAD,CAAMC,eAAe,SAASC,GAAG,OAAjC,SACE,cAAC,IAAD,CAAQppC,QAASooC,EAAjB,SAA6BvjD,EAAE,kBAuDxBwkD,IAvC6E,SAAC,GAStF,IARLC,EAQI,EARJA,MACAlB,EAOI,EAPJA,UACAmB,EAMI,EANJA,gBACAC,EAKI,EALJA,cACAjyB,EAII,EAJJA,KACAuwB,EAGI,EAHJA,YACA2B,EAEI,EAFJA,QACApB,EACI,EADJA,cAEQhgD,EAAYH,cAAZG,QAEFqhD,EAAgB5lD,uBAAY,WAC5BylD,GACFA,IAEFnB,MACC,CAACmB,EAAiBnB,IAErB,OAAK//C,EAGH,cAAC,KAAD,CAAOihD,MAAOA,EAAOK,iBAAiB,uBAAuBvB,UAAWsB,EAAxE,SACGF,EACC,cAAC3B,EAAD,CAA4BC,YAAaA,IACvCvwB,EACF,cAAC4wB,EAAD,CACE9/C,QAASA,EACTkvB,KAAMA,EACN6wB,UAAWA,EACXC,cAAeA,IAGjBoB,MAde,O,6HCnKR,SAAS3S,EAAO8S,GAK7B,IAAMC,EAAYxxC,YAAUuxC,GACtBE,ECFO,SAAoB7jD,GAAiE,IAAD,MAC3F8jD,EAAmBrG,YAAYz9C,EAAS,KACxC+jD,EAAkB1tC,mBAAQ,WAC9B,IAAKytC,IAAqB1xC,YAAU0xC,GAAmB,MAAO,MAACpnD,GAC/D,IACE,OAAOonD,EAAmB,CAACE,mBAAS,GAAD,OAAIF,EAAiBjmC,cAAc8iC,OAAO,GAA1C,mBAAgE,MAACjkD,GACpG,MAAO8b,GACP,MAAO,MAAC9b,MAET,CAAConD,IACEG,EAAoBlrC,aAAwB,GAC5CmrC,EAAkBhiC,YAAoB+hC,EAAmB,WAAYF,GACrEI,EAAqB,UAAGD,EAAgBzlC,cAAnB,aAAG,EAAyB,GACjD2lC,EAAmBnrC,YACvBkrC,IAA0BhG,YAAOgG,GAAyBA,OAAwBznD,GAClF,GAEIqhB,EAAOmE,YAAoBkiC,EAAkB,OAAQL,GAErDM,EAAUP,IAAqB9jD,EACrC,MAAO,CACLskD,QAASD,EAAU,KAAH,oBAAUtmC,EAAKU,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9C6D,QAAS+hC,GAAWH,EAAgB5hC,SAAWvE,EAAKuE,SDpBhCiiC,CAAWX,QAAalnD,GACxC8nD,EELO,SAAuBC,GAAwE,IAAD,MACrGC,EAAgBjH,YAAYgH,EAAS,KACrCV,EAAkB1tC,mBAAQ,WAC9B,IAAKquC,EAAe,MAAO,MAAChoD,GAC5B,IACE,OAAOgoD,EAAgB,CAACV,mBAASU,IAAkB,MAAChoD,GACpD,MAAO8b,GACP,MAAO,MAAC9b,MAET,CAACgoD,IACET,EAAoBlrC,aAAwB,GAC5CmrC,EAAkBhiC,YAAoB+hC,EAAmB,WAAYF,GACrEI,EAAqB,UAAGD,EAAgBzlC,cAAnB,aAAG,EAAyB,GACjD2lC,EAAmBnrC,YACvBkrC,IAA0BhG,YAAOgG,GAAyBA,OAAwBznD,GAClF,GAEIioD,EAAOziC,YAAoBkiC,EAAkB,OAAQL,GAErDM,EAAUK,IAAkBD,EAClC,MAAO,CACLzkD,QAASqkD,EAAU,KAAH,oBAAUM,EAAKlmC,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9C6D,QAAS+hC,GAAWH,EAAgB5hC,SAAWqiC,EAAKriC,SFjBvCsiC,CAAcjB,GAE7B,MAAO,CACLrhC,QAASuhC,EAAcvhC,SAAWkiC,EAAOliC,QACzCtiB,QAAS4jD,GAAaY,EAAOxkD,QAC7B+d,KAAM8lC,EAAcS,QAAUT,EAAcS,SAAWV,GAAaY,EAAOxkD,SAAU2jD,GAAwB,Q,sKGhB1G,SAASkB,EACdC,EACAC,GAEsB,IADtBC,EACqB,uDADGhvC,IAExB,GAAI8uC,IAAWC,EAAQ,OAAO,EAC9B,GAAIA,IAAWD,EAAQ,OAAO,EAC9B,GAAKA,GAAWC,EAAhB,CAEA,GACED,EAAOG,YAAcF,EAAOE,YAC3B7jC,YAAe0jC,EAAOhhB,YAAYrvB,SAAUswC,EAAOjhB,YAAYrvB,YAC/D2M,YAAe2jC,EAAOpgB,aAAalwB,SAAUswC,EAAOpgB,aAAalwB,UAElE,MAAM,IAAIzV,MAAM,6BAGlB,OAAIgmD,EAAaE,QAAQlvC,KAChB8uC,EAAOtgB,eAAe3Z,SAASk6B,EAAOvgB,gBAExCsgB,EAAOtgB,eAAehxB,IAAID,SAASyxC,EAAalyC,IAAImD,MAAsB4U,SAASk6B,EAAOvgB,iBAGpFqgB,I,kECRf,SAASM,EAAkBrI,EAAsBC,GAC/C,IAAQ36C,EAAYH,cAAZG,QAER,EAAyBA,EACrB,CAACwkB,YAAgBk2B,EAAW16C,GAAUwkB,YAAgBm2B,EAAW36C,IACjE,MAAC1F,OAAWA,GAFhB,mBAAO4oB,EAAP,KAAeC,EAAf,KAIM6/B,EAAiB/uC,mBAAQ,WAAO,IAAD,UACnC,IAAKjU,EAAS,MAAO,GAErB,IAAMijD,EAAM,UAAGzwC,IAA8BxS,UAAjC,QAA6C,GACnDkjD,EAAchgC,GAAM,oBAAGxQ,IAAiB1S,UAApB,aAAG,EAA4BkjB,EAAOtlB,gBAAtC,QAAuD,GAC3EulD,EAAchgC,GAAM,oBAAGzQ,IAAiB1S,UAApB,aAAG,EAA4BmjB,EAAOvlB,gBAAtC,QAAuD,GAEjF,MAAM,GAAN,mBAAWqlD,GAAX,YAAsBC,GAAtB,YAAsCC,MACrC,CAACnjD,EAASkjB,EAAQC,IAEfigC,EAA8BnvC,mBAClC,kBAAMuP,IAAQw/B,GAAO,SAACv/B,GAAD,OAA4Bu/B,EAAMznC,KAAI,SAAC8nC,GAAD,MAAe,CAAC5/B,EAAM4/B,WACjF,CAACL,IAGGM,EAAwCrvC,mBAC5C,kBACEiP,GAAUC,EACN,CAEE,CAACD,EAAQC,IAFX,mBAIK6/B,EAAMznC,KAAI,SAACkI,GAAD,MAA0B,CAACP,EAAQO,OAJlD,YAMKu/B,EAAMznC,KAAI,SAACkI,GAAD,MAA0B,CAACN,EAAQM,OANlD,YAQK2/B,IAEF1/B,QAAO,SAAC1lB,GAAD,OAAsCuU,QAAQvU,EAAO,IAAMA,EAAO,OACzE0lB,QAAO,mCAAE6/B,EAAF,KAAMC,EAAN,YAAcD,EAAG3lD,UAAY4lD,EAAG5lD,WACvC8lB,QAAO,YAAyB,IAAD,mBAAtB+/B,EAAsB,KAAbC,EAAa,KAC9B,IAAK1jD,EAAS,OAAO,EACrB,IAAM2jD,EAAchxC,IAAa3S,GAE3B4jD,EAAiC,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAcF,EAAQ7lD,SAC1DimD,EAAiC,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAcD,EAAQ9lD,SAEhE,OAAKgmD,IAAiBC,KAElBD,IAAiBA,EAAajrC,MAAK,SAAC8K,GAAD,OAAUigC,EAAQ7+B,OAAOpB,UAC5DogC,IAAiBA,EAAalrC,MAAK,SAAC8K,GAAD,OAAUggC,EAAQ5+B,OAAOpB,UAIpE,KACN,CAACP,EAAQC,EAAQ6/B,EAAOI,EAAWpjD,IAG/B8jD,EAAWrJ,YAAS6I,GAG1B,OAAOrvC,mBACL,kBACEnY,OAAOgjB,OACLglC,EAEGpgC,QAAO,SAACrH,GAAD,OAAgD9J,QAAQ8J,EAAO,KAAOk+B,IAAUY,QAAU9+B,EAAO,OAExGuB,QAAwC,SAACyG,EAAD,GAAqB,IAAD,EAAV0/B,EAAU,oBAE3D,OADA1/B,EAAK0/B,EAAK5V,eAAevwC,SAAzB,UAAoCymB,EAAK0/B,EAAK5V,eAAevwC,gBAA7D,QAAyEmmD,EAClE1/B,IACN,OAET,CAACy/B,IASE,SAAS/U,EAAgBiV,EAAmCC,GACjE,IAAMC,EAAenB,EAAiB,OAACiB,QAAD,IAACA,OAAD,EAACA,EAAkB3xC,SAAU4xC,GAEnE,EAAwBxiC,cAAjB0iC,EAAP,oBAEA,OAAOlwC,mBAAQ,WACb,GAAI+vC,GAAoBC,GAAeC,EAAa5kC,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAI6kC,EACF,iBACEC,IAAMtV,iBAAiBoV,EAAcF,EAAkBC,EAAa,CAAEI,QAAS,EAAGC,cAAe,IAAK,UADxG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1BvoC,EAAI,EAAGA,GApBL,EAoBoBA,IAAK,CAAC,IAAD,EAC5BwoC,EAA0B,UAC9BJ,IAAMtV,iBAAiBoV,EAAcF,EAAkBC,EAAa,CAAEI,QAASroC,EAAGsoC,cAAe,IAAK,UADxE,QAE9B,KAEE7B,EAAc8B,EAAgBC,EAAc7wC,OAC9C4wC,EAAiBC,GAGrB,OAAOD,EAGT,OAAO,OACN,CAACL,EAAcF,EAAkBC,EAAaE,IAM5C,SAASlV,EAAiBwV,EAAuBC,GACtD,IAAMR,EAAenB,EAAkB0B,EAAD,OAAaC,QAAb,IAAaA,OAAb,EAAaA,EAAmBryC,UAEtE,EAAwBoP,cAAjB0iC,EAAP,oBAEA,OAAOlwC,mBAAQ,WACb,GAAIwwC,GAAcC,GAAqBR,EAAa5kC,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAI6kC,EACF,iBACEC,IAAMpV,kBAAkBkV,EAAcO,EAAYC,EAAmB,CAAEL,QAAS,EAAGC,cAAe,IAAK,UADzG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1BvoC,EAAI,EAAGA,GAtDL,EAsDoBA,IAAK,CAAC,IAAD,EAC5BwoC,EAAY,UAChBJ,IAAMpV,kBAAkBkV,EAAcO,EAAYC,EAAmB,CAAEL,QAASroC,EAAGsoC,cAAe,IAAK,UADvF,QAEhB,KACE7B,EAAc8B,EAAgBC,EAAc7wC,OAC9C4wC,EAAiBC,GAGrB,OAAOD,EAET,OAAO,OACN,CAACE,EAAYC,EAAmBR,EAAcC,IAG5C,SAASQ,EAA4BF,EAAuBR,GACjE,IAAMW,EAAkDrmC,cAChDve,EAAYH,cAAZG,QAEF6kD,EAAUrgC,YAAgBigC,EAAYzkD,GACtC8kD,EAAWtgC,YAAgBy/B,EAAajkD,GAG9C,GAAI4kD,EAAmB,CACrB,GAAIC,GAAW/oD,OAAOC,KAAK6oD,GAAmBtmC,SAASumC,EAAQjnD,SAC7D,OAAO,EAET,GAAIknD,GAAYhpD,OAAOC,KAAK6oD,GAAmBtmC,SAASwmC,EAASlnD,SAC/D,OAAO,EAIX,OAAO,I,0jXCxKIqrB,EAAW,uCAAG,WACzB9B,EACAC,EACA29B,EACAC,GAJyB,mBAAA7rD,EAAA,yDAMpBguB,EAASC,GANW,sBAOjB,IAAIxqB,MAAJ,iBAAoBwqB,EAApB,6BAAmDD,EAASvpB,UAP3C,wBASM,EAAAupB,EAAS8B,aAAY7B,GAArB,oBAAoC29B,IAT1C,cASnBE,EATmB,OAWnBC,EAAgBD,EACnBx0C,IAAI7N,IAAOhC,UAAUiC,KAAK,KAAO6N,IAAI9N,IAAOhC,UAAUiC,KAAKmiD,KAC3DxnD,IAAIoF,IAAOhC,UAAUiC,KAAK,MAbJ,kBAclBqiD,GAdkB,2CAAH,4DAwBXC,EAAmB,uCAAG,WACjCh+B,EACAC,GAFiC,iCAAAjuB,EAAA,6DAGjC4rD,EAHiC,+BAGb,GACpBC,EAJiC,+BAIb,IAEdE,EAAgBj8B,EAAY9B,EAAUC,EAAY29B,EAAYC,GANnC,SAOhB79B,EAASC,GAAT,MAAAD,EAAQ,YAAgB49B,GAAhB,QAA4B,CACnD17B,SAAU67B,MARqB,cAO3B11B,EAP2B,yBAU1BA,GAV0B,2CAAH,wD,yBC/B1BntB,EAAU,CACdgnB,SAAU6M,KAGCkvB,EAAS,uCAAG,WAAO3qB,EAAoBuN,EAAK3mC,GAAhC,uBAAAlI,EAAA,yDACjBoD,EAAQ,IAAIqE,IAAUS,GAAQE,MAAM00B,KAAuB55B,WACrD,IAAR2rC,EAFmB,gCAGJvN,EAAmB4qB,aAAa9oD,EAAO8F,GAHnC,cAGfmtB,EAHe,gBAICA,EAAG81B,OAJJ,cAIf31B,EAJe,yBAKdA,EAAQ6W,QALM,wBAQN/L,EAAmB8qB,QAAQvd,EAAKzrC,EAAO8F,GARjC,eAQjBmtB,EARiB,iBASDA,EAAG81B,OATF,eASjB31B,EATiB,yBAUhBA,EAAQ6W,QAVQ,4CAAH,0DAaTgf,EAAW,uCAAG,WAAO/qB,EAAoBuN,EAAK3mC,GAAhC,uBAAAlI,EAAA,yDACnBoD,EAAQ,IAAIqE,IAAUS,GAAQE,MAAM00B,KAAuB55B,WACrD,IAAR2rC,EAFqB,gCAGNvN,EAAmBgrB,aAAalpD,EAAO8F,GAHjC,cAGjBmtB,EAHiB,gBAIDA,EAAG81B,OAJF,cAIjB31B,EAJiB,yBAKhBA,EAAQ6W,QALQ,wBAQR/L,EAAmBirB,SAAS1d,EAAKzrC,EAAO8F,GARhC,eAQnBmtB,EARmB,iBASHA,EAAG81B,OATA,eASnB31B,EATmB,yBAUlBA,EAAQ6W,QAVU,4CAAH,0DAaXmf,EAAW,uCAAG,WAAOlrB,EAAoBuN,GAA3B,qBAAA7uC,EAAA,yDACb,IAAR6uC,EADqB,gCAEAvN,EAAmBgrB,aAAa,IAAKpjD,GAFrC,cAEjBmtB,EAFiB,gBAGDA,EAAG81B,OAHF,cAGjB31B,EAHiB,yBAIhBA,EAAQ6W,QAJQ,wBAOR/L,EAAmB8qB,QAAQvd,EAAK,IAAK3lC,GAP7B,eAOnBmtB,EAPmB,iBAQHA,EAAG81B,OARA,eAQnB31B,EARmB,yBASlBA,EAAQ6W,QATU,4CAAH,wD,yCCtBXof,EAAc,uCAAG,WAAOnyB,GAAP,yBAAAt6B,EAAA,yDACtB0sD,EAAgBhyB,IACnBnQ,QAAO,SAAC9K,GAAD,OAA0B,IAAhBA,EAAKC,UACtB6K,QAAO,SAAC9K,GAAD,OAA8B,IAApBA,EAAK0U,iBAA4ChzB,IAApBse,EAAK0U,cAH1B,KAIRmG,EAJQ,qCAIQrzB,IAAkBg8C,iBAJ1B,iCAItB52B,EAJsB,KAKtBsgC,EAAkBD,EAActqC,KAAI,gBAAGpC,EAAH,EAAGA,gBAAH,MAA0B,CAClEvb,QAASD,YAAWwb,GACpBwC,KAAM,iBAEFoqC,EAAgBF,EAActqC,KAAI,gBAAGpC,EAAH,EAAGA,gBAAH,MAA0B,CAChEvb,QAASD,YAAWwb,GACpBwC,KAAM,oBAXoB,UAaFX,YAAU3B,EAAYysC,GAbpB,eAatBE,EAbsB,iBAcJhrC,YAAU3B,EAAY0sC,GAdlB,eActBE,EAdsB,yBAgBrBJ,EAAcjoC,QAAO,SAAC0c,EAAO4rB,EAAWptB,GAC7C,IAAM1L,EAAa44B,EAAYltB,GAAS,IAAIl4B,IAAUolD,EAAYltB,IAAU,KACtEzL,EAAW44B,EAAUntB,GAAS,IAAIl4B,IAAUqlD,EAAUntB,IAAU,KAEtE,OAAK1L,GAAeC,EAIhBD,EAAWL,IAAIvH,IAAgB6H,EAAS84B,IAAI3gC,GACvC8U,EAGH,GAAN,mBAAWA,GAAX,CAAkB4rB,IAPT5rB,IAQR,KA7ByB,4CAAH,uD,wVCGrB8rB,EAA8B,SAACxuC,GACnC,IAAQpb,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAK6jD,QAAQ,YAAYgG,SAAO,EAACC,UAAW,cAAC,KAAD,CAActpD,MAAM,OAAOua,MAAM,YAAYgvC,GAAG,SAAc3uC,GAA1G,aACGpb,EAAE,YAKHgqD,EAAmC,SAAC5uC,GACxC,IAAQpb,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAK6jD,QAAQ,UAAUgG,SAAO,EAACC,UAAW,cAAC,IAAD,CAAetpD,MAAM,OAAOua,MAAM,UAAUgvC,GAAG,SAAc3uC,GAAvG,aACGpb,EAAE,iBAKHiqD,EAA8B,SAAC7uC,GACnC,IAAQpb,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAK6jD,QAAQ,aAAagG,SAAO,GAAKzuC,GAAtC,aACGpb,EAAE,YAKHkqD,EAAoC,SAAC9uC,GACzC,IAAQpb,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAK6jD,QAAQ,YAAYgG,SAAO,EAACC,UAAW,cAAC,KAAD,CAAatpD,MAAM,OAAOua,MAAM,YAAYgvC,GAAG,SAAc3uC,GAAzG,aACGpb,EAAE,cAKHmqD,EAAyC,SAAC/uC,GAC9C,IAAQpb,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAK6jD,QAAQ,UAAUgG,SAAO,EAACC,UAAW,cAAC,IAAD,CAAetpD,MAAM,OAAOua,MAAM,UAAUgvC,GAAG,SAAc3uC,GAAvG,aACGpb,EAAE,YAKHoqD,EAAiC,SAAChvC,GACtC,IAAQpb,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAK6jD,QAAQ,UAAUiG,UAAW,cAAC,KAAD,CAAUtpD,MAAM,OAAOua,MAAM,UAAUgvC,GAAG,SAAc3uC,GAA1F,aACGpb,EAAE,gBAKHqqD,EAA8B,SAACjvC,GACnC,IAAQpb,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAK6jD,QAAQ,UAAUiG,UAAW,cAAC,KAAD,CAAWtpD,MAAM,OAAOua,MAAM,UAAUgvC,GAAG,SAAc3uC,GAA3F,aACGpb,EAAE,YAKHsqD,EAAgC,SAAClvC,GACrC,IAAQpb,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAK6jD,QAAQ,eAAeiG,UAAW,cAAC,IAAD,CAAWtpD,MAAM,OAAOua,MAAM,eAAegvC,GAAG,SAAc3uC,GAArG,aACGpb,EAAE,e,8NCzEHuqD,EAASC,cACThnD,EAAUgzC,SAAS35C,KAAgC,IAEnD4tD,EAAW,IAAIC,IAAkB,CAAEC,kBAAmB,CAACnnD,KAEvDonD,EAAgB,IAAIC,IAAuB,CAC/CC,IAAI,eAAItnD,EAAU+mD,GAClBQ,OAAQ,gDACRC,QAAQ,EACRC,gBAVuB,OAanBC,EAAe,IAAIC,eAAa,CAAER,kBAAmB,CAACnnD,KAE/C4nD,GAA4D,mBACtEC,IAAeC,SAAWb,GAD4C,cAEtEY,IAAeE,cAAgBX,GAFuC,cAGtES,IAAeG,IAAMN,GAHiD,GAM5DO,EAAa,SAAC5nD,GACzB,IAAMN,EAAU,IAAI6C,IAAOwnC,UAAU8d,aAAa7nD,GAElD,OADAN,EAAQ0nD,gBAvBe,KAwBhB1nD,GAOIooD,EAAW,uCAAG,WAAO9nD,EAAekR,EAAiBsvC,GAAvC,yBAAA1nD,EAAA,0DACrBwkD,OAAOyK,aADc,gCAEKzK,OAAOyK,aAAaC,QAAQ92C,EAASsvC,GAF1C,uBAEfyH,EAFe,EAEfA,UAFe,kBAGhBA,GAHgB,sBAUrBjoD,EAASA,gBAVY,aAUrB,EAAmBkoD,IAVE,wBAWjBC,EAAY5lD,IAAOwY,MAAMqtC,QAAQ7lD,IAAOwY,MAAMstC,YAAY7H,IAXzC,oBAYCxgD,EAASA,gBAZV,aAYC,EAAmBkoD,GAAGI,oBAAoB,CAACH,EAAWj3C,IAZvD,eAYjB+2C,EAZiB,yBAahBA,GAbgB,iCAgBlBjoD,EAASqR,UAAUH,GAAS42C,YAAYtH,IAhBtB,4CAAH,2D,qGC/BnB+H,EAMAC,E,qGAWU,SAASC,EAAT,GAAkG,IAU3GC,EAWAC,EArBiCC,EAAyE,EAAzEA,YAAaC,EAA4D,EAA5DA,eAAgBhnC,EAA4C,EAA5CA,SAAUinC,EAAkC,EAAlCA,YAC5E,EAA0C1uD,mBAAS,IAAnD,mBAAO2uD,EAAP,KAAsBC,EAAtB,KACA,EAA0C5uD,mBAAS,IAAnD,mBAAO6uD,EAAP,KAAsBC,EAAtB,KAEQ/sD,EAAMC,cAAND,EAEFgtD,EACc,KAAlBJ,IAAyBH,EAAc,KAAKjnD,QAAQ,KAAOu0B,OAAO+H,WAAW8qB,GAAepnD,QAAQ,GAChGynD,EAAyC,KAAlBH,IAAyBpnC,EAAW,IAAI7lB,aAAeitD,EAoBpF,SAASI,EAAoBntD,GAC3B8sD,EAAiB9sD,GAEjB,IACE,IAAMotD,EAA6BpzB,OAAOyc,UAAqC,IAA3Bzc,OAAO+H,WAAW/hC,IAAcF,aAC/Ek6B,OAAOuM,MAAM6mB,IAA+BA,EAA6B,KAC5ET,EAAeS,GAEjB,MAAOvzC,GACPC,QAAQD,MAAMA,IAIlB,SAASwzC,EAAoBrtD,GAC3BgtD,EAAiBhtD,GAEjB,IACE,IAAMstD,EAA8C,GAAzBtzB,OAAOyc,SAASz2C,IACtCg6B,OAAOuM,MAAM+mB,IAAeA,EAAa,GAC5CV,EAAYU,GAEd,MAAOzzC,GACPC,QAAQD,MAAMA,IAIlB,OAxCE2yC,EAHoB,KAAlBK,GAAyBI,EAElBA,GAAwBP,EAAc,GAC/BL,EAAckB,SACrBN,GAAwBP,EAAc,IAC/BL,EAAcmB,eAEdzvD,EANAsuD,EAAcoB,aAa9BhB,EAHoB,KAAlBM,GAAyBG,OAGXnvD,EAFAuuD,EAAcmB,aAgC9B,eAAC,IAAD,CAAYvsD,IAAI,KAAhB,UACE,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACE,eAACZ,EAAA,EAAD,WACE,cAAC,KAAD,CAAM6iD,SAAS,OAAf,SAAuBljD,EAAE,wBACzB,cAAC6jC,EAAA,EAAD,CACEC,KAAM9jC,EAAE,+FACRgkD,GAAG,WAGP,eAAC,IAAD,CAAMyJ,SAAU,CAAC,OAAQ,OAAQ,UAAjC,UACE,eAAC,IAAD,CAAMC,oBAAoB,cAAcC,QAAQ,MAAMC,GAAI,CAAC,MAAO,MAAO,GAAI7D,GAAI,CAAC,EAAG,EAAG,OAAxF,UACE,cAAC,IAAD,CACE5uC,QAAS,WACP0xC,EAAiB,IACjBH,EAAe,KAEjB7I,QAAyB,KAAhB4I,EAAqB,UAAY,WAL5C,kBASA,cAAC,IAAD,CACEtxC,QAAS,WACP0xC,EAAiB,IACjBH,EAAe,KAEjB7I,QAAyB,KAAhB4I,EAAqB,UAAY,WAL5C,kBASA,cAAC,IAAD,CACEtxC,QAAS,WACP0xC,EAAiB,IACjBH,EAAe,MAEjB7I,QAAyB,MAAhB4I,EAAsB,UAAY,WAL7C,mBAUF,eAACpsD,EAAA,EAAD,WACE,cAAC,KAAD,CACEwtD,MAAM,KACNC,aAAcrB,EAAc,KAAKjnD,QAAQ,GACzCzF,MAAO6sD,EACPmB,OAAQ,WACNb,GAAqBT,EAAc,KAAKjnD,QAAQ,KAElDwoD,SAAU,SAACC,GAAD,OAAOf,EAAoBe,EAAEC,OAAOnuD,QAC9CouD,WAAYnB,EACZoB,WAAY,CAAC,GAAI,GAAI,KAAKtsC,SAAS2qC,KAErC,cAAC,KAAD,CAAM1xC,MAAM,UAAUooC,MAAI,EAACa,GAAG,MAA9B,uBAKDuI,GACD,cAAClsD,EAAA,EAAD,CACEggB,MAAO,CACL6iC,SAAU,OACVmL,WAAY,MACZtzC,MAAOwxC,IAAkBH,EAAcoB,aAAe,MAAQ,WAJlE,SAOGjB,IAAkBH,EAAcoB,aAC7BxtD,EAAE,qCACFusD,IAAkBH,EAAckB,SAChCttD,EAAE,6BACFA,EAAE,yCAKZ,eAAC,IAAD,CAAYiB,IAAI,KAAhB,UACE,eAACZ,EAAA,EAAD,WACE,cAAC,KAAD,CAAM6iD,SAAS,OAAf,kCACA,cAACrf,EAAA,EAAD,CAAgBC,KAAM9jC,EAAE,0EAA2EgkD,GAAG,WAExG,eAAC3jD,EAAA,EAAD,WACE,cAAC,KAAD,CACE0a,MAAOyxC,EAAgB,WAAQ1uD,EAC/BiwD,OAAQ,WACNX,GAAqB1nC,EAAW,IAAI7lB,aAEtCiuD,aAAcpoC,EAAW,IAAI7lB,WAC7BE,MAAO+sD,EACPkB,SAAU,SAACC,GAAD,OAAOb,EAAoBa,EAAEC,OAAOnuD,UAEhD,cAAC,KAAD,CAAMuuD,GAAG,MAAMpL,SAAS,OAAxB,SACGljD,EAAE,uB,SAjKVosD,K,4BAAAA,E,oBAAAA,E,uBAAAA,M,cAMAC,K,6BAAAA,M,KCIL,IA6GekC,EA7GqC,SAAC,GAAmB,IAAjBhL,EAAgB,EAAhBA,UACrD,EAA4DtlD,oBAAS,GAArE,mBAAOuwD,EAAP,KAA+BC,EAA/B,KACA,EAA0DppC,cAA1D,mBAAOC,EAAP,KAA8BopC,EAA9B,KACA,EAAsBlpC,cAAtB,mBAAOmpC,EAAP,KAAYC,EAAZ,KACA,EAAuClqC,cAAvC,mBAAOC,EAAP,KAAmBkqC,EAAnB,KACA,EAA0C5pC,cAA1C,mBAAO0iC,EAAP,KAAsBmH,EAAtB,KACA,EAAwC/qC,cAAxC,mBAAOG,EAAP,KAAkBG,EAAlB,KACQ8sB,EAAsBJ,cAAtBI,kBAEAnxC,EAAMC,cAAND,EAER,OAAIwuD,EAEA,cAAC,KAAD,CACE/J,MAAOzkD,EAAE,iBACT+uD,OAAQ,kBAAMN,GAA0B,IACxClL,UAAWA,EACXljC,MAAO,CAAE2uC,SAAU,SAJrB,SAME,eAAC,KAAD,WACE,cAAC,KAAD,CAASnL,QAAQ,UAAU+J,GAAG,OAA9B,SACE,cAAC,KAAD,UACG5tD,EACC,8IAIN,cAAC,KAAD,CAAM4tD,GAAG,OAAT,SAAiB5tD,EAAE,4DACnB,cAAC,IAAD,CACE6jD,QAAQ,SACRjrC,GAAG,sBACHuC,QAAS,WAEwE,YAA3EgmC,OAAO8N,OAAP,2DACFJ,IACAJ,GAA0B,KAPhC,SAWGzuD,EAAE,8BAQX,cAAC,KAAD,CAAOykD,MAAM,WAAWK,iBAAiB,uBAAuBvB,UAAWA,EAA3E,SACE,cAAC,KAAD,UACE,eAAC,IAAD,CAAYtiD,IAAI,KAAKof,MAAO,CAAE1f,QAAS,QAAvC,UACE,cAAC,KAAD,CAAMwiD,MAAI,EAACD,SAAS,OAApB,SACGljD,EAAE,0BAEL,cAAC,EAAD,CACEysD,YAAannC,EACbonC,eAAgBgC,EAChBhpC,SAAUipC,EACVhC,YAAaiC,IAEf,cAAC,KAAD,CAAMzL,MAAI,EAACD,SAAS,OAAOY,GAAG,OAA9B,SACG9jD,EAAE,wBAEL,eAACK,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,WACE,cAAC,KAAD,CAAM6iD,SAAS,OAAf,SAAuBljD,EAAE,wBACzB,cAAC6jC,EAAA,EAAD,CACEC,KAAM9jC,EAAE,uFACRgkD,GAAG,WAGP,cAAC,KAAD,CACEprC,GAAG,4BACHs2C,QAASvqC,EACTqpC,SACErpC,EACI,WACEwsB,EAAkB,MAClB0d,KAEF,kBAAMJ,GAA0B,SAI1C,eAACpuD,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,WACE,cAAC,KAAD,CAAM6iD,SAAS,OAAf,SAAuBljD,EAAE,uBACzB,cAAC6jC,EAAA,EAAD,CAAgBC,KAAM9jC,EAAE,yCAA0CgkD,GAAG,WAEvE,cAAC,KAAD,CACEprC,GAAG,iCACHs2C,QAASvH,EACTqG,SAAU,WACRc,GAAkBnH,SAIxB,eAAC,IAAD,CAAMrD,eAAe,gBAAgB6K,WAAW,SAASvB,GAAG,MAA5D,UACE,eAACvtD,EAAA,EAAD,WACE,cAAC,KAAD,CAAM6iD,SAAS,OAAf,SAAuBljD,EAAE,WACzB,cAAC6jC,EAAA,EAAD,CAAgBC,KAAM9jC,EAAE,4DAAmDgkD,GAAG,WAEhF,cAAC,KAAD,CAAekL,QAAShrC,EAAW8pC,SAAU3pC,eCjH1C,SAAS+qC,IACtB,MAAiCC,aAAS,cAAC,EAAD,KAAnCC,EAAP,oBACA,EAAqB5qC,cAAdC,EAAP,oBAEA,OACE,cAAC,KAAD,CAAiB4qC,KAAM5qC,EAAvB,SACE,cAAC,IAAD,CAAQk/B,QAAQ,OAAO18B,EAAG,EAAGhM,QAASm0C,EAAwB12C,GAAG,8BAAjE,SACE,cAAC,KAAD,CAAUmC,MAAM,UAAUva,MAAM,a,mECJlCgvD,EAAmBlvD,IAAOU,IAAV,8PASX,qBAAGwuC,MAAkBG,OAAO8f,WAGjCC,EAAcpvD,IAAOU,IAAV,2CACN,gBAAG2zB,EAAH,EAAGA,QAASnK,EAAZ,EAAYA,QAASglB,EAArB,EAAqBA,MAArB,OACP7a,EAAU6a,EAAMG,OAAO8f,QAAUjlC,EAAUglB,EAAMG,OAAOnlB,QAAUglB,EAAMG,OAAOggB,WAGpE,SAASC,EAAT,GAA0D,IAAD,IAAlC58B,EAAkC,EAAlCA,GAC5BxvB,EAAYH,cAAZG,QAEFupB,EAAO,OAAGiG,QAAH,IAAGA,OAAH,EAAGA,EAAIjG,QACd4H,IAAU,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAIG,SACf3I,GAAWmK,GAAW3B,IAA8B,KAAvB,UAAAA,EAAGG,eAAH,eAAY6W,SAA8C,qBAA9B,UAAOhX,EAAGG,eAAV,aAAO,EAAY6W,SAElF,OAAKxmC,EAGH,eAACgsD,EAAD,CAAkB76B,QAASA,EAASnK,QAASA,EAA7C,UACE,cAAC,KAAD,CAAcm5B,KAAMlwC,YAAeuf,EAAGN,KAAM,cAAelvB,GAA3D,gBAAsEupB,QAAtE,IAAsEA,IAAWiG,EAAGN,OACpF,cAACg9B,EAAD,CAAa/6B,QAASA,EAASnK,QAASA,EAAxC,SACGmK,EAAU,cAACk7B,EAAA,EAAD,IAAmBrlC,EAAU,cAAC,IAAD,CAAezP,MAAM,YAAe,cAAC,IAAD,CAAWA,MAAM,iBAN9E,KCnBvB,SAAS+0C,EAAqBnzD,EAAuBozD,GACnD,OAAOA,EAAEl9B,UAAYl2B,EAAEk2B,UAGzB,SAASm9B,EAAmBv9B,GAC1B,OACE,cAAC,IAAD,CAAMw9B,cAAc,SAApB,SACGx9B,EAAa1T,KAAI,SAACiU,GACjB,OAAO,cAAC48B,EAAD,CAA0C58B,GAAIA,GAA5BA,EAAGN,KAAOM,EAAGH,gBAM9C,I,IA2Ceq9B,EA3CyC,SAAC,GAAmB,IAAjB3M,EAAgB,EAAhBA,UACzD,EAA6BjgD,cAArByR,EAAR,EAAQA,QAASvR,EAAjB,EAAiBA,QACXwgB,EAAWC,cACX4sB,EAAkBF,cAEhB3wC,EAAMC,cAAND,EAEFmwD,EAA2B14C,mBAAQ,WAEvC,OADYnY,OAAOgjB,OAAOuuB,GACf3pB,OAAO0pB,KAAqBlnB,KAAKomC,KAC3C,CAACjf,IAEElc,EAAUw7B,EAAyBjpC,QAAO,SAAC8L,GAAD,OAASA,EAAGG,WACtDi9B,EAAYD,EAAyBjpC,QAAO,SAAC8L,GAAD,OAAQA,EAAGG,WAEvDk9B,EAA+BpxD,uBAAY,WAC3CuE,GAASwgB,EAAS8O,YAAqB,CAAEtvB,eAC5C,CAACwgB,EAAUxgB,IAEd,OACE,cAAC,KAAD,CAAOihD,MAAOzkD,EAAE,uBAAwB8kD,iBAAiB,uBAAuBvB,UAAWA,EAA3F,SACGxuC,GACC,cAAC,KAAD,UACK4f,EAAQ7R,QAAYstC,EAAUttC,OAC/B,qCACE,eAAC,IAAD,CAAS8qC,GAAG,OAAOvtC,MAAO,CAAEikC,eAAgB,iBAA5C,UACE,cAAC,KAAD,UAAOtkD,EAAE,yBACT,cAAC,IAAD,CAAQ6jD,QAAQ,WAAWgK,MAAM,KAAK1yC,QAASk1C,EAA/C,SACGrwD,EAAE,kBAGNgwD,EAAmBr7B,GACnBq7B,EAAmBI,MAGtB,cAAC,KAAD,UAAOpwD,EAAE,iCC/CNswD,EAXM,WACnB,MAAqCjB,aAAS,cAAC,EAAD,KAAvCkB,EAAP,oBACA,OACE,mCACE,cAAC,IAAD,CAAQ1M,QAAQ,OAAO18B,EAAG,EAAGhM,QAASo1C,EAA4BvM,GAAG,OAArE,SACE,cAAC,IAAD,CAAajpC,MAAM,UAAUva,MAAM,cCOrCgwD,EAAqBlwD,YAAOmwD,IAAPnwD,CAAH,0JAKK,qBAAGkvC,MAAkBG,OAAOK,cAkC1C0gB,EA/BoB,SAAC,GAA2D,IAAzDjM,EAAwD,EAAxDA,MAAOkM,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,OAA+B,IAAvBC,gBAAuB,SAC5F,OACE,eAACN,EAAD,WACE,eAAC,IAAD,CAAMrB,WAAW,SAASpF,GAAI+G,EAAW,EAAI,OAA7C,UACGD,GACC,cAAC,IAAD,CAAYE,GAAIC,IAAM9e,GAAI2e,EAA1B,SACE,cAAC,IAAD,CAAerwD,MAAM,WAGzB,eAAC,IAAD,CAAMyvD,cAAc,SAApB,UACE,cAAC,IAAD,CAASc,GAAG,KAAKnD,GAAG,MAApB,SACGnJ,IAEH,eAAC,IAAD,CAAM0K,WAAW,SAAjB,UACGyB,GAAU,cAAC/sB,EAAA,EAAD,CAAgBC,KAAM8sB,EAAQ7G,GAAG,QAC5C,cAAC,KAAD,CAAMhvC,MAAM,aAAamoC,SAAS,OAAlC,SACGyN,cAKPG,GACA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,WC5CGG,EAAc3wD,YAAOovC,IAAPpvC,CAAH,wGAUT,SAAS4wD,EAAT,GAA+D,IAA5ClzD,EAA2C,EAA3CA,SAChC,OAAO,cAACizD,EAAD,UAAcjzD,M,8JC0DRsyC,IAtDC,WACd,IAAQtwC,EAAMC,cAAND,EACFgkB,EAAW+U,cACjB,EAAiCz1B,cAAzB6tD,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACVC,EAAe9jB,cAAf8jB,WA+CR,MAAO,CAAE9gB,MA7CKtxC,uBACZ,SAACqyD,GACC,IAAMC,EAAYnG,IAAiBkG,GAC/BC,EACFJ,EAASI,EAAD,uCAAY,WAAO33C,GAAP,SAAAjd,EAAA,2DACdid,aAAiB43C,KADH,gCAEOtQ,cAFP,eAIdiQ,EAASI,GAJK,sBAOhBpQ,OAAOjkD,aAAau0D,WAAWC,MAC3B93C,aAAiB+3C,KAA2B/3C,aAAiBg4C,qBAC/DP,EAAWrxD,EAAE,kBAAmBA,EAAE,0BAElC4Z,aAAiBi4C,KACjBj4C,aAAiBk4C,KAEbP,aAAqB1G,MACC0G,EACRQ,sBAAwB,MAE1CV,EAAWrxD,EAAE,uBAAwBA,EAAE,6CAEvCqxD,EAAWz3C,EAAMuF,KAAMvF,EAAMyqC,SApBf,2CAAZ,uDAyBRgN,EAAWrxD,EAAE,4BAA6BA,EAAE,oCAGhD,CAACA,EAAGmxD,EAAUE,IAaA7gB,OAVDvxC,uBAAY,WACzB+kB,EAAS45B,eACTwT,IAEIjQ,OAAOjkD,aAAaC,QAAQ,mBAC9BiuD,IAAiBR,cAAcoH,QAC/B5G,IAAiBR,cAAcmH,sBAAwB,QAExD,CAACX,EAAYptC,O,6BCpElB,8CAKaiuC,EAAa7uB,YAAY,CACpCjkB,KAAM,QACN9hB,aAJ+B,CAAEszB,aAAc,EAAGsvB,aAAc,GAKhE5c,SAAU,CACRwc,SAAU,SAACzhD,EAAOqzB,GACW,IAAvBrzB,EAAM6hD,eACR7hD,EAAM6hD,aAAexuB,EAAOC,SAG9BtzB,EAAMuyB,aAAec,EAAOC,YAMnBmuB,EAAaoS,EAAWtuB,QAAxBkc,SAEAoS,MAAf,S,8BCtBA,wDAGazQ,EAAQ,CAAC3kD,oCAA8BA,mCAA8BA,oCAMnE2tD,IAJI,WACjB,OAAO0H,IAAO1Q,K,6BCNhB,sCAAMtO,EAAiB,kDAEhB,SAASif,EAAgBC,GAC9B,IAAMhzD,EAAQgzD,EAAWhzD,MAAM8zC,GAC/B,GAAK9zC,EACL,MAAO,CAAEymD,QAAQ,GAAD,OAAKzmD,EAAM,GAAG6f,cAAd,OAAkCozC,QAASjzD,EAAM,M,0ICF7DkzD,EAASC,YAAH,sHASNC,EAAYlyD,IAAOmyD,IAAV,iIACGH,GACN,qBAAGnyC,QACJ,qBAAGA,QAEA,gBAAGuyC,EAAH,EAAGA,OAAQljB,EAAX,EAAWA,MAAX,cAAuBkjB,QAAvB,IAAuBA,IAAUljB,EAAMG,OAAO8f,WAQ7C,SAASI,EAAT,GAQX,IAAD,IAPD1vC,YAOC,MAPM,OAON,EANDuyC,EAMC,EANDA,OACGC,EAKF,iBACD,OACE,cAACH,EAAD,yBAAWI,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6B3yC,KAAMA,EAAMuyC,OAAQA,GAAYC,GAA9G,aACE,sBACEI,EAAE,6HACFtP,YAAY,MACZuP,cAAc,QACdC,eAAe,e,6JC/BjBC,EAAqB,IAAIC,IAAI,CAAEC,WAAW,IAAQC,QAAQC,GAOjD,SAAeC,EAA9B,oC,4CAAe,WACbh/B,EACAi/B,GAFa,uCAAA72D,EAAA,2DAIP82D,EAAYtB,YAAgB59B,IAJrB,0CASci/B,EAAsBC,EAAU5N,SAT9C,OAST6N,EATS,6DAWT75C,QAAQD,MAAR,sCAA6C65C,EAAU5N,SAAvD,MACM,IAAIzlD,MAAJ,sCAAyCqzD,EAAU5N,UAZhD,kBAgBT8N,EAAgBC,YAAiBF,GAhBxB,yDAkBT75C,QAAQD,MAAM,yCAA0C85C,GAClD,IAAItzD,MAAJ,kDAAqDszD,IAnBlD,QAqBXz4B,EAAO4mB,YAAU,GAAD,OAAI8R,GAAJ,iBAAoBF,EAAUpB,eAA9B,QAAyC,KArB9C,wBAuBXp3B,EAAO4mB,YAAUttB,GAvBN,QAyBJ/U,EAAI,EAzBA,aAyBGA,EAAIyb,EAAKnY,QAzBZ,wBA0BL+R,EAAMoG,EAAKzb,GACXq0C,EAASr0C,IAAMyb,EAAKnY,OAAS,EAC/BhmB,OA5BO,sBA8BQF,MAAMi4B,GA9Bd,QA8BT/3B,EA9BS,6DAgCT+c,QAAQD,MAAM,uBAAwB2a,EAAtC,OACIs/B,EAjCK,uBAiCS,IAAIzzD,MAAJ,kCAAqCm0B,IAjC9C,kDAqCNz3B,EAASw/C,GArCH,qBAsCLuX,EAtCK,uBAsCS,IAAIzzD,MAAJ,kCAAqCm0B,IAtC9C,gEA0CQz3B,EAASC,OA1CjB,WA0CLA,EA1CK,OA2CNm2D,EAAmBn2D,GA3Cb,uBA4CH+2D,EA5CG,oBA6CPZ,EAAmBa,cA7CZ,aA6CP,EAA2B3yC,QAAe,SAACyG,EAAMjO,GAAW,IAAD,EACnD1F,EAAG,UAAO0F,EAAco6C,SAArB,sBAAiCp6C,EAAMyqC,eAAvC,QAAkD,IAC3D,OAAOx8B,EAAK/E,OAAS,EAAd,UAAqB+E,EAArB,aAA8B3T,GAA9B,UAAyCA,KAC/C,WAhDI,QAgDG,gBACN,IAAI9T,MAAJ,wCAA2C0zD,IAjDxC,iCAmDJ/2D,GAnDI,QAyBoByiB,IAzBpB,8BAqDP,IAAIpf,MAAM,mCArDH,0E,4CCZT6zD,EAAgB,CACpB,CACEC,UAAU,EACVjpC,OAAQ,CACN,CACE9L,KAAM,OACNzL,KAAM,YAGVyL,KAAM,WACNg1C,QAAS,CACP,CACEh1C,KAAM,kBACNzL,KAAM,YAGV0gD,SAAS,EACTC,gBAAiB,OACjB3gD,KAAM,aAGJ4gD,EAAoB,6CAEpBC,EAAe,CACnB,CACEL,UAAU,EACVjpC,OAAQ,CACN,CACEupC,aAAc,UACdr1C,KAAM,OACNzL,KAAM,YAGVyL,KAAM,cACNg1C,QAAS,CACP,CACEK,aAAc,QACdr1C,KAAM,GACNzL,KAAM,UAGV0gD,SAAS,EACTC,gBAAiB,OACjB3gD,KAAM,aAKV,SAAS8xC,EAAiBF,EAAyBzhD,GACjD,OAAO,IAAIoR,IAASqwC,EAAiBiP,EAAc1wD,G,4CAQtC,WAAqCgiD,EAAiBhiD,GAAtD,mBAAAlH,EAAA,6DACP83D,EAAuB,IAAIx/C,IAASq/C,EAAmBL,EAAepwD,GACtE6uB,EAAO0yB,mBAASS,GAFT,SAGiB4O,EAAqBC,SAAShiC,GAH/C,cAGP4yB,EAHO,yBAINE,EAAiBF,EAAiBzhD,GAAU8wD,YAAYjiC,IAJlD,4C,kCCRAkiC,IAzCf,WACE,IAAQrxD,EAAYsxD,cAAZtxD,QACAC,EAAYF,cAAZE,QACFwgB,EAAWC,cAEX6wC,EAAc71D,uBAClB,SAAC4mD,GACC,GAAIriD,IAAYnC,IAAQC,QACtB,MAAM,IAAIlB,MAAM,4CAElB,ODuCS,SAAf,oCCvCaozD,CAAsB3N,EAAStiD,KAExC,CAACC,EAASD,IAIZ,OAAOtE,sBAAW,uCAChB,WAAOs1B,GAAP,6BAAA53B,EAAA,6DAAwBo4D,IAAxB,iCACQngC,EAAYogC,cACdD,GACF/wC,EAAS0Q,IAAeC,QAAQ,CAAEC,YAAWC,IAAKN,KAHtD,kBAKSg/B,EAAah/B,EAASugC,GAC1BhoC,MAAK,SAACiI,GAIL,OAHIggC,GACF/wC,EAAS0Q,IAAeI,UAAU,CAAED,IAAKN,EAASQ,YAAWH,eAExDG,KAERpI,OAAM,SAAC/S,GAKN,MAJAC,QAAQD,MAAR,oCAA2C2a,GAAW3a,GAClDm7C,GACF/wC,EAAS0Q,IAAeW,SAAS,CAAER,IAAKN,EAASK,YAAWU,aAAc1b,EAAMyqC,WAE5EzqC,MAjBZ,2CADgB,sDAqBhB,CAACoK,EAAU8wC,M,qLC5CFrnB,EAAgB5vC,6BAA+BC,GAE/Cm3D,EAA2B,SAAC,GAAkB,IAAhBj3D,EAAe,EAAfA,SACzC,EAA4BC,mBAAoC,IAAhE,mBAAOi3D,EAAP,KAAeC,EAAf,KAEMC,EAAQn2D,uBACZ,YAAsD,IAAnDwlD,EAAkD,EAAlDA,MAAOjE,EAA2C,EAA3CA,YAAa9sC,EAA8B,EAA9BA,KACrByhD,GAAU,SAACE,GACT,IAAMz8C,EAAK08C,oBAAU7Q,GAGf8Q,EAAgBF,EAAWnuC,QAAO,SAACsuC,GAAD,OAAeA,EAAU58C,KAAOA,KAExE,MAAM,CACJ,CACEA,KACA6rC,QACAjE,cACA9sC,SALJ,mBAOK6hD,SAIT,CAACJ,IAoBH,OACE,cAAC1nB,EAAc3tC,SAAf,CAAwBC,MAAO,CAAEm1D,SAAQO,MAN7B,kBAAMN,EAAU,KAMoBO,OALnC,SAAC98C,GACdu8C,GAAU,SAACE,GAAD,OAAgBA,EAAWnuC,QAAO,SAACsuC,GAAD,OAAeA,EAAU58C,KAAOA,SAIpBy4C,WAlBvC,SAAC5M,EAAejE,GACjC,OAAO4U,EAAM,CAAE3Q,QAAOjE,cAAa9sC,KAAMiiD,KAAWC,UAiBgBC,UAfpD,SAACpR,EAAejE,GAChC,OAAO4U,EAAM,CAAE3Q,QAAOjE,cAAa9sC,KAAMiiD,KAAWG,QAc2BC,aAZ5D,SAACtR,EAAejE,GACnC,OAAO4U,EAAM,CAAE3Q,QAAOjE,cAAa9sC,KAAMiiD,KAAWK,WAWyCC,aAT1E,SAACxR,EAAejE,GACnC,OAAO4U,EAAM,CAAE3Q,QAAOjE,cAAa9sC,KAAMiiD,KAAWO,YAQpD,SACGl4D,K,QCvCQm4D,EARO,WACpB,MAA2B5oB,cAAnB2nB,EAAR,EAAQA,OAAQQ,EAAhB,EAAgBA,OAIhB,OAAO,cAAC,KAAD,CAAgBR,OAAQA,EAAQkB,SAFlB,SAACx9C,GAAD,OAAgB88C,EAAO98C,Q,oPCFxCy9C,EAAc/1D,IAAOg2D,MAAV,snBACN,gBAAG18C,EAAH,EAAGA,MAAO41B,EAAV,EAAUA,MAAV,OAAuB51B,EAAQ41B,EAAMG,OAAOggB,QAAUngB,EAAMG,OAAO7L,QAS9D,gBAAGrjC,EAAH,EAAGA,MAAH,OAAeA,GAASA,KAqB3B,qBAAG+uC,MAAkBG,OAAO4mB,cAInCC,EAAa72D,OAAO,0BAEb82D,EAAQC,IAAM7uC,MAAK,YAWyC,IAVvE9nB,EAUsE,EAVtEA,MACAmxC,EASsE,EATtEA,YACA4c,EAQsE,EARtEA,YACG6E,EAOmE,iBAO9D3yD,EAAMC,cAAND,EAER,OACE,cAACq2D,EAAD,2BACM1D,GADN,IAEE5yD,MAAOA,EACPiuD,SAAU,SAAC2I,GAZE,IAACC,GACM,MADNA,EAcHD,EAAMzI,OAAOnuD,MAAMH,QAAQ,KAAM,OAblB42D,EAAWzzC,KAAKtN,YAAamhD,MACvD1lB,EAAY0lB,IAeZC,UAAU,UACVpS,MAAOzkD,EAAE,gBACT82D,aAAa,MACbC,YAAY,MAEZrjD,KAAK,OACLsjD,QAAQ,sBACRlJ,YAAaA,GAAe,MAC5BmJ,UAAW,EACXC,UAAW,GACXC,WAAW,cCpEXC,EAAW92D,IAAOU,IAAV,iHAID,qBAAGq2D,SAA2B,8BAAgC,kCAErEC,EAAuBh3D,YAAOi3D,KAAQC,MAAM,CAAE3T,QAAS,OAAQgK,MAAO,MAA/CvtD,CAAH,kDAGpBm3D,EAAWn3D,IAAOU,IAAV,6LAIH,qBAAGwuC,MAAkBG,OAAO7L,QAKjC4zB,EAAap3D,IAAOU,IAAV,kKAIG,qBAAG22D,UAA6B,MAAQ,UACrC,qBAAGnoB,MAAkBG,OAAOC,cAG5CgoB,EAAYt3D,IAAOU,IAAV,kGAEO,qBAAGwuC,MAAkBG,OAAO2mB,SAClC,qBAAG9mB,MAAkBqoB,QAAQC,SAkB9B,SAASC,EAAT,GAec,IAAD,EAd1Bh4D,EAc0B,EAd1BA,MACAmxC,EAa0B,EAb1BA,YACA8mB,EAY0B,EAZ1BA,MACAC,EAW0B,EAX1BA,cACAC,EAU0B,EAV1BA,MACAC,EAS0B,EAT1BA,iBACAtiD,EAQ0B,EAR1BA,SAQ0B,IAP1BuiD,6BAO0B,aAN1BC,mBAM0B,aAL1BlyC,YAK0B,MALnB,KAKmB,MAJ1BwxC,iBAI0B,SAH1BW,EAG0B,EAH1BA,cACA1/C,EAE0B,EAF1BA,GACA2/C,EAC0B,EAD1BA,gBAEQxjD,EAAY1R,cAAZ0R,QACFyjD,EAA0BzpB,YAAkB,OAACh6B,QAAD,IAACA,SAAWjX,EAAZ,OAAuB+X,QAAvB,IAAuBA,SAAY/X,GAC7EkC,EAAMC,cAAND,EACFy4D,EAAkBP,GAASl4D,EAAE,SAEnC,EAAiCqvD,aAC/B,cAACqJ,EAAA,EAAD,CACEP,iBAAkBA,EAClBQ,iBAAkB9iD,EAClB+iD,sBAAuBN,EACvBC,gBAAiBA,KALdM,EAAP,oBAQA,OACE,cAACnB,EAAD,CAAY9+C,GAAIA,EAAhB,SACE,eAACg/C,EAAD,CAAWD,UAAWA,EAAtB,WACIA,GACA,cAACF,EAAD,UACE,eAACp3D,EAAA,EAAD,WACE,cAAC,KAAD,CAAM6iD,SAAS,OAAf,SAAuBuV,IACtB1jD,GACC,cAAC,KAAD,CAAMoG,QAAS68C,EAAO9U,SAAS,OAAO7iC,MAAO,CAAEy4C,QAAS,SAAUC,OAAQ,WAA1E,UACIV,GAAiBxiD,GAAY2iD,EAC3Bx4D,EAAE,oBAAqB,CAAE6E,OAAM,iBAAE2zD,QAAF,IAAEA,OAAF,EAAEA,EAAyB1yB,cAAc,UAAzC,QAA+C,KAC9E,YAMd,eAACsxB,EAAD,CAAU/2C,MAAOs3C,EAAY,CAAEh3D,QAAS,IAAKE,aAAc,OAAU,GAAIw2D,SAAUe,EAAnF,WACIT,GACA,qCACE,cAAC,EAAD,CACEqB,UAAU,qBACVj5D,MAAOA,EACPmxC,YAAa,SAAC+nB,GACZ/nB,EAAY+nB,MAGflkD,GAAWc,GAAYoiD,GAA2B,OAAVC,GACvC,cAAC,IAAD,CAAQ/8C,QAAS68C,EAAOnK,MAAM,KAAKhK,QAAQ,OAA3C,oBAMN,cAACyT,EAAD,CACED,WAAYxhD,EACZmjD,UAAU,8BACV79C,QAAS,WACFi9C,GACHS,KALN,SASE,eAAC,IAAD,CAAM1J,WAAW,SAAS7K,eAAe,gBAAzC,UACGn+B,EACC,cAAC,IAAD,CAAoBlG,UAAWkG,EAAKC,OAAQlG,UAAWiG,EAAKE,OAAQlG,KAAM,GAAIJ,QAAM,IAClFlK,EACF,cAAC,IAAD,CAAcA,SAAUA,EAAUsK,KAAK,OAAOE,MAAO,CAAEC,YAAa,SAClE,KACH6F,EACC,eAAC,KAAD,CAAMvN,GAAG,OAAT,iBACGuN,QADH,IACGA,OADH,EACGA,EAAMC,OAAO3e,OADhB,WACyB0e,QADzB,IACyBA,OADzB,EACyBA,EAAME,OAAO5e,UAGtC,cAAC,KAAD,CAAMmR,GAAG,OAAT,UACI/C,GAAYA,EAASpO,QAAUoO,EAASpO,OAAOqb,OAAS,GAAxD,UACKjN,EAASpO,OAAOyzB,MAAM,EAAG,GAD9B,cACsCrlB,EAASpO,OAAOyzB,MAClDrlB,EAASpO,OAAOqb,OAAS,EACzBjN,EAASpO,OAAOqb,SAHpB,OAKEjN,QALF,IAKEA,OALF,EAKEA,EAAUpO,SAAWzH,EAAE,wBAG7Bo4D,GAAyB,cAAC,IAAD,mB,8BCxJzC,uFAIO,SAAS/1C,EAAa7gB,EAAiBkyC,GAC5C,GAAsB,IAAlBA,EAAO5wB,OAAc,OAAOthB,EAEhC,IAAM03D,EAAmB1lD,YAAUkgC,GAEnC,GAAIwlB,EACF,OAAO13D,EAAO0lB,QAAO,SAAC5F,GAAD,OAAWA,EAAMlgB,UAAY83D,KAGpD,IAAMC,EAAmBzlB,EACtBz0B,cACAtY,MAAM,OACNugB,QAAO,SAAC4O,GAAD,OAAOA,EAAEhT,OAAS,KAE5B,GAAgC,IAA5Bq2C,EAAiBr2C,OACnB,OAAOthB,EAGT,IAAM43D,EAAgB,SAACtjC,GACrB,IAAMujC,EAASvjC,EACZ7W,cACAtY,MAAM,OACNugB,QAAO,SAACoyC,GAAD,OAAQA,EAAGx2C,OAAS,KAE9B,OAAOq2C,EAAiBvwC,OAAM,SAACzB,GAAD,OAAoB,IAAbA,EAAErE,QAAgBu2C,EAAOhrB,MAAK,SAACkrB,GAAD,OAAQA,EAAGC,WAAWryC,IAAMoyC,EAAGE,SAAStyC,UAG7G,OAAO3lB,EAAO0lB,QAAO,SAAC5F,GACpB,IAAQ7Z,EAAiB6Z,EAAjB7Z,OAAQ0X,EAASmC,EAATnC,KAChB,OAAQ1X,GAAU2xD,EAAc3xD,IAAa0X,GAAQi6C,EAAcj6C,MAIhE,SAASu6C,EAAuBl4D,EAA6B4gB,GAClE,OAAO3K,mBAAQ,WACb,IAAKjW,EACH,MAAO,GAGT,IAAMm4D,EAAcv3C,EACjBnD,cACAtY,MAAM,OACNugB,QAAO,SAAC4O,GAAD,OAAOA,EAAEhT,OAAS,KAE5B,GAAI62C,EAAY72C,OAAS,EACvB,OAAOthB,EAGT,IAAMo4D,EAAwB,GACxBC,EAA2B,GAC3BlH,EAAgB,GAatB,OAVAnxD,EAAOud,KAAI,SAACuC,GAAW,IAAD,IACpB,OAAI,UAAAA,EAAM7Z,cAAN,eAAcwX,iBAAkB06C,EAAY,GACvCC,EAAaxkC,KAAK9T,IAE3B,UAAIA,EAAM7Z,cAAV,aAAI,EAAcwX,cAAcu6C,WAAWp3C,EAAYnD,cAAc66C,SAC5DD,EAAgBzkC,KAAK9T,GAEvBqxC,EAAKv9B,KAAK9T,MAGb,GAAN,OAAWs4C,EAAiBC,EAAoBlH,KAC/C,CAACnxD,EAAQ4gB,M,8BClEd,kCASA,IAAM23C,EAAwB,CAC5B,CACEnhD,GAAI,YACJlF,KAAM,MACN+wC,MAAO,SACPuV,MAAO,gBAET,CACEphD,GAAI,YACJlF,KAAM,MACN+wC,MAAO,WACPuV,MAAO,oBAET,CACEphD,GAAI,YACJlF,KAAM,MACN+wC,MAAO,mBACPuV,MAAO,eAET,CACEphD,GAAI,YACJlF,KAAM,MACN+wC,MAAO,OACPuV,MAAO,gBAET,CACEphD,GAAI,YACJlF,KAAM,MACN+wC,MAAO,aACPuV,MAAO,iBAET,CACEphD,GAAI,YACJlF,KAAM,MACN+wC,MAAO,QACPuV,MAAO,eAET,CACEphD,GAAI,YACJlF,KAAM,MACN+wC,MAAO,UACPuV,MAAO,iBAET,CACEphD,GAAI,YACJlF,KAAM,MACN+wC,MAAO,SACPuV,MAAO,kBAET,CACEphD,GAAI,YACJlF,KAAM,MACN+wC,MAAO,QACPuV,MAAO,eAET,CACEphD,GAAI,YACJlF,KAAM,MACN+wC,MAAO,QACPuV,MAAO,iBAET,CACEphD,GAAI,YACJlF,KAAM,MACN+wC,MAAO,QACPuV,MAAO,eAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,wBACPuV,MAAO,4BAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,uBACPuV,MAAO,2BAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,uBACPuV,MAAO,2BAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,uBACPuV,MAAO,2BAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,2BACPuV,MAAO,+BAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,0BACPuV,MAAO,8BAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,yBACPuV,MAAO,6BAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,yBACPuV,MAAO,6BAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,yBACPuV,MAAO,6BAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,6BACPuV,MAAO,iCAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,0BACPuV,MAAO,8BAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,yBACPuV,MAAO,6BAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,yBACPuV,MAAO,6BAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,yBACPuV,MAAO,6BAET,CACEphD,GAAI,YACJlF,KAAM,aACN+wC,MAAO,6BACPuV,MAAO,iCAET,CACEphD,GAAI,YACJlF,KAAM,gBACN+wC,MAAO,eACPjE,YAAa,oDACbwZ,MAAO,oBAET,CACEphD,GAAI,YACJlF,KAAM,gBACN+wC,MAAO,cACPjE,YAAa,mDACbwZ,MAAO,oBAQEC,EAAc,IAAIx8D,IAE/Bs8D,EAAUv6D,SAAQ,SAAC06D,GACjBD,EAAYv8D,IAAIw8D,EAASthD,GAAIshD,O,mDC7LzBC,E,KAAO75D,EAAO85D,KAAV,oUAqBKD,O,+4WC8BAxiC,IAnDO,I,+BCDtB,2BAce0iC,IARf,SAAwB/4C,GAAyC,IAAD,IACxDqJ,EAAW7Q,YAAgB,OAACwH,QAAD,IAACA,OAAD,EAACA,EAAOlgB,SAAS,GAE5Ck5D,EAAsB,UAAGh3C,YAAoBqH,EAAU,sBAAjC,iBAAG,EAA8C9K,cAAjD,aAAG,EAAuD,GAEtF,OAAOyB,GAASg5C,EAAc,IAAInyC,IAAY7G,EAAOg5C,EAAYz6D,iBAAc/B,I,+BCZjF,sEAOe,SAASojB,IACtB,IAAQ1d,EAAYF,cAAZE,QACF+2D,EAAsBp2C,aAAkD,qBAAGC,KAAQ5iB,UAEzF,OAAOiW,mBAAQ,WAAO,IAAD,EACnB,OAAKjU,EACElE,OAAOgjB,OAAP,iBAAci4C,QAAd,IAAcA,OAAd,EAAcA,EAAsB/2D,UAApC,QAA2D,IAAIub,IAAI0I,KADrD,KAEpB,CAAC8yC,EAAqB/2D,M,+ugBCLrB44C,EAAkB9jC,cAEXqkC,EAAO,uCAAG,WAAOZ,GAAP,yBAAAp/C,EAAA,+EAE2Dy/C,EAAgBoe,eAAeze,GAF1F,uBAER0e,EAFQ,EAEX,GAAgBC,EAFL,EAEE,GAAmB5e,EAFrB,EAEkB,GAAoB6e,EAFtC,EAEmC,GAChDC,EAAiBzY,IAAUhmC,MAAK,SAAC0+C,GAAD,OAAgBA,EAAWjiD,KAAOmjC,KAHrD,kBAKZ+e,IAAM,GAAIF,EAAgB,CAC/BD,aACAx7C,KAAMs7C,EACNM,MAAOL,EAAYr1D,WACnB82C,OAAQL,EAAaz2C,cATJ,2DAYZ,MAZY,0DAAH,sDAmBPs9C,EAAQ,uCAAG,sCAAAhmD,EAAA,sEAEdq+D,EAAY7Y,IAAU/gC,QAAO,SAAC0c,EAAO8e,GACzC,OAAO,2BACF9e,GADL,kBAEG8e,EAAKhkC,GAAKgkC,MAEZ,IAPiB,SAQER,EAAgB6e,cARlB,OAWpB,IAHMC,EARc,OAUdz8C,EAAQ,GACLe,EAAI,EAAGA,GAAK07C,EAAS17C,IAC5Bf,EAAM2W,KAAK,CACTh0B,QAASY,cACTmd,KAAM,iBACNC,OAAQ,CAACI,KAfO,gBAkBGE,YAAY1C,EAAYyB,GAlB3B,cAkBd08C,EAlBc,OAoBdC,EAAkBD,EAAS/5C,QAAO,SAAC0c,EAAO8e,EAAMtgB,GACpD,IAAWm+B,EAA6D7d,EAAhE,GAAgB8d,EAAgD9d,EAAnD,GAAmBd,EAAgCc,EAAnC,GAAoB+d,EAAe/d,EAAlB,GAEtD,OAAO,2BACF9e,GADL,kBAEGxB,EAAQ,EAAI,CACXnd,KAAMs7C,EACNM,MAAOL,EAAYr1D,WACnB82C,OAAQL,EAAaz2C,WACrBs1D,kBAGH,IAhCiB,kBAkCbG,IAAM,GAAIE,EAAWI,IAlCR,2DAoCb,MApCa,0DAAH,sD,gCC9BrB,gHAOaC,EAAkB,WAC7B,IAAQtmD,EAAYzR,cAAZyR,QACFiP,EAAW+U,cAEjBz6B,qBAAU,WACR0lB,EAAS85B,YAAa/oC,MACrB,CAACA,EAASiP,KAGF3L,EAAa,WACxB,MAAwE8L,aAAY,SAAC/lB,GAAD,OAAkBA,EAAMq5B,WAApG6lB,EAAR,EAAQA,cAAehd,EAAvB,EAAuBA,UAAWtjC,EAAlC,EAAkCA,KAAMy/C,EAAxC,EAAwCA,cACxC,MAAO,CAAEhlB,QAASz6B,EAAMs+D,WAAYhe,GAAiBb,EAAea,gBAAehd,e,oFCTtEs3B,IANuB,SAAC,GAAD,IAAG55D,EAAH,EAAGA,SAAaod,EAAhB,wBACpC,cAAC,IAAD,yBAAKmgD,GAAI,CAAC,OAAQ,QAAS1oD,GAAG,OAAOm8C,SAAS,UAAa5zC,GAA3D,aACGpd,O,iGCFQw9D,EAAyB,CACpC/W,MAAO,cACPjE,YACE,2GACFmB,MAAO,+C,uCCEH8Z,EAAan7D,YAAOs3D,IAAPt3D,CAAH,oPAKZ,qBAAGkvC,MAAkBksB,aAAaxe,MAKlC,qBAAG1N,MAAkBksB,aAAajb,MAMhCkb,EAAW,WACf,IAAQ37D,EAAMC,cAAND,EACA47D,EAAajoB,cAAbioB,SACFC,EAAe3uB,cACf4uB,EAAsBD,EAAa1rC,GAAG,GAAhB,WACpB0rC,EAAax2D,WAAWW,oBAAelI,EAAW,CACpDgI,sBAAuB,EACvBC,sBAAuB,KAEzB,GAEEg2D,ED1BqB,SAACrqB,EAAc1xC,GAC1C,OAAQ0xC,GACN,IAAK,IACH,MAAO,CACL+S,MAAM,GAAD,OAAKzkD,EAAE,QAAP,cAAoBA,EAAE,iBAE/B,IAAK,eACH,MAAO,CACLykD,MAAM,GAAD,OAAKzkD,EAAE,kBAAP,cAA8BA,EAAE,iBAEzC,IAAK,cACH,MAAO,CACLykD,MAAM,GAAD,OAAKzkD,EAAE,cAAP,cAA0BA,EAAE,iBAErC,IAAK,SACH,MAAO,CACLykD,MAAM,GAAD,OAAKzkD,EAAE,SAAP,cAAqBA,EAAE,iBAEhC,IAAK,SACH,MAAO,CACLykD,MAAM,GAAD,OAAKzkD,EAAE,SAAP,cAAqBA,EAAE,iBAEhC,IAAK,WACH,MAAO,CACLykD,MAAM,GAAD,OAAKzkD,EAAE,WAAP,cAAuBA,EAAE,iBAElC,IAAK,gBACH,MAAO,CACLykD,MAAM,GAAD,OAAKzkD,EAAE,gBAAP,cAA4BA,EAAE,iBAEvC,IAAK,OACH,MAAO,CACLykD,MAAM,GAAD,OAAKzkD,EAAE,yBAAP,cAAqCA,EAAE,iBAEhD,IAAK,SACH,MAAO,CACLykD,MAAM,GAAD,OAAKzkD,EAAE,eAAP,cAA2BA,EAAE,iBAEtC,IAAK,iBACH,MAAO,CACLykD,MAAM,GAAD,OAAKzkD,EAAE,eAAP,cAA2BA,EAAE,iBAEtC,IAAK,WACH,MAAO,CACLykD,MAAM,GAAD,OAAKzkD,EAAE,gBAAP,cAA4BA,EAAE,iBAEvC,QACE,OAAO,MCrBMg8D,CAAcJ,EAAU57D,IAAM,GAC/C,6BAA2Cw7D,GAAiBO,GAApDtX,EAAR,EAAQA,MAAOjE,EAAf,EAAeA,YAAamB,EAA5B,EAA4BA,MACtBsa,EAAYH,EAAsB,CAACrX,EAAOqX,GAAqBI,KAAK,OAASzX,EAEnF,OACE,eAAC,IAAD,WACE,gCAAQwX,IACR,sBAAME,SAAS,WAAWvX,QAASH,IACnC,sBAAM0X,SAAS,iBAAiBvX,QAASpE,IACzC,sBAAM2b,SAAS,WAAWvX,QAASjD,QAc1Bya,IAT8C,SAAC,GAA4B,IAA1Bp+D,EAAyB,EAAzBA,SAAaod,EAAY,iBACvF,OACE,qCACE,cAAC,EAAD,IACA,cAACqgD,EAAD,2BAAgBrgD,GAAhB,aAAwBpd,U,wJC7CjBq+D,EAA8B,SAACrgB,GAC1C,IAAMsgB,EAAYh9D,OAAOgjB,OAAO69B,KAAYhkC,MAAK,SAACogD,GAEhD,OADgBp7D,YAAWo7D,EAAen7D,WACvB46C,KAGrB,OAAOsgB,EAAYA,EAAUjc,cAAgB,MAMlCmc,EAAc,SAACC,GAC1B,OAAIA,EAASjD,WAAW,WAChB,GAAN,OAAUtZ,IAAV,iBAA+Buc,EAASvhC,MAAM,IAGzCuhC,GAGIC,EAAmB,SAAChpD,GAC/B,OAAOvS,YAAWg/C,IAAWzsC,GAAMtS,UAGxBu7D,EAAe,uCAAG,WAAO3gB,EAAoBC,GAA3B,qBAAAt/C,EAAA,sEAErBguB,EAAW3S,YAAkBgkC,GAFR,SAGJrxB,EAASiyC,SAAS3gB,GAHd,cAGrBwgB,EAHqB,gBAIG7/D,MAAM4/D,EAAYC,IAJrB,WAIrBI,EAJqB,QAMNvgB,GANM,0CAOlB,MAPkB,yBAULugB,EAAgB9/D,OAVX,eAUrB+/D,EAVqB,yBAWpBA,GAXoB,yCAa3BjjD,QAAQD,MAAM,kBAAd,MAb2B,kBAcpB,MAdoB,0DAAH,wDAkBfijC,EAAe,uCAAG,WAAOb,EAAoBC,GAA3B,iBAAAt/C,EAAA,sEACPggE,EAAgB3gB,EAAYC,GADrB,UACvB6gB,EADuB,OAEvBzc,EAAgBgc,EAA4BrgB,GAI7C8gB,EANwB,yCAOpB,MAPoB,UAUxBzc,EAVwB,yCAWpB,MAXoB,UAcxByc,EAAQzc,GAdgB,0CAepB,MAfoB,iCAkBtBE,IAAKpkC,MAAK,SAAC2gC,GAChB,OAAOggB,EAAQzc,GAAev+B,SAASg7B,EAAI8D,gBAnBhB,4CAAH,yD,0MCnCtBmc,EAAuB,SAACz7C,GAC5B,IAAMlgB,EAAUD,YAA4B,QAAjBmgB,EAAM7Z,OAAmBjG,IAAOM,KAAKV,QAAUkgB,EAAMlgB,SAChF,MAAM,kBAAN,OAAyBA,EAAzB,SAGW47D,EAAgD,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,eAAmB9hD,EAAY,iBAC3G,OACE,cAAC,KAAD,aACE+hD,WAAYJ,EAAqBE,GACjCG,aAAcL,EAAqBG,IAC/B9hD,KASGiiD,EAAwC,SAAC,GAAyB,IAAvB/7C,EAAsB,EAAtBA,MAAUlG,EAAY,iBAC5E,OAAO,cAAC,KAAD,aAAiBkiD,IAAKP,EAAqBz7C,IAAYlG,M,6BCpChE,WAiBemiD,IAVU,SAACx9D,GACxB,IAAMskC,EAAM1gC,mBAMZ,OAJArF,qBAAU,WACR+lC,EAAItgC,QAAUhE,IACb,CAACA,IAEGskC,EAAItgC,U,4FCVP+b,EAAUxf,IAAOU,IAAV,yOAQT,qBAAGwuC,MAAkBksB,aAAahb,MAMhC8c,EAAgBl9D,YAAOmwD,IAAPnwD,CAAH,qOAEP,qBAAGkvC,MAAkBG,OAAO4mB,cA4DzBkH,EA7CA,WACb,OACE,cAAC39C,EAAD,UAiBE,cAAC,IAAD,CACE49C,SAAU,EACVvO,WAAW,SACX3uD,MAAO,CAAC,OAAQ,OAAQ,OAAQ,QAChC8jD,eAAgB,CAAC,SAAU,SAAU,SAAU,YAJjD,SAME,cAACkZ,EAAD,UACE,cAAC,IAAD,CACE5kD,GAAG,oBACHm4C,GAAG,IACHrN,UAAQ,EACRC,KAAK,+BACLE,QAAQ,SALV,gC,gBCxDJ8Z,EAAYr9D,IAAOs9D,IAAV,oDAiCAC,EAhBH,WACV,IAdsBjC,EAchBkC,EAAWnqB,cACjB,OACE,cAACgqB,EAAD,UACE,eAAC,IAAD,CAAYI,aAjBMnC,EAiBsBkC,EAASlC,SAfnDA,EAAS95C,SAAS,UAClB85C,EAAS95C,SAAS,YAClB85C,EAAS95C,SAAS,SAClB85C,EAAS95C,SAAS,YAClB85C,EAAS95C,SAAS,SAEX,EAEF,GAOyD+rC,MAAM,KAAKhK,QAAQ,SAA/E,UACE,cAAC,IAAD,CAAgBjrC,GAAG,gBAAgBs5B,GAAG,QAAQ6e,GAAIC,IAAlD,kBAGA,cAAC,IAAD,CAAgBp4C,GAAG,gBAAgBs5B,GAAG,QAAQ6e,GAAIC,IAAlD,6B,eCxBFyK,EAAan7D,IAAOU,IAAV,qYAQA,qBAAGwuC,MAAkBG,OAAOquB,UAAUC,aAElD,qBAAGzuB,MAAkBksB,aAAawC,MAIlC,qBAAG1uB,MAAkBksB,aAAaxe,MAKlC,qBAAG1N,MAAkBksB,aAAajb,MAiBvB2b,IAX8C,SAAC,GAA4B,IAA1Bp+D,EAAyB,EAAzBA,SAAaod,EAAY,iBACvF,OACE,eAACqgD,EAAD,2BAAgBrgD,GAAhB,cACE,cAAC+iD,EAAD,IACCngE,EACD,cAAC,IAAD,CAAM0/D,SAAU,IAChB,cAAC,EAAD,U,2CCrCN,qBAIMU,EAAwB,CAC5B32D,OAAQ0vB,IAAM,GAAGkV,SACjBjrC,QAAS+1B,IAAM,GAAGkgB,YAClBvyC,SAAU,IAGNu5D,EAAc,CAClB,CACEzlD,GAAI,SACJxX,QAAS,6CACT86C,UAAU,EACV/8B,KAAM,gBACNm/C,UAAW,CACTC,WAAY,eACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,eACZC,YAAa,aACbC,WAAY,aACZC,kBAAmB,IAErB7oD,SAAUuoD,EACV98C,MAAO9f,IAAOwQ,KACd4sD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,0FACZC,mBAAoB,EACpB9pC,QAAS,GAEX,CACErc,GAAI,WACJxX,QAAS,6CACT86C,UAAU,EACV/8B,KAAM,uBACNm/C,UAAW,CACTC,WAAY,sBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,sBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,IAErB7oD,SAAUuoD,EACV98C,MAAO9f,IAAO+P,SACdqtD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,iGACZC,mBAAoB,IACpB9pC,QAAS,GAEX,CACErc,GAAI,UACJxX,QAAS,6CACT86C,UAAU,EACV/8B,KAAM,yBACNm/C,UAAW,CACTC,WAAY,gBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,IAErB7oD,SAAUuoD,EACV98C,MAAO9f,IAAOwO,IACd4uD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,mGACZC,mBAAoB,IACpB9pC,QAAS,GAEX,CACErc,GAAI,OACJxX,QAAS,6CACT86C,UAAU,EACV/8B,KAAM,cACNw/C,cAAe,CACbJ,WAAY,eACZC,YAAa,aACbC,WAAY,aACZC,kBAAmB,GAErB7oD,SAAUuoD,EACV98C,MAAO9f,IAAOuH,KACd61D,mBAAoB,QACpBC,WAAY,YACZC,WAAY,2FACZC,mBAAoB,KACpB9pC,QAAS,GAEX,CACErc,GAAI,QACJxX,QAAS,6CACT86C,UAAU,EACV/8B,KAAM,qBACNw/C,cAAe,CACbJ,WAAY,kBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErB7oD,SAAUuoD,EACV98C,MAAO9f,IAAO6H,MACdu1D,mBAAoB,QACpBC,WAAY,YACZC,WAAY,+FACZC,mBAAoB,KACpB9pC,QAAS,GAEX,CACErc,GAAI,QACJxX,QAAS,6CACT86C,UAAU,EACV/8B,KAAM,cACNw/C,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErB7oD,SAAUuoD,EACV98C,MAAO9f,IAAOqI,IACd+0D,mBAAoB,QACpBC,WAAY,YACZC,WAAY,wFACZC,mBAAoB,KACpB9pC,QAAS,GAEX,CACErc,GAAI,UACJxX,QAAS,6CACT86C,UAAU,EACV/8B,KAAM,kBACNw/C,cAAe,CACbJ,WAAY,kBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErB7oD,SAAUuoD,EACV98C,MAAO9f,IAAOgJ,MACdo0D,mBAAoB,QACpBC,WAAY,YACZC,WAAY,2FACZC,mBAAoB,KACpB9pC,QAAS,GAEX,CACErc,GAAI,SACJxX,QAAS,6CACT86C,UAAU,EACV/8B,KAAM,yBACNw/C,cAAe,CACbJ,WAAY,oBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErB7oD,SAAUuoD,EACV98C,MAAO9f,IAAOkJ,OACdk0D,mBAAoB,QACpBC,WAAY,YACZC,WAAY,sGACZC,mBAAoB,KACpB9pC,QAAS,GAEX,CACErc,GAAI,QACJxX,QAAS,6CACT86C,UAAU,EACV/8B,KAAM,cACNw/C,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErB7oD,SAAUuoD,EACV98C,MAAO9f,IAAOqJ,IACd+zD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,wFACZC,mBAAoB,KACpB9pC,QAAS,GAEX,CACErc,GAAI,QACJxX,QAAS,6CACT86C,UAAU,EACV/8B,KAAM,gBACNw/C,cAAe,CACbJ,WAAY,gBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErB7oD,SAAUuoD,EACV98C,MAAO9f,IAAO2J,MACdyzD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,gGACZC,mBAAoB,KACpB9pC,QAAS,GAEX,CACErc,GAAI,QACJxX,QAAS,6CACT86C,UAAU,EACV/8B,KAAM,cACNw/C,cAAe,CACbJ,WAAY,oBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErB7oD,SAAUuoD,EACV98C,MAAO9f,IAAO+J,MACdqzD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,oFACZC,mBAAoB,KACpB9pC,QAAS,IAIEopC,O,khZC5NTW,EAAO1+D,IAAOU,IAAV,yJAOJi+D,EAAW3+D,IAAOU,IAAV,0BAERk+D,EAAiB5+D,IAAOU,IAAV,iDAIdm+D,EAAa7+D,IAAO8+D,GAAV,wQAiBH,qBAAG5vB,MAAkBG,OAAO4mB,cA6M1B8I,IAzM+C,SAAC,GAYxD,IAXL9b,EAWI,EAXJA,UACA7zB,EAUI,EAVJA,WACAX,EASI,EATJA,IACAuwC,EAQI,EARJA,WACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,SAMI,IALJC,0BAKI,MALiB,MAKjB,MAJJtwC,wBAII,MAJe,EAIf,MAHJC,yBAGI,MAHgB,EAGhB,MAFJR,sBAEI,MAFa,EAEb,MADJ8wC,cACI,SACI1/D,EAAMC,cAAND,EACFqvB,EAAiC,IAAOK,EAExCiwC,EAA2BpwC,YAAyC,CACxEC,aAAc,EACdC,QAASV,EACTW,aACAP,mBACAC,oBACAR,mBAEIgxC,EAA2BrwC,YAAyC,CACxEC,aAAc,EACdC,QAASV,EACTW,aACAP,mBACAC,oBACAR,mBAEIixC,EAA4BtwC,YAAyC,CACzEC,aAAc,GACdC,QAASV,EACTW,aACAP,mBACAC,oBACAR,mBAEIU,EAA6BC,YAAyC,CAC1EC,aAAc,IACdC,QAASV,EACTW,aACAP,mBACAC,oBACAR,mBAGF,OACE,eAAC,KAAD,CAAO61B,MAAOzkD,EAAE,OAAQujD,UAAWA,EAAnC,UACGmc,GACC,eAAC,IAAD,WACE,eAAC,IAAD,CAAM9R,GAAG,MAAMtJ,eAAe,gBAA9B,UACE,cAAC,KAAD,CAAMlB,OAAK,EAACroC,MAAM,aAAlB,SACG/a,EAAE,4BAEL,eAAC,KAAD,CAAMojD,OAAK,EAAX,UAAakc,EAAb,UAEF,eAAC,IAAD,CAAM1R,GAAG,OAAOtJ,eAAe,gBAA/B,UACE,cAAC,KAAD,CAAMlB,OAAK,EAACroC,MAAM,aAAlB,SACG/a,EAAE,2BAEL,eAAC,KAAD,CAAMojD,OAAK,EAAX,UAAar0B,EAAIvpB,QAAQ2pB,GAAzB,aAIN,eAAC6vC,EAAD,WACE,cAACE,EAAD,UACE,cAAC,KAAD,CAAMhc,SAAS,OAAOC,MAAI,EAACpoC,MAAM,aAAa+kD,cAAc,YAAYlS,GAAG,OAA3E,SACG5tD,EAAE,iBAGP,cAACk/D,EAAD,UACE,cAAC,KAAD,CACE7b,UAAU,QACVH,SAAS,OACTC,MAAI,EACJpoC,MAAM,aACN+kD,cAAc,YACd/V,GAAG,OACH/F,GAAG,OACH4J,GAAG,OARL,SAUG5tD,EAAE,WAGP,cAACk/D,EAAD,UACE,cAAC,KAAD,CAAM7b,UAAU,QAAQH,SAAS,OAAOC,MAAI,EAACpoC,MAAM,aAAa+kD,cAAc,YAAYlS,GAAG,OAA7F,SACG5tD,EAAE,sBAAuB,CAAEyH,OAAQg4D,QAIxC,cAACR,EAAD,UACE,cAAC,KAAD,UAAOj/D,EAAE,SAAU,CAAEoU,IAAK,QAE5B,cAAC6qD,EAAD,UACE,eAAC,KAAD,CAAM5b,UAAU,QAAQ0G,GAAG,OAAO/F,GAAG,OAArC,UACGr0B,YAAO,CAAEC,aAAc+vC,EAA0B9vC,eAAgBR,IAAkC7pB,QAClG2pB,GAFJ,SAOF,cAAC8vC,EAAD,UACE,cAAC,KAAD,CAAM5b,UAAU,QAAhB,SAAyBsc,MAG3B,cAACV,EAAD,UACE,cAAC,KAAD,UAAOj/D,EAAE,SAAU,CAAEoU,IAAK,QAE5B,cAAC6qD,EAAD,UACE,eAAC,KAAD,CAAM5b,UAAU,QAAQ0G,GAAG,OAAO/F,GAAG,OAArC,UACGr0B,YAAO,CAAEC,aAAcgwC,EAA0B/vC,eAAgBR,IAAkC7pB,QAClG2pB,GAFJ,SAOF,cAAC8vC,EAAD,UACE,cAAC,KAAD,CAAM5b,UAAU,QAAhB,SAAyBuc,MAG3B,cAACX,EAAD,UACE,cAAC,KAAD,UAAOj/D,EAAE,SAAU,CAAEoU,IAAK,SAE5B,cAAC6qD,EAAD,UACE,eAAC,KAAD,CAAM5b,UAAU,QAAQ0G,GAAG,OAAO/F,GAAG,OAArC,UACGr0B,YAAO,CACNC,aAAciwC,EACdhwC,eAAgBR,IACf7pB,QAAQ2pB,GAJb,SAQF,cAAC8vC,EAAD,UACE,cAAC,KAAD,CAAM5b,UAAU,QAAhB,SAAyBwc,MAG3B,cAACZ,EAAD,CAAU5+C,MAAO,CAAE2uC,SAAU,SAA7B,SACE,cAAC,KAAD,UAAOhvD,EAAE,kBAEX,cAACi/D,EAAD,UACE,eAAC,KAAD,CAAM5b,UAAU,QAAQ0G,GAAG,OAAO/F,GAAG,OAArC,UACGr0B,YAAO,CACNC,aAAcN,EACdO,eAAgBR,IACf7pB,QAAQ2pB,GAJb,SAQF,cAAC8vC,EAAD,UACE,cAAC,KAAD,CAAM5b,UAAU,QAAhB,SAAyB/zB,SAG7B,cAAC,IAAD,CAAMg1B,eAAe,SAArB,SACE,cAAC,IAAD,CAAKsJ,GAAG,OAAOoB,SAAS,QAAQ7nC,EAAE,MAAlC,SACE,eAACg4C,EAAD,WACE,6BACE,cAAC,KAAD,CAAMjc,SAAS,OAAOG,UAAU,SAAStoC,MAAM,aAAa+9C,QAAQ,SAApE,SACG94D,EAAE,0CAGP,6BACE,cAAC,KAAD,CAAMkjD,SAAS,OAAOG,UAAU,SAAStoC,MAAM,aAAa+9C,QAAQ,SAApE,SACG94D,EAAE,6BAA8B,CAAE+/D,KAAM3wC,EAAkBppB,uBAG9D05D,GACC,6BACE,cAAC,KAAD,CAAMxc,SAAS,OAAOG,UAAU,SAAStoC,MAAM,aAAa+9C,QAAQ,SAApE,SACG94D,EAAE,0FAIT,6BACE,cAAC,KAAD,CAAMkjD,SAAS,OAAOG,UAAU,SAAStoC,MAAM,aAAa+9C,QAAQ,SAApE,SACG94D,EACC,mHAIL4uB,EAAiB,GAChB,6BACE,cAAC,KAAD,CAAMk1B,GAAG,OAAOZ,SAAS,OAAOG,UAAU,SAAStoC,MAAM,aAAa+9C,QAAQ,SAA9E,SACG94D,EAAE,gFAA4E,CAC7EggE,IAAKpxC,eAQnB,cAAC,IAAD,CAAM01B,eAAe,SAArB,SACE,cAAC,KAAD,CAAcX,KAAM6b,EAApB,SAA+BD,W,oGClPxB,SAASU,IACtB,IAAMtR,EAAMxqC,aAA8B,SAAC/lB,GAAD,OAAWA,EAAMgmB,KAAKqB,gBAC1Dy6C,ECJO,WAA4D,IAAD,IAClE1hD,EAAY5D,cAClB,iBAAO0I,YAAoB9E,EAAW,mCAAtC,iBAAO,EAA4DqB,cAAnE,aAAO,EAAqE,GDErDsgD,GACvB,OAAO1oD,mBAAQ,WACb,GAAIyoD,GAAkBvR,EAAK,OAAOuR,EAAehsD,IAAIy6C,KAEpD,CAACuR,EAAgBvR,M,kCEbtB,8CAEan9B,EAAoBzuB,YAAuD,kC,mqNCFxF,gEAIA,IAAMorC,EAAkB,IAAItvB,IAAU7E,GAEN,IAAI6E,IAAUrE,GAE/B2zB,O,suFCRf,0EAeA,IAAMiyB,EAAgB,IAAIC,YAMX,SAASzM,EAAiBe,GACvC,IAAM2L,EAlBR,SAAyBC,GAGvB,IADAA,EAAMA,EAAI/G,WAAW,MAAQ+G,EAAIxe,OAAO,GAAKwe,GACrCz9C,OAAS,IAAM,EAAG,MAAM,IAAI1iB,MAAM,8CAE1C,IADA,IAAMogE,EAAM,IAAIC,WAAWF,EAAIz9C,OAAS,GAC/BtD,EAAI,EAAGA,EAAIghD,EAAI19C,OAAQtD,IAC9BghD,EAAIhhD,GAAKg3B,SAAS+pB,EAAIxe,OAAW,EAAJviC,EAAO,GAAI,IAE1C,OAAOghD,EAUME,CAAgB/L,GACvBgM,EAAQC,mBAASN,GACvB,OAAQK,GACN,IAAK,UACH,IAAM3jE,EAAO6jE,mBAASP,GAChBQ,EAAM,IAAIC,IAAI/jE,GACpB,MAAM,UAAN,OAAiBgkE,sBAAYF,EAAIG,YAEnC,IAAK,UACH,IAAMjkE,EAAO6jE,mBAASP,GAChBQ,EAAM,IAAIC,IAAI/jE,GACdikE,EAAYC,iBAAOJ,EAAIG,WAC7B,MAAuB,aAAnBA,EAAU9hD,KACN,UAAN,OAAiBihD,EAAcc,OAAOD,EAAUE,QAAQrH,QAEpD,UAAN,OAAiBkH,sBAAYF,EAAIG,YAEnC,QACE,MAAM,IAAI7gE,MAAJ,8BAAiCugE,O,oMC1BhCS,EAAoB,SAACxgC,GAChC,MAAO,CACLnV,UAAWmV,EAAW,IAAIx8B,IAAUw8B,EAASnV,WAAatnB,IAC1Dk+B,oBAAqBzB,EAAW,IAAIx8B,IAAUw8B,EAASyB,qBAAuBl+B,IAC9Em+B,cAAe1B,EAAW,IAAIx8B,IAAUw8B,EAAS0B,eAAiBn+B,IAClEi7B,cAAewB,EAAW,IAAIx8B,IAAUw8B,EAASxB,eAAiBj7B,MAIzDk9D,EAAgB,SAACjlD,GAC5B,IAAQ6gB,EAAiD7gB,EAAjD6gB,YAAaI,EAAoCjhB,EAApCihB,aAAcuD,EAAsBxkB,EAAtBwkB,SAAa+xB,EAAhD,YAAyDv2C,EAAzD,GAEA,OAAO,2BACFu2C,GADL,IAEE/xB,SAAUwgC,EAAkBxgC,GAC5B3D,YAAa,IAAI74B,IAAU64B,GAC3BI,aAAc,IAAIj5B,IAAUi5B,MAInB6D,EAAyB,SAAC/J,GACrC,OAAOA,EAAM/V,QAAO,SAAC6f,EAAQgL,GAC3B,IAAMq1B,EAAoBngE,YAAW8qC,EAAKgB,WAAW7rC,SAASmgE,oBACxDxnD,EAAe5Y,YAAW8qC,EAAK3qB,MAAMlgB,SAASmgE,oBASpD,OAPKtgC,EAAOqgC,KACVrgC,EAAOqgC,GAAqB,IAAIl9D,IAAU6nC,EAAKgB,WAAWV,WAAWlnC,YAElE47B,EAAOlnB,KACVknB,EAAOlnB,GAAgB,IAAI3V,IAAU6nC,EAAK3qB,MAAMirB,WAAWlnC,YAGtD47B,IACN,M,4JC1CC+gB,EAAiB0U,IAAM74D,cAAc,CAAEqkD,KAAM,EAAGD,KAAM,IAsBtDuf,EAAyB,SAAC,GAAkB,IAAhBxjE,EAAe,EAAfA,SAChC,EAAwBC,mBAAS,GAAjC,mBAAOikD,EAAP,KAAauf,EAAb,KACA,EAAwBxjE,mBAAS,GAAjC,mBAAOgkD,EAAP,KAAayf,EAAb,KACMC,EAtBsB,WAC5B,IAAMA,EAAwBh+D,kBAAO,GAcrC,OAZArF,qBAAU,WACR,IAAMsjE,EAAqB,WACzBD,EAAsB59D,SAAW89D,SAASC,QAK5C,OAFA3gB,OAAO4gB,iBAAiB,mBAAoBH,GAErC,WACLzgB,OAAO6gB,oBAAoB,mBAAoBJ,MAEhD,IAEID,EAOuBM,GAoB9B,OAlBA3jE,qBAAU,WACR,IAAMohD,EAAWC,YAAW,sBAAC,sBAAAhjD,EAAA,sDACvBglE,EAAsB59D,SACxB29D,GAAQ,SAACQ,GAAD,OAAUA,EAAO,KAFA,2CA/BX,KAoClB,OAAO,kBAAMpiB,cAAcJ,MAC1B,CAACiiB,IAEJrjE,qBAAU,WACR,IAAMohD,EAAWC,YAAW,sBAAC,sBAAAhjD,EAAA,sDACvBglE,EAAsB59D,SACxB09D,GAAQ,SAACS,GAAD,OAAUA,EAAO,KAFA,2CAvCX,KA4ClB,OAAO,kBAAMpiB,cAAcJ,MAC1B,CAACiiB,IAEG,cAAC3f,EAAeliD,SAAhB,CAAyBC,MAAO,CAAEmiD,OAAMD,QAAxC,SAAiDjkD,M,8KClCpDmkE,EAAgB7hE,IAAOU,IAAV,6NAMR,qBAAGwuC,MAAkBG,OAAO7L,QACjB,qBAAG0L,MAAkBG,OAAOyyB,oBAI5CC,EAAoC,SAAC,GAA+B,IAA7B3zB,EAA4B,EAA5BA,WAAY6U,EAAgB,EAAhBA,UAC/C//C,EAAYH,cAAZG,QACFhC,EACJgC,GAAWkrC,EACPA,EAAW3vB,KAAI,SAAClJ,GACd,OAAOmS,YAAgBnS,EAAUrS,MAEnC,GAEA4kD,EAAkDrmC,cAExD,OACE,cAAC,KAAD,CAAO0iC,MAAM,qBAAqBuK,SAAS,QAAQzL,UAAWA,EAA9D,SACE,eAAC,IAAD,CAAYtiD,IAAI,KAAhB,UACGO,EAAOud,KAAI,SAACuC,GAAW,IAAD,EACrB,OACEA,GACA8mC,GACA9oD,OAAOC,KAAK6oD,GAAmBtmC,SAASR,EAAMlgB,UAC5C,eAAC,IAAD,CAAyDH,IAAI,OAA7D,UACE,eAAC,IAAD,CAASA,IAAI,MAAMR,MAAM,SAAzB,UACE,cAAC,IAAD,CAAcoV,SAAUyL,EAAOnB,KAAK,SACpC,cAAC,KAAD,UAAOmB,EAAM7Z,YAEdjE,GACC,cAAC,KAAD,CAAMkgD,UAAQ,EAACN,OAAK,EAACroC,MAAM,cAAc4oC,KAAMlwC,YAAe6N,EAAMlgB,QAAS,UAAWoC,GAAxF,SACG8d,EAAMlgB,YAPb,UAAiBkgB,EAAMlgB,eAAvB,aAAiB,EAAeumB,OAAO,qBAc7C,cAAC,IAAD,CAAY1mB,IAAI,KAAhB,SACE,cAAC,KAAD,uLAUK,SAASqhE,EAAT,GAA8F,IAAzD5zB,EAAwD,EAAxDA,WAClD,EAAyB2gB,aAAS,cAACgT,EAAD,CAAkB3zB,WAAYA,KAAzD6zB,EAAP,oBAEA,OACE,cAACJ,EAAD,UACE,cAAC,IAAD,CAAQte,QAAQ,OAAO1oC,QAASonD,EAAhC,oD,8FCzEAC,EAA6C,GA+BpChiD,IAtBmB,SAAC,GAA4B,IAA1BI,EAAyB,EAAzBA,KAAMD,EAAmB,EAAnBA,IAAQgyC,EAAW,iBAC5D,EAAoB10D,mBAAiB,GAA5BwkE,EAAT,oBAEMnF,EAA0B18C,EAAKzE,MAAK,SAAC2Z,GAAD,OAAQ0sC,EAAS1sC,MAE3D,OAAIwnC,EAEA,+CACM3K,GADN,IAEEhyC,IAAKA,EACL28C,IAAKA,EACLoF,QAAS,WACHpF,IAAKkF,EAASlF,IAAO,GACzBmF,GAAQ,SAACjjD,GAAD,OAAOA,EAAI,SAMpB,cAAC,IAAD,eAAcmzC,M,sHC8ERgQ,IA7Ff,YAAqE,IAA9CnhE,EAA6C,EAA7CA,OAAQohE,EAAqC,EAArCA,qBACrBp/D,EAAYH,cAAZG,QAEAxD,EAAMC,cAAND,EAER,EAAkC/B,oBAAS,GAA3C,mBAAOmyD,EAAP,KAAkByS,EAAlB,KAEMC,EAAWl9C,cAGXm9C,EAAoBnhD,cAE1B,OACE,eAAC,IAAD,CAAY3gB,IAAI,KAAhB,UACE,cAAC,KAAD,CAAS4iD,QAAQ,UAAjB,SACE,eAAC,KAAD,WACG7jD,EACC,mLAEF,uBACA,uBACCA,EAAE,+EAINwB,EAAOud,KAAI,SAACuC,GAAW,IAAD,IACfoZ,EAAOl3B,IAAO,OAAIu/D,QAAJ,IAAIA,GAAJ,UAAIA,EAAoBv/D,UAAxB,iBAAI,EAA+B8d,EAAMlgB,gBAAzC,aAAI,EAA+Cs5B,MACjEt5B,EAAUkgB,EAAMlgB,QAAN,UACTkgB,EAAMlgB,QAAQ2S,UAAU,EAAG,GADlB,cAC0BuN,EAAMlgB,QAAQ2S,UAAUuN,EAAMlgB,QAAQ0hB,OAAS,IACrF,KACJ,OACE,eAAC,IAAD,CAA0BkgD,iBAAiB,cAAcrV,QAAQ,MAAjE,eACY7vD,IAAT48B,EACC,eAAC,KAAD,CACEmpB,QAAQ,UACRgG,SAAO,EACPgE,MAAM,KACN/D,UAAWpvB,EAAKha,SAAW,cAAC,IAAD,CAAUA,QAASga,EAAKha,QAASP,KAAK,SAJnE,UAMGngB,EAAE,OANL,IAMc06B,EAAKvb,QAGnB,cAAC,KAAD,CAAK0kC,QAAQ,UAAUgG,SAAO,EAACgE,MAAM,KAAK/D,UAAW,cAAC,IAAD,CAAW/uC,MAAM,YAAtE,SACG/a,EAAE,oBAGP,eAAC,IAAD,CAAMmvD,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMpF,GAAG,MAAT,SAAgBzoC,EAAMnC,OACtB,eAAC,KAAD,eAAQmC,EAAM7Z,OAAd,UAEDjE,GACC,eAAC,IAAD,CAAM8gD,eAAe,gBAAgB9jD,MAAM,OAA3C,UACE,cAAC,KAAD,CAAMupD,GAAG,MAAT,SAAgB3oD,IAChB,eAAC,KAAD,CAAMuiD,KAAMlwC,YAAe6N,EAAMlgB,QAAS,UAAWoC,GAAUkgD,UAAQ,EAAvE,cACI1jD,EAAE,mBADN,YAtBKshB,EAAMlgB,YA+BrB,eAAC,IAAD,CAAMkjD,eAAe,gBAAgB6K,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMA,WAAW,SAASh0C,QAAS,kBAAM0nD,GAAczS,IAAvD,UACE,cAAC,IAAD,CACEvC,MAAM,KACN1uC,KAAK,YACLzL,KAAK,WACLw7C,QAASkB,EACTpC,SAAU,kBAAM6U,GAAczS,MAEhC,cAAC,KAAD,CAAMpM,GAAG,MAAM3jC,MAAO,CAAE4iD,WAAY,QAApC,SACGjjE,EAAE,qBAGP,cAAC,IAAD,CACE6jD,QAAQ,SACRqf,UAAW9S,EACXj1C,QAAS,WACP3Z,EAAOud,KAAI,SAACuC,GAAD,OAAWwhD,EAASxhD,MAC3BshD,GACFA,EAAqBphE,EAAO,KAGhCw3D,UAAU,wBATZ,SAWGh5D,EAAE,oB,6BCtGb,qDAOO,SAASmjE,EAAej7C,GAC7B,GAAKA,EACL,OAAIA,EAAerS,WAAaC,IAC1BxB,IAAK8uD,YAAYl7C,EAAetT,IAAKqC,KAChCmuB,IAAeC,MAAM/wB,IAAKkwB,SAAStc,EAAetT,IAAKqC,MAEzDmuB,IAAeC,MAAM/wB,IAAKC,OAAO,IAEnC2T,I,uICTM,SAASrH,EAAiBihC,GACvC,IAAMuhB,EAAM5rD,mBAAQ,kBAAOqqC,EAAMqQ,YAAgBrQ,QAAOhkD,IAAY,CAACgkD,IAC/DwhB,ECCO,SAA2Bzd,GAA4E,IAAD,MAC7GV,EAAkB1tC,mBAAQ,WAC9B,IAAKouC,EAAS,MAAO,MAAC/nD,GACtB,IACE,OAAO+nD,EAAU,CAACT,mBAASS,IAAY,MAAC/nD,GACxC,MAAO8b,GACP,MAAO,MAAC9b,MAET,CAAC+nD,IACER,EAAoBlrC,aAAwB,GAC5CorC,EAAwBjiC,YAAoB+hC,EAAmB,WAAYF,GAC3EG,EAAe,UAAGC,EAAsB1lC,cAAzB,aAAG,EAA+B,GACjD2lC,EAAmBnrC,YACvBirC,GAAmB/F,YAAO+F,QAAmBxnD,EAAYwnD,GACzD,GAEIqP,EAAcrxC,YAAoBkiC,EAAkB,cAAeL,GAEzE,MAAO,CACLwP,YAAW,oBAAEA,EAAY90C,cAAd,aAAE,EAAqB,UAAvB,QAA6B,KACxC6D,QAAS6hC,EAAsB7hC,SAAWixC,EAAYjxC,SDrB5B6/C,CAAiB,OAACF,QAAD,IAACA,OAAD,EAACA,EAAKxd,SACnD,OAAOpuC,mBAAQ,WACb,OAAI4rD,EACKC,EAAoB3O,YAAc9S,YAAU+R,YAAiB0P,EAAoB3O,cAAgB,GAEnG7S,EAAMD,YAAUC,GAAO,KAC7B,CAACuhB,EAAKC,EAAoB3O,YAAa7S,M,oFELtC0hB,EAAiB,CACrBC,QAASC,IACTC,UAAWD,KAyBEE,IAnBS,SAACC,EAAmBC,GAC1C,iCAAqDN,GAAmBM,GAAhEC,EAAR,EAAQA,gBAAiBN,EAAzB,EAAyBA,QAASE,EAAlC,EAAkCA,UAClC,EAA0B1lE,oBAAS,WACjC,IACE,IAAM+lE,EAAc9mE,aAAaC,QAAQ4mE,GAEzC,OAAOC,EAAcP,EAAQn6C,KAAKM,MAAMo6C,IAAgBH,EACxD,MAAOjqD,GACP,OAAOiqD,MANX,mBAAO9jE,EAAP,KAAckkE,EAAd,KAcA,OAJA3lE,qBAAU,WACRpB,aAAa6B,QAAQglE,EAAiBz6C,KAAKC,UAAUo6C,EAAU5jE,OAC9D,CAACA,EAAOgkE,EAAiBJ,IAErB,CAAC5jE,EAAOkkE,K,qDCjCjB,wEAEYphE,EAFZ,S,SAEYA,K,sCAAAA,E,sBAAAA,E,wBAAAA,E,yBAAAA,M,KAOL,IAAMC,EAAYC,YAAmD,uB,wiBCM/DmhE,EAAsB,SAAChK,GAClC,OAAQA,EAASxmD,MACf,IAAK,MACH,MAAO,CACLxU,IAAK,uBACLlC,KAAM,CACJynD,MAAOyV,EAASzV,QAGtB,QACE,OAAOyV,EAASzV,QAIT0f,EAA4B,SAACjK,GACxC,OAAQA,EAASxmD,MACf,IAAK,MACH,MAAO,CACLxU,IAAK,wDACLlC,KAAM,CACJynD,MAAOyV,EAASzV,QAGtB,QACE,OAAOyV,EAAS1Z,cAOT4jB,EAAmB,uCAAG,WAAOrvD,GAAP,qBAAApY,EAAA,6DAC3B0nE,EAAeC,IAASp9C,QAAO,SAACq9C,GAAD,YAAoCzmE,IAAvBymE,EAAQ1F,cAGpD2F,EAAmBH,EAAatlD,KAAI,YAAkB,IAAf3d,EAAc,EAAdA,QAC3C,MAAO,CACLA,QAASgB,cACT+c,KAAM,mBACNC,OAAQ,CAACrK,EAAS3T,OARW,SAYJse,YAAY+kD,EAAmBD,EAAkB,CAAE7kD,gBAAgB,IAZ/D,cAY3B+kD,EAZ2B,gBAiBDhlD,YAC9B+kD,EACAC,EAActjD,QAAO,SAAC0c,EAAO6mC,EAAgBroC,GAC3C,OAAuB,OAAnBqoC,EACK7mC,GAKW,IAFpB,YAAsB6mC,EAAtB,MAGQ,GAAN,mBAAW7mC,GAAX,CAAkB,CAAE18B,QAASgB,cAA4B+c,KAAM,OAAQC,OAAQ,CAACkd,MAG3EwB,IACN,KA/B4B,cAiB3B8mC,EAjB2B,yBAmC1BA,EAAiBxjD,QAAO,SAAC0c,EAAO+mC,GACrC,IAAK5K,IAAYn7D,IAAI+lE,EAAqBhG,YACxC,OAAO/gC,EAGT,IAAMgnC,EAAe7K,IAAYz7D,IAAIqmE,EAAqBhG,YAClDz9D,EAAYijE,EAAaloD,MAAK,SAAC4oD,GAAD,OAAiBA,EAAYlG,aAAegG,EAAqBhG,cAA/Fz9D,QAER,MAAM,GAAN,mBACK08B,GADL,CAEE,CACE18B,UACAwX,GAAIisD,EAAqBhG,WACzBnrD,KAAM,MACN+wC,MAAOyf,EAAoBY,GAC3BtkB,YAAa2jB,EAA0BW,GACvC9K,MAAO8K,EAAa9K,MACpB7d,OAAQ0oB,EAAqB/oB,aAAaz2C,gBAG7C,KAvD8B,2CAAH,uD,mCC9ChC,kCAAO,IAAM2/D,EAAW,CACtBC,UAAW,CACTC,SAAG,IACHC,SAAG,MAIMC,EAAW,SAAC9O,GACvB,OAAOA,EAAM12D,QAAQ,qBAAqB,SAAC2oB,GAAD,OAAOy8C,EAASC,UAAU18C,IAAMA,O,ilICKtE88C,EAAO/wD,IAAKC,OAAO,GAElB,SAAS+wD,IACd,OAAOnhD,aAAwC,SAAC/lB,GAAD,OAAWA,EAAMi6B,Q,sDCkDnDktC,MA1Df,YAcI,IAAD,gBAbDxxC,EAaC,EAbDA,YACAyxC,EAYC,EAZDA,MACA92B,EAWC,EAXDA,WACA+2B,EAUC,EAVDA,cACAC,EASC,EATDA,oBACAC,EAQC,EARDA,MASQ3lE,EAAMC,cAAND,EACR,OACE,qCACE,eAACK,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,oBAAqB,CAAE+jD,MAAK,UAAErV,EAAW7rC,IAAMgxB,mBAAnB,aAAE,EAA8BpsB,WACrE,eAACpH,EAAA,EAAD,WACE,cAAC,IAAD,CAAcwV,SAAU64B,EAAW7rC,IAAMgxB,YAAaxT,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAOmlD,EAAc5iE,IAAMgxB,mBAA3B,aAAO,EAAiCiS,cAAc,WAG1D,eAACzlC,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,oBAAqB,CAAE+jD,MAAK,UAAErV,EAAW7rC,IAAM+iE,mBAAnB,aAAE,EAA8Bn+D,WACrE,eAACpH,EAAA,EAAD,WACE,cAAC,IAAD,CAAcwV,SAAU64B,EAAW7rC,IAAM+iE,YAAavlD,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAOmlD,EAAc5iE,IAAM+iE,mBAA3B,aAAO,EAAiC9/B,cAAc,WAG1D,eAACzlC,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,WACT,cAAC,KAAD,gCACQ0uC,EAAW7rC,IAAMgxB,mBADzB,aACQ,EAA8BpsB,OADtC,qBACkD+9D,QADlD,IACkDA,OADlD,EACkDA,EAAO1/B,cAAc,GADvE,sBAEI4I,EAAW7rC,IAAM+iE,mBAFrB,aAEI,EAA8Bn+D,aAIpC,cAACpH,EAAA,EAAD,CAAYggB,MAAO,CAAEikC,eAAgB,YAArC,SACE,cAAC,KAAD,gCACQ5V,EAAW7rC,IAAM+iE,mBADzB,aACQ,EAA8Bn+D,OADtC,qBACkD+9D,QADlD,IACkDA,OADlD,EACkDA,EAAO3/B,SAASC,cAAc,GADhF,sBAEI4I,EAAW7rC,IAAMgxB,mBAFrB,aAEI,EAA8BpsB,YAIpC,eAACpH,EAAA,EAAD,WACE,eAAC,KAAD,WAAOL,EAAE,iBAAT,OACA,eAAC,KAAD,WAAO+zB,EAAc,MAAH,OAAW2xC,QAAX,IAAWA,OAAX,EAAWA,EAAqB5/B,cAAc,GAAhE,UAEF,cAAC,IAAD,CAAQ3qB,QAASwqD,EAAO7hB,GAAG,OAA3B,SACiB9jD,EAAd+zB,EAAgB,uBAA4B,wB,SCFtC8xC,MAjDf,YAUI,IAAD,wBATDn3B,EASC,EATDA,WACA3a,EAQC,EARDA,YACA2xC,EAOC,EAPDA,oBACAF,EAMC,EANDA,MAOQxlE,EAAMC,cAAND,EACR,OACE,cAAC,IAAD,CAAYiB,IAAI,KAAhB,SACE,eAAC,IAAD,CAASP,QAAQ,eAAeO,IAAI,MAApC,UACE,eAAC,IAAD,CAAYP,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO8kE,QAAP,IAAOA,OAAP,EAAOA,EAAO1/B,cAAc,UAA5B,QAAkC,MAClC,cAAC,KAAD,CAAMod,SAAS,OAAOqB,GAAI,EAA1B,SACGvkD,EAAE,wBAAyB,CAC1B8lE,OAAM,oBAAEp3B,EAAW7rC,IAAM+iE,mBAAnB,aAAE,EAA8Bn+D,cAAhC,QAA0C,GAChDs+D,OAAM,oBAAEr3B,EAAW7rC,IAAMgxB,mBAAnB,aAAE,EAA8BpsB,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAY/G,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO8kE,QAAP,IAAOA,GAAP,UAAOA,EAAO3/B,gBAAd,aAAO,EAAiBC,cAAc,UAAtC,QAA4C,MAC5C,cAAC,KAAD,CAAMod,SAAS,OAAOqB,GAAI,EAA1B,SACGvkD,EAAE,wBAAyB,CAC1B8lE,OAAM,oBAAEp3B,EAAW7rC,IAAMgxB,mBAAnB,aAAE,EAA8BpsB,cAAhC,QAA0C,GAChDs+D,OAAM,oBAAEr3B,EAAW7rC,IAAM+iE,mBAAnB,aAAE,EAA8Bn+D,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAY/G,QAAQ,SAApB,UACE,eAAC,KAAD,WACGqzB,GAAeyxC,EACZ,MADH,WAEuB,OAAnBE,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBz5C,SAASvV,MAAY,QAA1C,OAAoDgvD,QAApD,IAAoDA,OAApD,EAAoDA,EAAqBlgE,QAAQ,UAFrF,QAE4F,IAH/F,OAMA,cAAC,KAAD,CAAM09C,SAAS,OAAOqB,GAAI,EAA1B,SACGvkD,EAAE,4B,SCXA,SAASgmE,EAAT,GAK0D,IAAD,4CAJtE5mE,MACEggB,OAAU6mD,GAG0D,GAH1DA,YAAaC,GAG6C,GAH7CA,YAEzBC,GACsE,EADtEA,QAEA,GAAsC9iE,cAA9B0R,GAAR,GAAQA,QAASvR,GAAjB,GAAiBA,QAASD,GAA1B,GAA0BA,QAClBvD,GAAMC,cAAND,EAEFk+C,GAAYv6B,YAAYsiD,IACxB9nB,GAAYx6B,YAAYuiD,IAExBE,GAAoBrwD,QACxBvS,KACI06C,IAAa17B,YAAe07B,GAAWjoC,IAAKzS,MAC3C26C,IAAa37B,YAAe27B,GAAWloC,IAAKzS,OAG7CmhB,GAAaH,cAGnB,GAA0D8gD,IAAlDjyC,GAAR,GAAQA,iBAAkBC,GAA1B,GAA0BA,WAAYQ,GAAtC,GAAsCA,gBACtC,GHjBK,SACLoqB,EACAC,GAaC,IAAD,MAoGIvkC,EAKiC,EAIqC,EA5G1E,EAA6BtW,cAArByR,EAAR,EAAQA,QAASvR,EAAjB,EAAiBA,QAEjB,EAA0D8hE,IAAlDjyC,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,WAAYQ,EAAtC,EAAsCA,gBAEhCuyC,EAAiBhzC,IAAqBxwB,IAAMgxB,WAAahxB,IAAM+iE,WAAa/iE,IAAMgxB,WAGlF6a,EAA8Cj3B,mBAClD,2CACG5U,IAAMgxB,WADT,OACsBqqB,QADtB,IACsBA,SAAapgD,GADnC,cAEG+E,IAAM+iE,WAFT,OAEsBznB,QAFtB,IAEsBA,SAAargD,GAFnC,IAIA,CAACogD,EAAWC,IAId,EAA0BS,YAAQlQ,EAAW7rC,IAAMgxB,YAAa6a,EAAW7rC,IAAM+iE,aAAjF,mBAAOU,EAAP,KAAkBngD,EAAlB,KAEMm0C,EAAcD,YAAc,OAACl0C,QAAD,IAACA,OAAD,EAACA,EAAMwrB,gBAEnC5d,EACJuyC,IAAcvoB,IAAUS,YAAczoC,QAAQukD,GAAehmD,IAAKiyD,MAAMjM,EAAY1lD,IAAKywD,IAGrFn3B,EAAWO,YAAmB,OAAC15B,QAAD,IAACA,SAAWjX,EAAW,CACzD4wC,EAAW7rC,IAAMgxB,YACjB6a,EAAW7rC,IAAM+iE,cAEbjzB,GAAuD,mBAC1D9vC,IAAMgxB,WAAaqa,EAAS,IAD8B,cAE1DrrC,IAAM+iE,WAAa13B,EAAS,IAF8B,GAMvDs4B,EAAgDp1B,YAAe9d,EAAYob,EAAWrb,IACtFozC,EAA8ChvD,mBAAQ,WAC1D,GAAIsc,EACF,OAAID,GAAmB4a,EAAW23B,GACzBj1B,YAAetd,EAAiB4a,EAAW23B,SAEpD,EAEF,GAAIG,EAAJ,CAEE,IAAME,EAA2Bz+C,YAAsBu+C,EAAmBhjE,GAC1E,EAAyB,CAACwkB,YAAgBk2B,EAAW16C,GAAUwkB,YAAgBm2B,EAAW36C,IAAnFkjB,EAAP,KAAeC,EAAf,KACA,GAAID,GAAUC,GAAU+/C,GAA4BvgD,EAAM,CACxD,IAAMwgD,EAAoBN,IAAmBxjE,IAAM+iE,WAAaznB,EAAYD,EACtE0oB,EACJP,IAAmBxjE,IAAM+iE,WACrBz/C,EAAK0gD,QAAQngD,GAAQogD,MAAMJ,GAC3BvgD,EAAK0gD,QAAQlgD,GAAQmgD,MAAMJ,GACjC,OAAOC,IAAsB7wD,IAAQsvB,IAAeC,MAAMuhC,EAAqBhyD,KAAOgyD,MAKzF,CAAC7yC,EAAaD,EAAiB4a,EAAY23B,EAAgBG,EAAmBtoB,EAAW16C,EAAS26C,EAAWh4B,IAE1Gs/C,EAAkEhuD,mBACtE,2CACG5U,IAAMgxB,WAAaR,IAAqBxwB,IAAMgxB,WAAa2yC,EAAoBC,GADlF,cAEG5jE,IAAM+iE,WAAavyC,IAAqBxwB,IAAMgxB,WAAa4yC,EAAkBD,GAFhF,IAIA,CAACC,EAAiBD,EAAmBnzC,IAGjCmyC,EAAQ/tD,mBAAQ,WACpB,GAAIsc,EAAa,CACf,IAA4BgzC,EAAyDtB,EAA5E5iE,IAAMgxB,YAAkDmzC,EAAoBvB,EAAvC5iE,IAAM+iE,YACpD,OAAImB,GAAmBC,EACd,IAAIC,IAAMF,EAAgBlxD,SAAUmxD,EAAgBnxD,SAAUkxD,EAAgBnyD,IAAKoyD,EAAgBpyD,UAE5G,EAEF,IAAMsyD,EAAmBl/C,YAAgBk2B,EAAW16C,GACpD,OAAO2iB,GAAQ+gD,EAAmB/gD,EAAK0gD,QAAQK,QAAoBppE,IAClE,CAAC0F,EAAS06C,EAAWnqB,EAAa5N,EAAMs/C,IAGrC0B,EAAkB1vD,mBAAQ,WAC9B,IAA4BsvD,EAAyDtB,EAA5E5iE,IAAMgxB,YAAkDmzC,EAAoBvB,EAAvC5iE,IAAM+iE,YACpD,EAAqC,CACnC39C,YAAsB8+C,EAAiBvjE,GACvCykB,YAAsB++C,EAAiBxjE,IAFlC4jE,EAAP,KAAqBC,EAArB,KAIA,GAAIlhD,GAAQm0C,GAAe8M,GAAgBC,EACzC,OAAOlhD,EAAKmhD,mBAAmBhN,EAAa8M,EAAcC,KAG3D,CAAC5B,EAAejiE,EAAS2iB,EAAMm0C,IAE5BoL,EAAsBjuD,mBAAQ,WAClC,GAAI0vD,GAAmB7M,EACrB,OAAO,IAAIjmD,IAAQ8yD,EAAgBvyD,IAAK0lD,EAAYpmD,IAAIizD,GAAiBvyD,OAG1E,CAACuyD,EAAiB7M,IAGhBvlD,IACH6E,EAAQ,kBAGN0sD,IAAcvoB,IAAUQ,UAC1B3kC,EAAK,UAAGA,SAAH,QAAY,gBAGd6rD,EAAc5iE,IAAMgxB,aAAgB4xC,EAAc5iE,IAAM+iE,cAC3DhsD,EAAK,UAAGA,SAAH,QAAY,mBAGnB,IAEwF,EAIA,EAN5DmtD,EAAyDtB,EAA5E5iE,IAAMgxB,YAAkDmzC,EAAoBvB,EAAvC5iE,IAAM+iE,YAUpD,OARImB,IAAe,OAAIp0B,QAAJ,IAAIA,GAAJ,UAAIA,EAAmB9vC,IAAMgxB,mBAA7B,aAAI,EAAsC5H,SAAS86C,MACpEntD,EAAK,iCAAmB80B,EAAW7rC,IAAMgxB,mBAApC,aAAmB,EAA8BpsB,OAAjD,aAGHu/D,IAAe,OAAIr0B,QAAJ,IAAIA,GAAJ,UAAIA,EAAmB9vC,IAAM+iE,mBAA7B,aAAI,EAAsC35C,SAAS+6C,MACpEptD,EAAK,iCAAmB80B,EAAW7rC,IAAM+iE,mBAApC,aAAmB,EAA8Bn+D,OAAjD,aAGA,CACL4+D,iBACA33B,aACAvoB,OACAmgD,YACA3zB,mBACA8yB,gBACAD,QACAzxC,cACAozC,kBACAzB,sBACA9rD,SGxHE2tD,CAAkB,OAACrpB,SAAD,IAACA,WAAapgD,EAAd,OAAyBqgD,SAAzB,IAAyBA,WAAargD,GAX1DuoE,GADF,GACEA,eACA33B,GAFF,GAEEA,WACAvoB,GAHF,GAGEA,KACAmgD,GAJF,GAIEA,UACA3zB,GALF,GAKEA,iBACA8yB,GANF,GAMEA,cACAD,GAPF,GAOEA,MACAzxC,GARF,GAQEA,YACAozC,GATF,GASEA,gBACAzB,GAVF,GAUEA,oBACA9rD,GAXF,GAWEA,MAGF,GHxDK,SAA+Bma,GAIpC,IAAM/P,EAAWC,cAejB,MAAO,CACLujD,cAdoBvoE,uBACpB,SAACq0B,GACCtP,EAASlhB,YAAU,CAAE2wB,MAAO5wB,IAAMgxB,WAAYP,aAAYS,aAA6B,IAAhBA,OAEzE,CAAC/P,EAAU+P,IAWX0zC,cAToBxoE,uBACpB,SAACq0B,GACCtP,EAASlhB,YAAU,CAAE2wB,MAAO5wB,IAAM+iE,WAAYtyC,aAAYS,aAA6B,IAAhBA,OAEzE,CAAC/P,EAAU+P,KGwC4B2zC,CAAsB3zC,IAAvDyzC,GAAR,GAAQA,cAAeC,GAAvB,GAAuBA,cAEjBE,IAAW/tD,GAGjB,GAA0C3b,oBAAkB,GAA5D,qBAAO0mD,GAAP,MAAsBijB,GAAtB,MAGMliD,GAAWu6C,cACjB,GAA0B56C,cAAnB6H,GAAP,qBACA,GAA4BjvB,mBAAiB,IAA7C,qBAAO4pE,GAAP,MAAeC,GAAf,MAGMC,IAAgB,mBACnB10C,GAAmBC,IADA,cAEnB+yC,GAAiBtyC,GAAcD,GAAH,oBAAqB2xC,GAAcY,WAAnC,aAAqB,EAA+BvgC,cAAc,UAAlE,QAAwE,IAFjF,GAMhBkiC,GAAiD,CAACnlE,IAAMgxB,WAAYhxB,IAAM+iE,YAAYxkD,QAC1F,SAAC6mD,EAAax0C,GACZ,OAAO,2BACFw0C,GADL,kBAEGx0C,EAAQ0vC,YAAexwB,GAAiBlf,QAG7C,IAGIy0C,GAAmD,CAACrlE,IAAMgxB,WAAYhxB,IAAM+iE,YAAYxkD,QAC5F,SAAC6mD,EAAax0C,GAAW,IAAD,IACtB,OAAO,2BACFw0C,GADL,kBAEGx0C,EAFH,UAEWu0C,GAAWv0C,UAFtB,aAEW,EAAmB6yB,QAAnB,UAA2Bmf,GAAchyC,UAAzC,QAAmD,SAGhE,IAIF,GAAsC/H,YAAmB+5C,GAAc5iE,IAAMgxB,YAAate,KAA1F,qBAAO4yD,GAAP,MAAkBC,GAAlB,MACA,GAAsC18C,YAAmB+5C,GAAc5iE,IAAM+iE,YAAarwD,KAA1F,qBAAO8yD,GAAP,MAAkBC,GAAlB,MAEMj8C,GAAiBC,cA1E+C,SA4EvDq5C,KA5EuD,8EA4EtE,0DAAAhpE,EAAA,yDACO6G,IAAYD,IAAYwR,GAD/B,oDAEQwzD,EAASlzD,YAAkB7R,GAASD,GAASwR,IAEvByzD,EAAqD/C,GAAxE5iE,IAAMgxB,YAAgD40C,EAAkBhD,GAArC5iE,IAAM+iE,YAC7C4C,GAAkBC,GAAkBvqB,IAAcC,IAAcz4B,GALvE,2EAUK7iB,IAAMgxB,WAAarf,YAAwBg0D,EAAez0C,GAAc,EAAI7G,IAAiB,IAVlG,cAWKrqB,IAAM+iE,WAAapxD,YAAwBi0D,EAAe10C,GAAc,EAAI7G,IAAiB,IAF1Fw7C,EATR,EAkBMxqB,KAAcpoC,KAASqoC,KAAcroC,KACjC6yD,EAAcxqB,KAAcroC,IAClC8yD,EAAWL,EAAO97C,YAAYo8C,gBAC9BvpC,EAASipC,EAAOM,gBAChBC,EAAO,qBACL9gD,YAAgB2gD,EAAczqB,GAAYC,GAAW36C,WADhD,aACL,EAA+DpC,eAD1D,QACqE,IACzEunE,EAAcH,EAAgBC,GAAe7zD,IAAI/U,WAClD6oE,EAAWC,EAAc9lE,IAAMgxB,WAAahxB,IAAM+iE,YAAY/lE,WAC9D6oE,EAAWC,EAAc9lE,IAAM+iE,WAAa/iE,IAAMgxB,YAAYh0B,WAC9DkV,GACA2Q,GAASqjD,eAEXhpE,EAAQqE,IAAUiC,MAAMsiE,EAAcF,EAAgBD,GAAe5zD,IAAI/U,cAEzE+oE,EAAWL,EAAO97C,YAAYu8C,aAC9B1pC,EAASipC,EAAOS,aAChBF,EAAO,qBACL9gD,YAAgBk2B,GAAW16C,WADtB,aACL,EAAqCpC,eADhC,QAC2C,GAD3C,oBAEL4mB,YAAgBm2B,GAAW36C,WAFtB,aAEL,EAAqCpC,eAFhC,QAE2C,GAChDonE,EAAc5zD,IAAI/U,WAClB4oE,EAAc7zD,IAAI/U,WAClB6oE,EAAW7lE,IAAMgxB,YAAYh0B,WAC7B6oE,EAAW7lE,IAAM+iE,YAAY/lE,WAC7BkV,GACA2Q,GAASqjD,eAEXhpE,EAAQ,MAGV6nE,IAAiB,GA/CnB,UAgDQgB,EAAQ,WAAR,cAAYE,GAAZ,QAAkB/oE,EAAQ,CAAEA,SAAU,MACzC+sB,MAAK,SAACm8C,GAAD,OACJ3pC,EAAM,WAAN,cAAUwpC,GAAV,mCACM/oE,EAAQ,CAAEA,SAAU,IAD1B,IAEE8sB,SAAU7Y,YAAmBi1D,QAC5Bn8C,MAAK,SAAChwB,GAAc,IAAD,QACpB8qE,IAAiB,GAEjBv7C,GAAevvB,EAAU,CACvBiwB,QAAQ,OAAD,iBAAS04C,GAAc5iE,IAAMgxB,mBAA7B,aAAS,EAAiCiS,cAAc,GAAxD,sBACL4I,GAAW7rC,IAAMgxB,mBADZ,aACL,EAA8BpsB,OADzB,0BAECg+D,GAAc5iE,IAAM+iE,mBAFrB,aAEC,EAAiC9/B,cAAc,GAFhD,sBAEsD4I,GAAW7rC,IAAM+iE,mBAFvE,aAEsD,EAA8Bn+D,UAG7FqgE,GAAUhrE,EAAS41B,YAGtB/F,OAAM,SAACu8C,GACNtB,IAAiB,GAEC,QAAX,OAAHsB,QAAG,IAAHA,OAAA,EAAAA,EAAK/4B,OACPt2B,QAAQD,MAAMsvD,MArEtB,6CA5EsE,sBAsJtE,IAAMC,GAAc,WAAO,IAAD,QACxB,OAAOp1C,GACL,eAAC,IAAD,CAAMo7B,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMjM,SAAS,OAAO5iC,YAAY,OAAlC,6BACMouB,GAAW7rC,IAAMgxB,mBADvB,aACM,EAA8BpsB,OADpC,sBAC8CinC,GAAW7rC,IAAM+iE,mBAD/D,aAC8C,EAA8Bn+D,UAE5E,cAAC,IAAD,CACEwY,UAAWyuB,GAAW7rC,IAAMgxB,YAC5B3T,UAAWwuB,GAAW7rC,IAAM+iE,YAC5BzlD,KAAM,QAIV,eAAC,IAAD,WACE,eAAC,IAAD,CAAMgvC,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMjM,SAAS,OAAO5iC,YAAY,OAAlC,gBACG6mD,SADH,IACGA,QADH,EACGA,GAAiBrhC,cAAc,KAElC,cAAC,IAAD,CACE7lB,UAAWyuB,GAAW7rC,IAAMgxB,YAC5B3T,UAAWwuB,GAAW7rC,IAAM+iE,YAC5BzlD,KAAM,QAGV,cAAC9f,EAAA,EAAD,UACE,cAAC,KAAD,CAAM6iD,SAAS,OAAf,6BACMxU,GAAW7rC,IAAMgxB,mBADvB,aACM,EAA8BpsB,OADpC,sBAC8CinC,GAAW7rC,IAAM+iE,mBAD/D,aAC8C,EAA8Bn+D,OAD5E,oBAIF,cAAC,KAAD,CAAM27C,OAAK,EAACC,UAAU,OAAO+lB,GAAG,OAAhC,SACGppE,GAAE,mGAAoG,CACrGyU,SAAUyY,GAAkB,YAOhCm8C,GAAc,WAClB,OACE,cAAC,EAAD,CACE7D,MAAOA,GACP92B,WAAYA,GACZ+2B,cAAeA,GACf1xC,YAAaA,GACb4xC,MAAOA,GACPD,oBAAqBA,MAKrBziB,GAAcjjD,GAAE,wDAAyD,CAC7EspE,QAAO,oBAAE7D,GAAc5iE,IAAMgxB,mBAAtB,aAAE,EAAiCiS,cAAc,UAAjD,QAAuD,GAC9DyjC,QAAO,qBAAE76B,GAAW7rC,IAAMgxB,mBAAnB,cAAE,GAA8BpsB,cAAhC,QAA0C,GACjD+hE,QAAO,sBAAE/D,GAAc5iE,IAAM+iE,mBAAtB,cAAE,GAAiC9/B,cAAc,UAAjD,UAAuD,GAC9D2jC,QAAO,sBAAE/6B,GAAW7rC,IAAM+iE,mBAAnB,cAAE,GAA8Bn+D,cAAhC,UAA0C,KAG7CiiE,GAAwBzqE,uBAC5B,SAAC0qE,GACC,IAAMC,EAAiBhmD,YAAW+lD,GAC9BC,IAAmB1D,GACrBC,GAAQ/wC,KAAR,eAAqB8wC,GAArB,YAAoCD,KAEpCE,GAAQ/wC,KAAR,eAAqBw0C,EAArB,YAAuC1D,OAG3C,CAACA,GAAaC,GAASF,KAEnB4D,GAAwB5qE,uBAC5B,SAAC6qE,GACC,IAAMC,EAAiBnmD,YAAWkmD,GAC9B7D,KAAgB8D,EACd7D,GACFC,GAAQ/wC,KAAR,eAAqB8wC,GAArB,YAAoC6D,IAEpC5D,GAAQ/wC,KAAR,eAAqB20C,IAGvB5D,GAAQ/wC,KAAR,eAAqB6wC,IAAe,MAApC,YAA6C8D,MAGjD,CAAC9D,GAAaE,GAASD,KAGnB8D,GAA4B/qE,uBAAY,WAExC4oE,IACFL,GAAc,IAEhBM,GAAU,MACT,CAACN,GAAeK,KAEboC,GAAmB9hB,YAA2B,OAACzZ,SAAD,IAACA,QAAD,EAACA,GAAY7a,WAAb,OAAyB6a,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAYk3B,YAEzF,GAAqCvW,aACnC,cAAC7K,EAAA,EAAD,CACEC,MAAqBzkD,GAAd+zB,GAAgB,0BAA+B,oBACtD2wB,gBAAiBslB,GACjBrlB,cAAeA,GACfjyB,KAAMm1C,GACNjjB,QAAS,kBAAM,cAAC,IAAD,CAA0BT,WAAYglB,GAAajlB,cAAemlB,MACjFpmB,YAAaA,GACbO,cAAa,OAAEr9B,SAAF,IAAEA,QAAF,EAAEA,GAAMwrB,kBAEvB,GACA,EACA,qBAZKu4B,GAAP,qBAeA,OACE,eAAC9N,EAAA,EAAD,WACE,eAAC+N,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CACE1lB,MAAOzkD,GAAE,iBACT2wD,SAAU3wD,GAAE,sCACZ4wD,OAAQ5wD,GACN,2IAEF6wD,OAAO,UAET,cAAC,IAAD,UACE,eAAC,IAAD,CAAY5vD,IAAI,OAAhB,UACG8yB,IACC,cAAC/vB,EAAA,EAAD,UACE,cAAC,KAAD,CAAS6/C,QAAQ,UAAjB,SACE,gCACE,cAAC,KAAD,CAAMV,MAAI,EAACyK,GAAG,MAAd,SACG5tD,GAAE,2CAEL,cAAC,KAAD,CAAM4tD,GAAG,MAAT,SAAgB5tD,GAAE,kEAClB,cAAC,KAAD,UAAOA,GAAE,qEAKjB,cAAC+3D,EAAA,EAAD,CACEh4D,MAAOgoE,GAAiBllE,IAAMgxB,YAC9Bqd,YAAas2B,GACbxP,MAAO,WAAO,IAAD,IACXwP,GAAa,oBAACQ,GAAWnlE,IAAMgxB,mBAAlB,aAAC,EAA8Bu2C,iBAA/B,QAA4C,KAE3DjS,iBAAkBuR,GAClBzR,eAAgBiQ,GAAarlE,IAAMgxB,YACnChe,SAAU64B,GAAW7rC,IAAMgxB,YAC3Bjb,GAAG,6BACH2/C,iBAAe,IAEjB,cAACv0D,EAAA,EAAD,UACE,cAAC,IAAD,CAASxD,MAAM,WAEjB,cAACu3D,EAAA,EAAD,CACEh4D,MAAOgoE,GAAiBllE,IAAM+iE,YAC9B10B,YAAau2B,GACbtP,iBAAkB0R,GAClB7R,MAAO,WAAO,IAAD,IACXyP,GAAa,oBAACO,GAAWnlE,IAAM+iE,mBAAlB,aAAC,EAA8BwE,iBAA/B,QAA4C,KAE3DnS,eAAgBiQ,GAAarlE,IAAM+iE,YACnC/vD,SAAU64B,GAAW7rC,IAAM+iE,YAC3BhtD,GAAG,6BACH2/C,iBAAe,IAEhB7pB,GAAW7rC,IAAMgxB,aAAe6a,GAAW7rC,IAAM+iE,aAAeU,KAAcvoB,IAAUQ,SACvF,mCACE,eAAC,IAAD,CAAW59C,QAAQ,MAAME,aAAa,OAAtC,UACE,cAACR,EAAA,EAAD,CAAYM,QAAQ,OAApB,SACE,cAAC,KAAD,CAAMuiD,SAAS,OAAf,SACiBljD,GAAd+zB,GAAgB,gCAAqC,6BAE5C,IACd,cAAC,IAAD,CAAWpzB,QAAQ,OAAOE,aAAa,OAAvC,SACE,cAAC,EAAD,CACE6tC,WAAYA,GACZg3B,oBAAqBA,GACrB3xC,YAAaA,GACbyxC,MAAOA,YAOhByE,GACC,cAAC,IAAD,CAAQ/G,UAAQ,EAACtV,GAAG,MAApB,SACG5tD,GAAE,uBAEF+U,GAGH,eAAC,IAAD,CAAY9T,IAAI,KAAhB,WACIknE,KAAc78C,IAAca,cAC5Bg8C,KAAc78C,IAAcY,SAC5Bm8C,KAAc/8C,IAAca,cAC5Bk8C,KAAc/8C,IAAcY,UAC5By7C,IACE,eAACtnE,EAAA,EAAD,WACG8nE,KAAc78C,IAAcU,UAC3B,cAAC,IAAD,CACE7Q,QAASitD,GACTlF,SAAUiF,KAAc78C,IAAcY,QACtC1rB,MAAO6nE,KAAc/8C,IAAcU,SAAW,MAAQ,OAHxD,SAKGm8C,KAAc78C,IAAcY,QAC3B,cAACiuC,EAAA,EAAD,UAAOn6D,GAAE,oBAAqB,CAAE+jD,MAAK,WAAErV,GAAW7rC,IAAMgxB,mBAAnB,cAAE,GAA8BpsB,WAErEzH,GAAE,kBAAmB,CAAE+jD,MAAK,WAAErV,GAAW7rC,IAAMgxB,mBAAnB,cAAE,GAA8BpsB,WAIjE4gE,KAAc/8C,IAAcU,UAC3B,cAAC,IAAD,CACE7Q,QAASmtD,GACTpF,SAAUmF,KAAc/8C,IAAcY,QACtC1rB,MAAO2nE,KAAc78C,IAAcU,SAAW,MAAQ,OAHxD,SAKGq8C,KAAc/8C,IAAcY,QAC3B,cAACiuC,EAAA,EAAD,UAAOn6D,GAAE,oBAAqB,CAAE+jD,MAAK,WAAErV,GAAW7rC,IAAM+iE,mBAAnB,cAAE,GAA8Bn+D,WAErEzH,GAAE,kBAAmB,CAAE+jD,MAAK,WAAErV,GAAW7rC,IAAM+iE,mBAAnB,cAAE,GAA8Bn+D,cAMxE,cAAC,IAAD,CACEo8C,SACG8jB,IAAalC,GAAc5iE,IAAMgxB,aAAiB4xC,GAAc5iE,IAAM+iE,YACnE,SACA,UAENzqD,QAAS,WACHwJ,GACFghD,KAEAuE,MAGJhH,UAAWyE,IAAWQ,KAAc78C,IAAcU,UAAYq8C,KAAc/8C,IAAcU,SAb5F,gBAeGpS,SAfH,IAeGA,MAAS,cApDd,cAACy2B,EAAA,EAAD,YA2DN45B,GAOA,cAAC3H,EAAA,EAAD,CAA2B5zB,WAAY,CAACA,GAAW7a,WAAY6a,GAAWk3B,cAN1Ez/C,KAAS4N,IAAeuyC,KAAcvoB,IAAUQ,QAC9C,cAAC,IAAD,CAAYl+B,MAAO,CAAEgqD,SAAU,QAAS7pE,MAAO,OAAQwuD,SAAU,QAASsb,UAAW,QAArF,SACE,cAAC,IAAD,CAAqBC,cAAenE,GAAmBjgD,KAAMA,OAE7D,U,gkBCraCqkD,EAAgB,EAEvBntE,EAAiC,CACrC2sC,OAAQ1c,IAAiBm9C,QACzBnqC,WAAW,EACXoqC,mBAAmB,EACnBC,iBAAiB,EACjBC,mBAAmB,EACnBC,cAAet9C,IAAcu9C,IAC7B5iC,aAAc,EACd6iC,6BAA8B,EAC9BphC,eAAgB,IAChBG,aAAc,GACdF,aAAc,mBACdG,WAAY,GACZihC,gBAAiB7mE,IAASQ,SAC1B6lC,OAAQ,GACR27B,QAAS,GACTz7B,QAAS,GACTugC,kBAAmB,IAiBRC,EAAwBpoC,YACnC,wBADmD,sBAEnD,sDAAAnmC,EAAA,6DAAOoY,EAAP,+BAAiB,KAAjB,SAE2B00B,cAF3B,cAEQ0hC,EAFR,OAGQliC,EAASmiC,IAAMD,EAAWjjC,aAAcijC,EAAWjjC,aA7CpC,GA0CvB,SAM+BgC,YAAcjB,GAN7C,UAMQoiC,EANR,OAOQC,EAAsDD,EAAejqD,QAAO,SAAC0c,EAAOoJ,GACxF,IAAMqkC,EAAiBzgC,YAAmC5D,GAE1D,OAAO,2BACFpJ,GADL,kBAEGytC,EAAenkC,MAAMvnC,WAAa0rE,MAEpC,IAEGC,EAhBR,2BAiBOL,GAjBP,IAkBI3gC,OAAQ8gC,EACR5gC,QAAS,GACTugC,kBAAmB,KAGhBl2D,EAvBP,0CAwBWy2D,GAxBX,yBA4BgCxiC,YAAcj0B,EAASk0B,GA5BvD,eA4BQK,EA5BR,iBA+BkCH,YAAiBp0B,EAASk0B,GA/B5D,eA+BQgiC,EA/BR,yBAiCSnQ,IAAM,GAAI0Q,EAAiB,CAChC9gC,QAASD,YAAe11B,EAASu0B,EAAiBL,GAClDgiC,uBAnCJ,6CAwCWQ,EAAa3oC,YAAyC,yBAAzB,uCAAmD,WAAOsE,GAAP,iBAAAzqC,EAAA,6DACrF+uE,EAAqBjyD,cADgE,SAEpEiyD,EAAmBlhC,OAAOpD,GAF0C,cAErFtqC,EAFqF,yBAGpFguC,YAAmChuC,IAHiD,2CAAnD,uDAM7B6uE,EAAc7oC,YACzB,0BADyC,uCAEzC,WAAOmG,GAAP,eAAAtsC,EAAA,sEACuButC,YAAcjB,GADrC,cACQuB,EADR,yBAESA,EAAOppB,QAAO,SAAC0c,EAAO5O,GAC3B,IAAKA,EACH,OAAO4O,EAGT,IAAMytC,EAAiBzgC,YAAmC5b,GAE1D,OAAO,2BACF4O,GADL,kBAEGytC,EAAenkC,MAAMvnC,WAAa0rE,MAEpC,KAbL,2CAFyC,uDAmB9BK,EAAkB9oC,YAA6B,8BAAb,sBAA4C,4BAAAnmC,EAAA,sEAChE8sC,cADgE,cACnF0hC,EADmF,yBAElFA,GAFkF,4CAK9EU,EAAkB/oC,YAC7B,8BAD6C,uCAE7C,iCAAAnmC,EAAA,6DAASoY,EAAT,EAASA,QAASk0B,EAAlB,EAAkBA,OAAlB,SACwBD,YAAcj0B,EAASk0B,GAD/C,cACQyB,EADR,yBAESD,YAAe11B,EAAS21B,EAASzB,IAF1C,2CAF6C,uDAQlC6iC,EAAyBhpC,YAGpC,qCAHoD,uCAGd,iCAAAnmC,EAAA,6DAASoY,EAAT,EAASA,QAASk0B,EAAlB,EAAkBA,OAAlB,SAChBE,YAAiBp0B,EAASk0B,GADV,cAChCyB,EADgC,yBAE/BA,GAF+B,2CAHc,uDASzCqhC,EAAejpC,YAC1B,2BAD0C,uCAE1C,mCAAAnmC,EAAA,6DAASoY,EAAT,EAASA,QAAS8xB,EAAlB,EAAkBA,QAAlB,SACyB6B,YAAc,CACnCtkB,KAAMrP,EAAQkK,cACd4nB,YAHJ,cACQ/pC,EADR,OAKQkrC,EAAOlrC,EAASiiB,IAAIwnB,KAL5B,kBAOS,CAAExxB,UAASizB,SAPpB,2CAF0C,uDAa/BgkC,EAAmB5oC,YAAY,CAC1CjkB,KAAM,cACN9hB,eACAgmC,SAAU,CACR4oC,oBAAqB,SAAC7tE,EAAOqzB,GAC3BrzB,EAAM4rC,OAASvY,EAAOC,SAExBw6C,oBAAqB,SAAC9tE,EAAOqzB,GAC3BrzB,EAAMssE,kBAAoBj5C,EAAOC,QACjCtzB,EAAMysE,cAAgBt9C,IAAcu9C,KAEtCqB,kBAAmB,SAAC/tE,EAAOqzB,GACzBrzB,EAAMusE,gBAAkBl5C,EAAOC,SAEjC06C,iBAAkB,SAAChuE,EAAOqzB,GACxBrzB,EAAMysE,cAAgBp5C,EAAOC,SAE/B26C,gBAAiB,SAACjuE,EAAOqzB,GACvBrzB,EAAM8pC,aAAezW,EAAOC,SAE9B46C,mBAAoB,SAACluE,EAAOqzB,GAC1BrzB,EAAM4sE,gBAAkBv5C,EAAOC,SAEjC66C,0BAA2B,SAACnuE,EAAOqzB,GACjC,MAA2BA,EAAOC,QAA1B3c,EAAR,EAAQA,QAASy3D,EAAjB,EAAiBA,MAEjB,GAAIpuE,EAAM+nE,QAAQpxD,GAAU,CAC1B,IAAM03D,EAAWruE,EAAM+nE,QAAQpxD,GAAS0uB,WAAU,SAACgD,GAAD,OAASA,EAAI7tB,KAAO4zD,KAElEC,GAAY,IACdruE,EAAM+nE,QAAQpxD,GAAS03D,GAAU5lC,SAAU,MAKnDnD,cAAe,SAACpS,GAEdA,EAAQC,QAAQu6C,EAAuBh3C,WAAW,SAAC12B,EAAOqzB,GACxDrzB,EAAM6sE,kBAAoBnQ,IAAM,GAAI18D,EAAM6sE,kBAAmBx5C,EAAOC,YAItEJ,EAAQC,QAAQs6C,EAAgB/2C,WAAW,SAAC12B,EAAOqzB,GACjDrzB,EAAMssC,QAAUowB,IAAM,GAAI18D,EAAMssC,QAASjZ,EAAOC,YAIlDJ,EAAQC,QAAQq6C,EAAgB92C,WAAW,SAAC12B,EAAOqzB,GACjD,MAAyFA,EAAOC,QAAxFsY,EAAR,EAAQA,OAAQ9B,EAAhB,EAAgBA,aAAcyB,EAA9B,EAA8BA,eAAgBG,EAA9C,EAA8CA,aAAcF,EAA5D,EAA4DA,aAAcG,EAA1E,EAA0EA,WAG1E,GAAI3rC,EAAM8pC,eAAiBA,EAAc,CACvC,IAAMwkC,EAAcC,IAAMrtE,OAAOgjB,OAAOlkB,EAAMosC,QAAS,SACjDoiC,EAAcziC,YAClBuiC,EAAYtlC,MAAQ,EACpBslC,EAAY97C,YAAcxyB,EAAMurC,eAAiB6gC,IAGnDpsE,EAAMosC,OAAOoiC,EAAYxlC,OAASwlC,EAClCxuE,EAAM2sE,6BAA+B3sE,EAAM2sE,6BAA+B3sE,EAAMurC,eAAiB6gC,EAGnGpsE,EAAM4rC,OAASA,EACf5rC,EAAM8pC,aAAeA,EACrB9pC,EAAMurC,eAAiBA,EACvBvrC,EAAM0rC,aAAeA,EACrB1rC,EAAMwrC,aAAeA,EACrBxrC,EAAM2rC,WAAaA,KAIrBzY,EAAQC,QAAQ25C,EAAsBp2C,WAAW,SAAC12B,EAAOqzB,GAMvD,IALA,MACEA,EAAOC,QADDsY,EAAR,EAAQA,OAAQ9B,EAAhB,EAAgBA,aAAc4B,EAA9B,EAA8BA,aAAcH,EAA5C,EAA4CA,eAAgBa,EAA5D,EAA4DA,OAAQygC,EAApE,EAAoEA,kBAAmBlhC,EAAvF,EAAuFA,WAAYW,EAAnG,EAAmGA,QAE7FqgC,EAA+Bt5C,EAAOC,QAAQ8Y,OAAOtC,GAActX,WACnEi8C,EAAiC,GAE9BrtD,EAAI,EAAGA,GA1NK,EA0NoBA,IACvCqtD,EAAaz3C,KACX+U,YACEjC,EAAe1oB,EACfurD,GAAgCphC,EAAiB6gC,GAAiBhrD,IAKxE,OAAO,2BACFphB,GADL,IAEE4rC,SACA9B,eACA4B,eACAH,iBACAI,aACAghC,+BACAE,oBACAvgC,UACAF,OAAQswB,IAAM,GAAItwB,EAAQD,YAAcsiC,SAK5Cv7C,EAAQC,QAAQk6C,EAAW32C,WAAW,SAAC12B,EAAOqzB,GAC5CrzB,EAAMosC,OAASswB,IAAM,GAAI18D,EAAMosC,OAAX,eACjB/Y,EAAOC,QAAQ0V,MAAMvnC,WAAa4xB,EAAOC,aAK9CJ,EAAQC,QAAQo6C,EAAY72C,WAAW,SAAC12B,EAAOqzB,GAC7CrzB,EAAMosC,OAASswB,IAAM,GAAI18D,EAAMosC,OAAQ/Y,EAAOC,YAIhDJ,EAAQC,QAAQw6C,EAAap3C,SAAS,SAACv2B,GACrCA,EAAMwsE,mBAAoB,KAE5Bt5C,EAAQC,QAAQw6C,EAAa12C,UAAU,SAACj3B,GACtCA,EAAMwsE,mBAAoB,EAC1BxsE,EAAMssE,mBAAoB,KAE5Bp5C,EAAQC,QAAQw6C,EAAaj3C,WAAW,SAAC12B,EAAOqzB,GAC9C,MAA0BA,EAAOC,QAAzB3c,EAAR,EAAQA,QAASizB,EAAjB,EAAiBA,KAEjB5pC,EAAMwsE,mBAAoB,EAC1BxsE,EAAMssE,mBAAoB,EAC1BtsE,EAAM+nE,QAAQpxD,GAAWizB,QAMxB,EAQHgkC,EAAiBroC,QAPnBwoC,EADK,EACLA,kBAEAC,GAHK,EAELC,gBAFK,EAGLD,kBACAF,EAJK,EAILA,oBAEAI,GANK,EAKLL,oBALK,EAMLK,oBACAC,EAPK,EAOLA,0BAGaP,MAAf,S,2DC9Rec,IAXQ,WACrB,MAA2C7uE,mBAAS4zB,KAAKW,OAAzD,mBAAOu6C,EAAP,KAAoBC,EAApB,KAOA,MAAO,CAAED,cAAaE,oBANM1P,YAAiBwP,GAMFG,eAJpBjuE,uBAAY,WACjC+tE,EAAoBn7C,KAAKW,SACxB,CAACw6C,O,iUCRAG,EAAwC,SAC5CC,EACAC,GAGA,OAA6B,IAAzBA,EAAcvqD,OACTsqD,EAASruD,KAAI,SAACuuD,GACnB,MAAO,CACL74B,QAAS64B,EAAU74B,QACnBO,YAAas4B,EAAUt4B,YAAYn1C,WACnC20C,UAAW84B,EAAU94B,UACrBxK,OAAQsjC,EAAUtjC,OAClBpxB,GAAI00D,EAAU/4B,UAAU10C,WACxB0tE,YAAaD,EAAU54B,kBACvB84B,aAAc,GACdC,WAAY,GACZC,eAAgB,OAMCL,EAActuD,KAAI,SAAC4uD,EAAYrxC,GACpD,IAAMgxC,EAAYF,EAAS9wC,GAE3B,OAAIgxC,EAEGA,EAAUhtC,UAaRqtC,EAZE,CACLl5B,QAAS64B,EAAU74B,QACnBO,YAAas4B,EAAUt4B,YAAYn1C,WACnC20C,UAAW84B,EAAU94B,UACrBxK,OAAQsjC,EAAUtjC,OAClBpxB,GAAI+0D,EAAW/0D,GACf20D,YAAaI,EAAWJ,YACxBC,aAAcG,EAAWH,aACzBC,WAAYE,EAAWF,WACvBC,eAAgBC,EAAWD,gBAK1BC,MAKLC,EAAiB,uCAAG,4BAAAjxE,EAAA,+EAECksC,kBACrBqG,IACAnG,cAF6B,IAAD,8WAFR,cAEhBjsC,EAFgB,yBAoBfA,EAAS+wE,WApBM,uCAsBtBh0D,QAAQD,MAAR,MAtBsB,kBAuBf,IAvBe,yDAAH,qDAmCRk0D,EARO,uCAAG,WAAO13B,GAAP,qBAAAz5C,EAAA,6DACjBoxE,EAAkBz3B,YAAiBF,GADlB,SAEAL,YAAuBg4B,GAFvB,cAEjBX,EAFiB,gBAGKQ,IAHL,cAGjBP,EAHiB,OAIjBW,EAAab,EAAsCC,EAAUC,GAJ5C,kBAKhBW,GALgB,2CAAH,sD,SCxEhBC,EAAmC,SACvCC,EACAC,EACAC,GAGA,OAA6B,IAAzBD,EAAcrrD,OACTsrD,EAAgBrvD,KAAI,SAACuuD,GAC1B,IAAMe,EAAqBH,EAAa/xD,MAAK,SAACmyD,GAAD,OAAkBA,EAAa33B,UAAY22B,EAAU/4B,aAClG,MAAO,CACLE,QAAS64B,EAAU74B,QACnBzK,OAAQsjC,EAAUtjC,OAClBuK,UAAW+4B,EAAU/4B,UAAU10C,WAC/BgnC,QAASoQ,YAAoBo3B,EAAmBr3B,aAChDw2B,aAAa,GAAD,OAAKa,EAAmBr3B,YAAYl0B,OAAOjjB,YACvDq3C,QAASm3B,EAAmBr3B,gBAMXm3B,EAAcpvD,KAAI,SAAC4uD,EAAYrxC,GACpD,IAAMgxC,EAAYc,EAAgB9xC,GAElC,GAAIgxC,EAAW,CACb,IAAMe,EAAqBH,EAAa/xD,MAAK,SAACmyD,GAAD,OAAkBA,EAAa33B,UAAY22B,EAAU/4B,aAElG,OAAK+4B,EAAUhtC,UAURqtC,EATE,CACLl5B,QAAS64B,EAAU74B,QACnBzK,OAAQsjC,EAAUtjC,OAClBuK,UAAW+4B,EAAU/4B,UAAU10C,WAC/BgnC,QAASoQ,YAAoBo3B,EAAmBr3B,aAChDw2B,aAAcG,EAAWH,aACzBt2B,QAASm3B,EAAmBr3B,aAKlC,OAAO22B,MAKLY,EAAmB,uCAAG,WAAOx5D,GAAP,qBAAApY,EAAA,6DAEpB6xE,EAAY,CAChBz5D,UACA05D,UAAW,GACXjB,aAAc,GACdhjC,OAAQ,IANgB,kBAUD3B,kBACrBqG,IACAnG,cAF6B,MAAD,idAqB5B,CAAEh0B,QAASA,EAAQkK,gBA/BG,OAUlBniB,EAVkB,OAiClB4xE,EAAU5xE,EAASsnB,KAMvBA,EAHGsqD,EAGI,CACL35D,QAAS25D,EAAQ91D,GACjB61D,UAAWC,EAAQD,UACnBjB,aAAckB,EAAQlB,aACtBhjC,OAAQkkC,EAAQlkC,OAAOzrB,KAAI,SAACmQ,GAAW,IAAD,MACpC,MAAO,CACLqlB,UAAS,OAAErlB,QAAF,IAAEA,GAAF,UAAEA,EAAO+I,eAAT,aAAE,EAAgBrf,GAC3B67B,QAAO,OAAEvlB,QAAF,IAAEA,GAAF,UAAEA,EAAO+I,eAAT,aAAE,EAAgBwc,QACzB5N,QAAO,OAAE3X,QAAF,IAAEA,OAAF,EAAEA,EAAO2X,QAChB2mC,aAAY,OAAEt+C,QAAF,IAAEA,OAAF,EAAEA,EAAOs+C,aACrBxjC,OAAM,OAAE9a,QAAF,IAAEA,GAAF,UAAEA,EAAO+I,eAAT,aAAE,EAAgB+R,YAZvBwkC,EArCe,gDAuDxB30D,QAAQD,MAAR,MACAwK,EAAOoqD,EAxDiB,iCA2DnBpqD,GA3DmB,yDAAH,sDA2EVuqD,EAbS,uCAAG,WAAO55D,EAAiBqhC,GAAxB,6BAAAz5C,EAAA,6DACnBiyE,EAAwBt4B,YAAiBF,GADtB,SAEay4B,YAAkCD,EAAuB75D,GAFtE,cAEnB+5D,EAFmB,OAGnBC,EAAqBD,EAAwB5nD,QAAO,SAACgI,GAAD,OAAWA,EAAM8nB,YAAYl0B,OAAS,KAC1FksD,EAA0BD,EAAmBhwD,KAAI,SAACmQ,GAAD,OAAWA,EAAMynB,WAJ/C,SAMOZ,YAAuBi5B,GAN9B,cAMnBC,EANmB,iBAOGV,EAAoBx5D,GAPvB,eAOnBs4D,EAPmB,OAQnB6B,EAAkBjB,EAAiCc,EAAoB1B,EAAc7iC,OAAQykC,GAC7FE,EATmB,2BASgB9B,GAThB,IAS+B7iC,OAAQ0kC,IATvC,kBAUlBC,GAVkB,4CAAH,wDCpGlB9xE,EAA6B,CACjC+4C,iBAAkB,KAClBg5B,iBAAiB,EACjB/4B,8BAA+B,KAC/Bg5B,aAAc,CACZ/uC,WAAW,EACXiU,UAAW,KACXvK,OAAQzrB,IAAc2N,QACtBsoB,UAAW,GACXC,QAAS,GACTC,kBAAmB,GACnBC,gBAAiB,GACjBC,YAAa,GACbC,cAAe,GACfC,aAAc,GACdC,sBAAuB,GACvBC,YAAa,KACbC,eAAgB,GAChBC,uBAAwB,GACxBC,iBAAkB,GAClB6B,YAAa,CACX1W,WAAW,EACX4W,QAAS,KAGbo4B,cAAe,KACfC,gBAAiB,CAAEx6D,QAAS,GAAI05D,UAAW,GAAIjB,aAAc,GAAIhjC,OAAQ,KAG9DglC,EAAsB1sC,YACjC,8BADiD,uCAEjD,+BAAAnmC,EAAA,6DAASy5C,EAAT,EAASA,iBAAT,SAC4BR,YAAaQ,GADzC,cACQq5B,EADR,yBAESA,GAFT,2CAFiD,uDAQtCC,EAAwB5sC,YAAoC,gCAApB,sBAAqD,4BAAAnmC,EAAA,sEACvEw5C,cADuE,cAClGw5B,EADkG,yBAEjGA,GAFiG,4CAK7FC,EAA+B9sC,YAG1C,uCAH0D,uCAGlB,uCAAAnmC,EAAA,6DAASoY,EAAT,EAASA,QAASqhC,EAAlB,EAAkBA,iBAAlB,SACTu4B,EAAmB55D,EAASqhC,GADnB,UAClCy5B,EADkC,OAElCC,EAFkC,UAEAD,EAAiBrlC,cAFjB,aAEA,EAAyBruB,MAAK,SAAC+S,GAAD,OAAWA,EAAMqlB,YAAc6B,MAC/FY,EAHkC,OAGpB84B,QAHoB,IAGpBA,OAHoB,EAGpBA,EAAiC54B,UAGV,IAAvBF,EAAYl0B,OANQ,yCAO/B,CAAEk0B,YAAa,KAAM+4B,cAAeF,IAPL,gCAUjC,CAAE74B,cAAa+4B,cAAeF,IAVG,2CAHkB,uDAgB/CG,EAAuBltC,YAClC,+BADkD,uCAElD,+BAAAnmC,EAAA,6DAASy5C,EAAT,EAASA,iBAAT,SAC0B03B,EAAiB13B,GAD3C,cACQy3B,EADR,yBAESA,GAFT,2CAFkD,uDAQvCoC,EAAqBntC,YAGhC,6BAHgD,uCAGlB,iCAAAnmC,EAAA,6DAASoY,EAAT,EAASA,QAASqhC,EAAlB,EAAkBA,iBAAlB,SACFu4B,EAAmB55D,EAASqhC,GAD1B,cACxB25B,EADwB,yBAEvBA,GAFuB,2CAHkB,uDAQrCG,EAA4BptC,YAAgB,oEAEvD,6BAAAnmC,EAAA,6DAASyyE,EAAT,EAASA,gBAAT,kBACS,CAAEA,oBADX,2CAFuD,uDAO5Ce,EAAe/sC,YAAY,CACtCjkB,KAAM,UACN9hB,eACAgmC,SAAU,CACR+sC,qBAAsB,SAAChyE,EAAOqzB,GACpBA,EAAOC,UAGnBgS,cAAe,SAACpS,GACdA,EAAQC,QAAQi+C,EAAoB16C,WAAW,SAAC12B,EAAOqzB,GACrDrzB,EAAMixE,aAAN,2BAA0BjxE,EAAMixE,cAAiB59C,EAAOC,YAE1DJ,EAAQC,QAAQm+C,EAAsB56C,WAAW,SAAC12B,EAAOqzB,GACvDrzB,EAAMg4C,iBAAmB3kB,EAAOC,QAAQ0kB,iBACxCh4C,EAAMi4C,8BAAgC5kB,EAAOC,QAAQ2kB,iCAEvD/kB,EAAQC,QACNq+C,EAA6B96C,WAC7B,SAAC12B,EAAOqzB,GACNrzB,EAAMixE,aAAar4B,YAAY1W,WAAY,EAC3CliC,EAAMixE,aAAar4B,YAAYE,QAAUzlB,EAAOC,QAAQslB,YACxD54C,EAAMmxE,gBAAkB99C,EAAOC,QAAQq+C,iBAG3Cz+C,EAAQC,QAAQy+C,EAAqBl7C,WAAW,SAAC12B,EAAOqzB,GACtDrzB,EAAMkxE,cAAgB79C,EAAOC,WAE/BJ,EAAQC,QAAQ0+C,EAAmBn7C,WAAW,SAAC12B,EAAOqzB,GACpDrzB,EAAMmxE,gBAAkB99C,EAAOC,WAEjCJ,EAAQC,QACN2+C,EAA0Bp7C,WAC1B,SAAC12B,EAAOqzB,GACNrzB,EAAMgxE,gBAAkB39C,EAAOC,QAAQ09C,sBAOPe,EAAaxsC,QAAtCysC,qBAEAD,MAAf,S,qKCtHaE,EAAkBvtC,YAC7B,+BAD6C,uCAE7C,WAAO/tB,GAAP,iBAAApY,EAAA,6DAEQ2zE,EAAoBhxE,OAAOC,KAAK4gD,KAAYphC,IAAxB,iBAAAzf,OAAA,IAAAA,CAAA,UAA4B,WAAOixE,GAAP,+BAAA5zE,EAAA,6DACnC6zE,EAAerwB,IAAWowB,GAAnCnvE,QACFA,EAAUD,YAAWqvE,GACrB7lD,EAAW3S,YAAkB5W,GAE7BqvE,EAL8C,+BAAA9zE,EAAA,MAK1B,WAAO2/B,GAAP,mBAAA3/B,EAAA,+EAEoBguB,EAAS+lD,oBAAoB37D,EAASunB,GAF1D,cAEhBq0C,EAFgB,OAGhB10B,EAAU00B,EAAUtrE,WAHJ,SAKEw3C,YAAgBz7C,EAAS66C,GAL3B,cAKhB20B,EALgB,yBAMf,CAAC30B,EAAS20B,EAAUhwB,aANL,yCAQtB/mC,QAAQD,MAAM,oBAAd,MARsB,kBASf,MATe,0DAL0B,+DAkBpB+Q,EAASkmD,UAAU97D,GAlBC,UAkB9C+7D,EAlB8C,OAqBlC,KAFZD,EAAYC,EAAkBzrE,YAnBgB,0CAsB3C,IAtB2C,QA4BpD,IAHM0rE,EAAuB,GAGpBvxD,EAAI,EAAGA,EAAIqxD,EAAWrxD,IAC7BuxD,EAAqB37C,KAAKq7C,EAAkBjxD,IA7BM,iBAgC9Bme,QAAQC,IAAImzC,GAhCkB,eAgC9CC,EAhC8C,yBAiC7CA,GAjC6C,4CAA5B,uDAF5B,SAsC8BrzC,QAAQC,IAAI0yC,GAtC1C,cAsCQW,EAtCR,yBAwCSA,EAAcC,QAxCvB,2CAF6C,uDA8ClCC,EAAoB/tC,YAAY,CAC3CjkB,KAAM,eACN9hB,aAzDsC,CACtCigD,eAAe,EACfhd,WAAW,EACXtjC,KAAM,IAuDNqmC,SAAU,GACVK,cAAe,SAACpS,GACdA,EAAQC,QAAQ8+C,EAAgB17C,SAAS,SAACv2B,GACxCA,EAAMkiC,WAAY,KAEpBhP,EAAQC,QAAQ8+C,EAAgBv7C,WAAW,SAAC12B,EAAOqzB,GACjDrzB,EAAMkiC,WAAY,EAClBliC,EAAMk/C,eAAgB,EACtBl/C,EAAMpB,KAAOy0B,EAAOC,QAAQtQ,QAAO,SAAC0c,EAAOszC,GACzC,IAAKA,EACH,OAAOtzC,EAGT,MAA8BszC,EAA9B,mBAAOn1B,EAAP,KAAgB2E,EAAhB,KAEA,OAAO,2BACF9iB,GADL,kBAEG8iB,EAAa9iB,EAAM8iB,GAAN,sBAAwB9iB,EAAM8iB,IAA9B,CAA2C3E,IAAW,CAACA,OAEtE,UAKMk1B,MAAf,S,gFCtFMrxD,EAAUxf,YAAO87D,IAAP97D,CAAH,kGAcE+wE,IARc,WAC3B,OACE,cAACvxD,EAAD,UACE,cAAC,KAAD,Q,6BCdN,IACMwxD,EAAkB,KAClBC,EAAiB,MACjBC,EAAmB,QACnBC,EAAkB,SAgDTC,IAzCQ,SAACC,GACtB,IAAIC,EAAQ3iD,KAAK4iD,IAAIF,GACfG,EAAW,CACfC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,QAAS,EACTR,QAAS,GA8BX,OA3BIC,GAASH,IACXK,EAASC,MAAQ9iD,KAAKmjD,MAAMR,EAAQH,GACpCG,GAASE,EAASC,MAAQN,GAGxBG,GAASJ,IACXM,EAASE,OAAS/iD,KAAKmjD,MAAMR,EAAQJ,GACrCI,GAASE,EAASE,OAASR,GAGzBI,GAASL,IACXO,EAASG,KAAOhjD,KAAKmjD,MAAMR,EAAQL,GACnCK,GAASE,EAASG,KAAOV,GAGvBK,GAASN,IACXQ,EAASI,MAAQjjD,KAAKmjD,MAAMR,EAAQN,GACpCM,GAASE,EAASI,MAAQZ,GAGxBM,GA1CoB,KA2CtBE,EAASK,QAAUljD,KAAKmjD,MAAMR,EA3CR,IA4CtBA,GA5CsB,GA4CbE,EAASK,SAGpBL,EAASH,QAAUC,EAEZE,I,0SClBHO,EAAiB/xE,YAAOQ,IAAPR,CAAH,6CASb,SAASgyE,EAAT,GAAkF,IAAnDnsD,EAAkD,EAAlDA,KAAkD,IAA5CokD,qBAA4C,SAC9Ex1D,EAAY1R,cAAZ0R,QAEA/U,EAAMC,cAAND,EAEFigB,EAAYsqD,EAAgBpkD,EAAKC,OAASgC,YAAejC,EAAKC,QAC9DlG,EAAYqqD,EAAgBpkD,EAAKE,OAAS+B,YAAejC,EAAKE,QAEpE,EAAgCpoB,oBAAS,GAAzC,mBAAOs0E,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBjkC,YAAe,OAACz5B,QAAD,IAACA,SAAWjX,EAAWqoB,EAAKwrB,gBAC7D+gC,EAAkBrY,YAAel0C,EAAKwrB,gBAEtC+zB,EACF+M,GAAqBC,GAAmBp+D,IAAKq+D,mBAAmBD,EAAgB99D,IAAK69D,EAAgB79D,KACnG,IAAIP,IAAQo+D,EAAgB79D,IAAK89D,EAAgB99D,UACjD9W,EAEN,EACIqoB,GACAusD,GACAD,GAEFn+D,IAAKq+D,mBAAmBD,EAAgB99D,IAAK69D,EAAgB79D,KACzD,CACEuR,EAAKysD,kBAAkBzsD,EAAKC,OAAQssD,EAAiBD,GAAiB,GACtEtsD,EAAKysD,kBAAkBzsD,EAAKE,OAAQqsD,EAAiBD,GAAiB,IAExE,MAAC30E,OAAWA,GAVlB,mBAAO+0E,EAAP,KAAwBC,EAAxB,KAYA,OACE,mCACGL,GAAmBn+D,IAAK8uD,YAAYqP,EAAgB79D,IAAKN,IAAKC,OAAO,IACpE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYtT,IAAI,OAAhB,UACE,cAACoxE,EAAD,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAMt3D,MAAM,YAAYooC,MAAI,EAA5B,SACGnjD,EAAE,kCAIT,eAACqyE,EAAD,CAAgBl3D,QAAS,kBAAMq3D,GAAaD,IAA5C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAoBtyD,UAAWA,EAAWC,UAAWA,EAAWH,QAAM,EAACI,KAAM,KAC7E,eAAC,KAAD,CAAMijC,OAAK,EAACroC,MAAM,aAAlB,UACGkF,EAAUxY,OADb,IACsByY,EAAUzY,OADhC,YAIF,cAAC,IAAD,UACE,cAAC,KAAD,UAAOgrE,EAAkBA,EAAgB3sC,cAAc,GAAK,WAGhE,eAAC,IAAD,CAAY7kC,IAAI,MAAhB,UACE,eAACoxE,EAAD,WACE,eAAC,KAAD,CAAMt3D,MAAM,aAAaqoC,OAAK,EAA9B,UACGpjD,EAAE,iBADL,OAGA,cAAC,KAAD,UAAO0lE,EAAmB,UAAMA,EAAoBlgE,QAAQ,GAAlC,KAA0C,SAEtE,eAAC6sE,EAAD,WACE,eAAC,KAAD,CAAMt3D,MAAM,aAAaqoC,OAAK,EAA9B,UACGpjD,EAAE,iBAAkB,CAAE+jD,MAAO9jC,EAAUxY,SAD1C,OAGCorE,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAM7uB,GAAG,MAAT,gBAAgB6uB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB/sC,cAAc,OAGjD,OAGJ,eAACusC,EAAD,WACE,eAAC,KAAD,CAAMt3D,MAAM,aAAaqoC,OAAK,EAA9B,UACGpjD,EAAE,iBAAkB,CAAE+jD,MAAO7jC,EAAUzY,SAD1C,OAGCqrE,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAM9uB,GAAG,MAAT,gBAAgB8uB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBhtC,cAAc,OAGjD,iBAQZ,cAAC,IAAD,UACE,eAAC,KAAD,CAAMod,SAAS,OAAO7iC,MAAO,CAAEgjC,UAAW,UAA1C,UACE,sBAAM0vB,KAAK,MAAM,aAAW,eAA5B,0BAEQ,IACP/yE,EACC,qNASC,SAASgzE,EAAT,GAAkE,IAAtC7sD,EAAqC,EAArCA,KAAS/K,EAA4B,iBACtErG,EAAY1R,cAAZ0R,QAEFkL,EAAYmI,YAAejC,EAAKC,QAChClG,EAAYkI,YAAejC,EAAKE,QAEtC,EAAgCpoB,oBAAS,GAAzC,mBAAOs0E,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBjkC,YAAe,OAACz5B,QAAD,IAACA,SAAWjX,EAAWqoB,EAAKwrB,gBAC7D+gC,EAAkBrY,YAAel0C,EAAKwrB,gBAEtC+zB,EACF+M,GAAqBC,GAAmBp+D,IAAKq+D,mBAAmBD,EAAgB99D,IAAK69D,EAAgB79D,KACnG,IAAIP,IAAQo+D,EAAgB79D,IAAK89D,EAAgB99D,UACjD9W,EAEN,EACIqoB,GACAusD,GACAD,GAEFn+D,IAAKq+D,mBAAmBD,EAAgB99D,IAAK69D,EAAgB79D,KACzD,CACEuR,EAAKysD,kBAAkBzsD,EAAKC,OAAQssD,EAAiBD,GAAiB,GACtEtsD,EAAKysD,kBAAkBzsD,EAAKE,OAAQqsD,EAAiBD,GAAiB,IAExE,MAAC30E,OAAWA,GAVlB,mBAAO+0E,EAAP,KAAwBC,EAAxB,KAYA,OACE,eAAC,IAAD,yBAAMzyD,MAAO,CAAExf,aAAc,SAAcua,GAA3C,cACE,eAAC,IAAD,CAAMkpC,eAAe,gBAAgByuB,KAAK,SAAS53D,QAAS,kBAAMq3D,GAAaD,IAAWprD,EAAE,OAA5F,UACE,eAAC,IAAD,CAAM8oC,cAAc,SAApB,UACE,eAAC,IAAD,CAAMd,WAAW,SAASvB,GAAG,MAA7B,UACE,cAAC,IAAD,CAAoB3tC,UAAWA,EAAWC,UAAWA,EAAWC,KAAM,KACtE,cAAC,KAAD,CAAMgjC,MAAI,EAACa,GAAG,MAAd,SACI/jC,GAAcC,EAAf,UAAqDD,EAAUxY,OAA/D,YAAyEyY,EAAUzY,QAAxD,cAAC,IAAD,2BAGhC,cAAC,KAAD,CAAMy7C,SAAS,OAAOnoC,MAAM,aAA5B,gBACG03D,QADH,IACGA,OADH,EACGA,EAAiB3sC,cAAc,QAGnCysC,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,OAGjCA,GACC,eAAC,IAAD,CAAYtxE,IAAI,MAAMof,MAAO,CAAE1f,QAAS,QAAxC,UACE,eAAC0xE,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAclyD,KAAK,OAAOtK,SAAUoK,IACpC,eAAC,KAAD,CAAMlF,MAAM,aAAaipC,GAAG,MAA5B,oBACU/jC,EAAUxY,aAGrBorE,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAM7uB,GAAG,MAAT,gBAAgB6uB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB/sC,cAAc,OAGjD,OAIJ,eAACusC,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAclyD,KAAK,OAAOtK,SAAUqK,IACpC,eAAC,KAAD,CAAMnF,MAAM,aAAaipC,GAAG,MAA5B,oBACU9jC,EAAUzY,aAGrBqrE,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAM9uB,GAAG,MAAT,gBAAgB8uB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBhtC,cAAc,OAGjD,OAIJ,eAACusC,EAAD,WACE,cAAC,KAAD,CAAMt3D,MAAM,aAAZ,2BACA,cAAC,KAAD,UACG2qD,EAAmB,UACsB,SAAnCA,EAAoBlgE,QAAQ,GAAgB,QAAUkgE,EAAoBlgE,QAAQ,GADrE,KAEhB,SAIPitE,GAAmBn+D,IAAK8uD,YAAYqP,EAAgB79D,IAAK6B,MACxD,eAAC,IAAD,CAAMw5C,cAAc,SAApB,UACE,cAAC,IAAD,CACEc,GAAIC,IACJ9e,GAAE,kBAAatuB,YAAW3D,GAAxB,YAAsC2D,YAAW1D,IACnD2jC,QAAQ,UACRrjD,MAAM,OACNotD,GAAG,MALL,oBASA,cAAC,IAAD,CACEmD,GAAIC,IACJ9e,GAAE,eAAUtuB,YAAW3D,GAArB,YAAmC2D,YAAW1D,IAChD2jC,QAAQ,OACRiG,UAAW,cAAC,IAAD,CAAS/uC,MAAM,YAC1Bva,MAAM,OALR,+C,gSC/ODyyE,EAAY,uCAAG,8CAAAt2E,EAAA,6DAAOm9B,EAAP,+BAAe,EAAG8O,EAAlB,+BAAyB,EAAGxqC,EAA5B,+BAAoCsvB,IAAcwlD,OAAlD,SACwBrqC,IAChDwG,IACAtG,cAFwD,IAAD,whBA2BvD,CAAEjP,QAAO8O,OAAMxqC,UA5BS,cACpBtB,EADoB,yBA8BnBA,EAASq2E,WA9BU,2CAAH,qDAiCZC,EAAW,uCAAG,WAAOx6D,GAAP,eAAAjc,EAAA,sEACsBksC,IAC7CwG,IACAtG,cAFqD,IAAD,gVAqBpD,CAAEnwB,OAtBqB,cACnB9b,EADmB,yBAwBlBA,EAASu2E,UAxBS,2CAAH,sDA2BXC,EAAQ,uCAAG,WAAOx5C,EAAe8O,EAAcD,GAApC,eAAAhsC,EAAA,sEACoBksC,IACxCwG,IACAtG,cAFgD,IAAD,kYAoB/C,CAAEjP,QAAO8O,OAAMD,UArBK,cAChB7rC,EADgB,yBAuBfA,EAASy2E,OAvBM,2CAAH,0DA0BRC,EAA2B,uCAAG,WACzCD,EACAt8C,GAFyC,qBAAAt6B,EAAA,8DAIrBs6B,EAJqB,qCAILrzB,IAAkBg8C,iBAJb,iCAInC52B,EAJmC,KAMnCyqD,EAAgBF,EAAMx0D,KAAI,SAAC20D,GAAD,cAAW,CACzCtyE,QAASsyE,EAAKC,MACdC,iBAAgB,UAAEF,EAAKG,gBAAP,aAAE,EAAeD,iBACjCE,MAAK,UAAEJ,EAAKG,gBAAP,aAAE,EAAeE,gBATiB,SAWlBn3E,MAAM,GAAD,OAAIuyC,IAAJ,WAAkC,CAC5D7P,OAAQ,OACR00C,QAAS,CACP,eAAgB,oBAElBC,KAAM3qD,KAAKC,UAAU,CACnB0N,MAAOjO,EACPuqD,MAAOE,MAlB8B,WAWnC32E,EAXmC,QAsB3Bw/C,GAtB2B,uBAuBjC,IAAIl8C,MAAMtD,EAASo3E,YAvBc,yBA0BtBp3E,EAASC,OA1Ba,eA0BnCC,EA1BmC,yBA2BlCu2E,EAAMnyD,QAAO,SAAC0c,EAAO41C,GAAU,IAAD,EACnC,OAAO,2BACF51C,GADL,kBAEG41C,EAAK96D,IAAsD,KAAjD,UAAA5b,EAAKA,KAAK02E,EAAKC,MAAM10D,sBAArB,eAAqC0oD,aAEjD,KAhCsC,4CAAH,wDAmC3BwM,EAAW,uCAAG,WAAOC,EAAoBn9C,GAA3B,2BAAAt6B,EAAA,6DAA2C03E,EAA3C,+BAA2D,IAA3D,kBAElB,IAAI12C,SAAQ,SAAC22C,EAASC,GAC3B,IAAIhB,EAAgB,GAEdiB,EAAc,uCAAG,WAAOC,GAAP,eAAA93E,EAAA,+EAEK22E,EAASe,EAAeI,EAAS,CAAEpB,SAAUe,IAFlD,OAIM,KAFnBM,EAFa,QAIL5xD,OACZwxD,EAAQf,IAERA,EAAK,sBAAOA,GAAP,YAAiBmB,IACtBF,EAAeC,EAAUJ,IARR,gDAWnBE,EAAO,EAAD,IAXa,yDAAH,sDAepBC,EAAe,OApBQ,2CAAH,wDCzHlBn3E,EAA4B,CAChCs3E,sBAAuBhnD,IAAyB88C,QAChD0I,UAAW,GACXyB,kBAAmBjnD,IAAyB88C,QAC5C8I,MAAO,IAIIsB,EAAiB/xC,YAC5B,wBAD4C,uCAE5C,uCAAAnmC,EAAA,6DAASm9B,EAAT,EAASA,MAAT,IAAgB8O,YAAhB,MAAuB,EAAvB,MAA0BxqC,aAA1B,MAAkCsvB,IAAcwlD,OAAhD,WACyBD,EAAan5C,EAAO8O,EAAMxqC,GADnD,cACQtB,EADR,yBAESA,GAFT,2CAF4C,uDAQjCg4E,EAAgBhyC,YAAmC,uBAAnB,uCAA2C,WAAOsxC,GAAP,eAAAz3E,EAAA,sEAC/Dy2E,EAAYgB,GADmD,cAChFt3E,EADgF,yBAE/EA,GAF+E,2CAA3C,uDAKhCi4E,EAAajyC,YAGxB,oBAHwC,uCAGnB,iCAAAnmC,EAAA,6DAASy3E,EAAT,EAASA,WAAYn9C,EAArB,EAAqBA,MAArB,SACEk9C,EAAYC,EAAYn9C,GAD1B,cACfn6B,EADe,yBAEd,CAAEy2E,MAAOz2E,EAAUs3E,eAFL,2CAHmB,uDAQ7BY,EAAclyC,YAIzB,qBAJyC,uCAInB,yCAAAnmC,EAAA,6DAASy3E,EAAT,EAASA,WAAYa,EAArB,EAAqBA,SAAcn0C,EAAnC,EAAmCA,SACnD1iC,EAAQ0iC,IACRo0C,EAAgB92E,EAAM25B,OAAOw7C,MAAMa,GAFnB,SAGCZ,EAA4B0B,EAAen7C,OAAOk7C,IAHnD,cAGhBn4E,EAHgB,yBAIf,CAAEkuB,QAASluB,EAAUs3E,eAJN,2CAJmB,yDAW9Be,EAAc/xC,YAAY,CACrCjkB,KAAM,SACN9hB,eACAgmC,SAAU,GACVK,cAAe,SAACpS,GAEdA,EAAQC,QAAQyjD,EAAYlgD,WAAW,SAAC12B,EAAOqzB,GAC7C,MAAgCA,EAAOC,QAA/B0iD,EAAR,EAAQA,WAAYppD,EAApB,EAAoBA,QAEhB5sB,EAAMm1E,MAAMa,KACdh2E,EAAMm1E,MAAMa,GAAch2E,EAAMm1E,MAAMa,GAAYr1D,KAAI,SAAC20D,GACrD,OAAO,2BACFA,GADL,IAEE0B,UAA+B,IAArBpqD,EAAQ0oD,EAAK96D,aAO/B0Y,EAAQC,QAAQsjD,EAAelgD,SAAS,SAACv2B,GACvCA,EAAMu2E,sBAAwBhnD,IAAyB2wB,WAEzDhtB,EAAQC,QAAQsjD,EAAe//C,WAAW,SAAC12B,EAAOqzB,GAChD,IAAM0hD,EAAY1hD,EAAOC,QAAQtQ,QAAO,SAAC0c,EAAOu1C,GAC9C,OAAO,2BACFv1C,GADL,kBAEGu1C,EAASz6D,GAAKy6D,MAEhB,IAEHj1E,EAAM+0E,UAAYrY,gBAAM,GAAI18D,EAAM+0E,UAAWA,GAC7C/0E,EAAMu2E,sBAAwBhnD,IAAyB0nD,QAIzD/jD,EAAQC,QAAQujD,EAAcngD,SAAS,SAACv2B,GACtCA,EAAMu2E,sBAAwBhnD,IAAyB2wB,WAEzDhtB,EAAQC,QAAQujD,EAAchgD,WAAW,SAAC12B,EAAOqzB,GAC/CrzB,EAAM+0E,UAAU1hD,EAAOC,QAAQ9Y,IAAM6Y,EAAOC,QAC5CtzB,EAAMu2E,sBAAwBhnD,IAAyB0nD,QAIzD/jD,EAAQC,QAAQwjD,EAAWpgD,SAAS,SAACv2B,GACnCA,EAAMw2E,kBAAoBjnD,IAAyB2wB,WAErDhtB,EAAQC,QAAQwjD,EAAWjgD,WAAW,SAAC12B,EAAOqzB,GAC5C,MAA8BA,EAAOC,QAA7B6hD,EAAR,EAAQA,MAAOa,EAAf,EAAeA,WAEfh2E,EAAMm1E,MAAN,2BACKn1E,EAAMm1E,OADX,kBAEGa,EAAab,IAEhBn1E,EAAMw2E,kBAAoBjnD,IAAyB0nD,WAK1CF,MAAf,S,0+TCzGA,0GAYatzC,EAAa,SACxBH,EACA4zC,EACAr4C,EACA8E,GAEA,IAAMwzC,EAA0B,IAAInxE,IAAUkxE,GAAkBvwE,MAAMg9B,GAAeh9B,MAAMq0B,KACrFo8C,EAA0B,IAAIpxE,IAAUs9B,GAAmB38B,MAAMk4B,GACjElO,EAAMwmD,EAAwBv0E,IAAIw0E,GAAyBzwE,MAAM,KACvE,OAAOgqB,EAAIuX,UAAYvX,EAAI0mD,WAAa,KAAO1mD,EAAI1pB,YAUxCqwE,EAAa,SACxBp9B,EACAujB,EACA8Z,EACAC,GACsD,IAAD,EAE/CC,EAD6Bx8C,IAAat0B,MAAMuzC,GACJvzC,MAAM82D,GAAc76D,IAAI20E,GAAkB5wE,MAAM,KAC9F+wE,EAAyB,KAK7B,OAJKD,EAAevvC,SAAWuvC,EAAeJ,aAC5CK,EAAyBD,EAAexwE,YAGnC,CAAEwwE,eAAgBC,EAAwBC,aAD/B,UAAGC,EAAM,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAarU,4BAAvB,QAA+C,K,8JCtC7DltB,EAAkB77B,cAEXy9D,EAA4B,SAACC,GACxC,kBAAmDA,EAAnD,GAAOC,EAAP,KAAkBC,EAAlB,KAAiCC,EAAjC,KAEA,OAAa,OAATF,QAAS,IAATA,OAAA,EAAAA,EAAWrzD,QAAS,EACfqzD,EAAUp3D,KAAI,SAACu3D,EAAUh6C,GAC9B,MAAO,CACL1jB,GAAI09D,EAASz2E,WACb6F,OAAQ0wE,EAAc95C,GAAOz8B,WAC7BmqC,OAAQqsC,EAAe/5C,OAItB,IAGIi6C,EAAwB,uCAAG,WACtCxhE,EACAw/B,EACAwkB,EACAyd,GAJsC,eAAA75E,EAAA,+EAOjB03C,EAAgBkiC,yBAAyBxhE,EAASw/B,EAAWwkB,EAAQyd,GAPpD,cAO9Bx5E,EAP8B,yBAQ7Bi5E,EAA0Bj5E,IARG,uCAUpC6c,QAAQD,MAAM,2BAAd,MAVoC,kBAW7B,MAX6B,yDAAH,4DAexB68D,EAA2B,uCAAG,WAAO1hE,EAAiBw/B,GAAxB,qBAAA53C,EAAA,sDACrCo8D,EAAS,EACT2d,EAAc9zB,IACZ+zB,EAAa,GAHsB,UAKlCD,IAAgB9zB,IALkB,iCAOhB2zB,EAAyBxhE,EAASw/B,EAAWwkB,EAAQnW,KAPrC,OAOjC9lD,EAPiC,OAQvCi8D,GAAUnW,IACV8zB,EAAc55E,EAASgmB,OACvB6zD,EAAWvhD,KAAX,MAAAuhD,EAAU,YAAS75E,IAVoB,gDAalC65E,GAbkC,4CAAH,wDAgB3B9H,EAAiC,uCAAG,WAC/C+H,EACA7hE,GAF+C,qBAAApY,EAAA,sDAIzCk6E,EAA2B,GACxBr3D,EAAI,EALkC,YAK/BA,EAAIo3D,EAAW9zD,QALgB,wBAMvC6zB,EAAUigC,EAAWp3D,GANkB,SAQfi3D,EAA4B1hE,EAAS4hC,GARtB,OAQvCmgC,EARuC,OAS7CD,EAAyBzhD,KAAK,CAC5BuhB,UACAK,YAAa8/B,IAX8B,OAKRt3D,GAAK,EALG,gDAcxCq3D,GAdwC,4CAAH,yD,8BCrD9C,aAGM1Q,EAAU4Q,cAED5Q,O,yLCUF6Q,EAA0B,uCAAG,WAAOjiE,GAAP,iBAAApY,EAAA,+EAEfksC,kBACrBoG,IACAlG,cAF6B,IAAD,wPAa5B,CACEh0B,QAASA,EAAQkK,gBAhBiB,uBAE9BmF,EAF8B,EAE9BA,KAF8B,kBAoB/BA,EAAK+3B,QApB0B,yDAsB/B,MAtB+B,yDAAH,sDA6B1B86B,EAAe,uCAAG,WAAOliE,GAAP,eAAApY,EAAA,sEACKq6E,EAA2BjiE,GADhC,UACvBmiE,EADuB,gDAIpB,IAJoB,gCAOtBA,EAAoB91D,QAAO,SAAC0c,EAAOq5C,GACxC,IAAKld,IAAYn7D,IAAIq4E,EAAUtY,YAC7B,OAAO/gC,EAGT,IAAMgnC,EAAe7K,IAAYz7D,IAAI24E,EAAUtY,YAE/C,MAAM,GAAN,mBACK/gC,GADL,CAEE,CACEllB,GAAIu+D,EAAUtY,WACdnrD,KAAMoxD,EAAapxD,KACnBtS,QAAS+1E,EAAUv+D,GACnB6rC,MAAOyf,YAAoBY,GAC3BtkB,YAAa2jB,YAA0BW,GACvC9K,MAAO8K,EAAa9K,MACpB7d,OAAQpiB,OAAOo9C,EAAUh7B,aAG5B,KA1B0B,2CAAH,sDCpCfi7B,EAAmBh0C,YAAY,CAC1CjkB,KAAM,eACN9hB,aANqC,CACrCL,KAAM,IAMNqmC,SAAU,CACRg0C,eAAgB,SAACj5E,EAAOqzB,GACtBrzB,EAAMpB,KAAKo4B,KAAK3D,EAAOC,UAEzB4lD,gBAAiB,SAACl5E,EAAOqzB,GACvBrzB,EAAMpB,KAAN,sBAAiBoB,EAAMpB,MAAvB,YAAgCy0B,EAAOC,WAEzC6lD,gBAAiB,SAACn5E,EAAOqzB,GACvBrzB,EAAMpB,KAAOy0B,EAAOC,SAEtB8lD,kBAAmB,SAACp5E,GAClBA,EAAMpB,KAAO,OAMZ,EAAgFo6E,EAAiBzzC,QAAzF0zC,EAAR,EAAQA,eAAiCE,GAAzC,EAAwBD,gBAAxB,EAAyCC,iBAGnCE,GAHN,EAA0DD,kBAGhC,SAACziE,GAAD,8CAAqB,WAAOiP,GAAP,eAAArnB,EAAA,+EAEvBs6E,EAAgBliE,GAFO,OAE5CgiB,EAF4C,OAGlD/S,EAASuzD,EAAgBxgD,IAHyB,gDAKlDld,QAAQD,MAAR,MALkD,yDAArB,wDASlBw9D,MAAf,S,+JCnCMM,EAAQp3E,YAAOC,IAAPD,CAAH,gDACK,gBAAGkvC,EAAH,EAAGA,MAAH,SAAUI,YAA+BJ,EAAMG,OAAOquB,UAAUC,aAG1E0Z,EAAQr3E,YAAOs3D,IAAPt3D,CAAH,2EAWIs3E,EANuC,SAAC,GAAD,IAAGhoC,EAAH,EAAGA,WAAY5xC,EAAf,EAAeA,SAAaod,EAA5B,wBACpD,cAACs8D,EAAD,yBAAO9nC,WAAYA,GAAgBx0B,GAAnC,aACE,cAACu8D,EAAD,UAAQ35E,S,ooDCXG68C,IAFO,SAACrP,GAAD,OAAiBA,GAHN,KAGyCA,GAF3C,M,oDCCzBqsC,E,KAAav3E,EAAOU,IAAV,4NAaD62E,O,gGCXTC,EAAiBx3E,IAAOU,IAAV,8RAOJ,qBAAGwuC,MAAkBqoB,QAAQC,SACvB,qBAAGtoB,MAAkBG,OAAOooC,kBAElC,qBAAGvoC,MAAkBG,OAAO2mB,SAItC0hB,EAAwB13E,IAAOU,IAAV,wTAKX,qBAAGwuC,MAAkBG,OAAO2mB,SAC/B,qBAAG9mB,MAAkByoC,SAAS/nC,YAOvC,qBAAGV,MAAkBksB,aAAaxe,MAKhCg7B,EAAoB53E,IAAOU,IAAV,4VAEZ,qBAAGR,SAEE,qBAAGgvC,MAAkBG,OAAO2mB,SAMxC,qBAAG9mB,MAAkBksB,aAAaxe,MAIlC,SAAC9hC,GAAD,OACAA,EAAM+8D,QACNC,YADA,+XAEIN,GAC2B,qBAAGtoC,MAAkBG,OAAOooC,kBACzC,qBAAGvoC,MAAkBrL,QAAQk0C,YAI3CL,GAIoB,qBAAGxoC,MAAkBG,OAAOooC,kBAGlC,qBAAGvoC,MAAkBrL,QAAQk0C,gBAY7CC,EAAeh4E,IAAO8+D,GAAV,qGAIL,qBAAG5vB,MAAkByoC,SAAS/nC,YAGrCqoC,EAAWj4E,IAAOk4E,GAAV,+GAII,qBAAGhpC,MAAkBG,OAAOooC,kBA0E/BU,IA5DsC,SAAC,GAA2B,IAAzB5yE,EAAwB,EAAxBA,QAASmoD,EAAe,EAAfA,SACzD0qB,EAAe/0E,iBAAO,MACtBg1E,EAAch1E,iBAAO,MAC3B,EAA4B1F,oBAAS,GAArC,mBAAOk6E,EAAP,KAAeS,EAAf,KACA,EAAsD36E,mBAAS,GAA/D,mBAAO46E,EAAP,KAA4BC,EAA5B,KACA,EAA0C76E,mBAAS,CAAEuC,MAAO,EAAGu4E,OAAQ,IAAvE,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,SAACviB,GAChBiiB,GAAWT,GACXxhB,EAAMwiB,mBA4BR,OAhBA76E,qBAAU,WACR26E,EAAiB,CACfz4E,MAAOm4E,EAAY50E,QAAQq1E,YAC3BL,OAAQJ,EAAY50E,QAAQs1E,eAG9B,IAAMC,EAAqB,WACzBV,GAAU,IAIZ,OADA/W,SAASE,iBAAiB,QAASuX,GAC5B,WACLzX,SAASG,oBAAoB,QAASsX,MAEvC,IAGD,eAACpB,EAAD,yBAAmBC,OAAQA,EAAQ9zC,IAAKq0C,GAAkBM,GAA1D,cAC2B,IAAxBA,EAAcx4E,OACb,cAACs3E,EAAD,CAAgB38D,QAAS+9D,EAAzB,SACE,cAAC,KAAD,UAAOrzE,EAAQgzE,GAAqB3gB,UAGxC,cAAC,IAAD,CAAmBn9C,MAAM,OAAOI,QAAS+9D,IACzC,cAAClB,EAAD,UACE,cAACM,EAAD,CAAcj0C,IAAKs0C,EAAnB,SACG9yE,EAAQkZ,KAAI,SAACw6D,EAAQj9C,GAAT,OACXA,IAAUu8C,EACR,cAACN,EAAD,CAAUp9D,SArCGq+D,EAqCsBl9C,EArCI,WACjDw8C,EAAuBU,GACvBZ,GAAU,GAEN5qB,GACFA,EAASnoD,EAAQ2zE,MAgCT,SACE,cAAC,KAAD,UAAOD,EAAOrhB,SADgCqhB,EAAOrhB,OAGrD,KAxCU,IAACshB,e,gDCxFZC,IAfW,SAACC,EAAoBC,GAC7C,MAAwC17E,oBAAS,GAAjD,mBAAO27E,EAAP,KAAqBC,EAArB,KAWA,OATAv7E,qBAAU,WACR,IAAIw7E,EAMJ,OALIJ,IAAcE,EAChBC,GAAgB,IACNH,GAAaE,IACvBE,EAAY56B,YAAW,kBAAM26B,GAAgB,KAAQF,IAEhD,kBAAMx6B,aAAa26B,MACzB,CAACJ,EAAWC,EAAWC,IACnBA,I,oOCZHG,EAAcz5E,IAAOU,IAAV,uPACK,gBAAGwuC,EAAH,EAAGA,MAAH,SAAUwqC,QAAyB,cAAgBxqC,EAAMG,OAAOO,YAOxE,qBAAG8pC,SAA0B,aACnB,gBAAGxqC,EAAH,EAAGA,MAAH,SAAUwqC,SAA0BxqC,EAAMG,OAAOC,cAGnD,gBAAGJ,EAAH,EAAGA,MAAH,SAAUwqC,SAAyBxqC,EAAMG,OAAOO,YACzD,qBAAG8pC,SAAyB,SAG1B,SAASC,EAAT,GAQX,IAPFz2E,EAOC,EAPDA,QACA02E,EAMC,EANDA,SACAvhB,EAKC,EALDA,iBAMQ34D,EAAMC,cAAND,EACR,OACE,eAAC,IAAD,CAAYiB,IAAI,KAAhB,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMiiD,SAAS,OAAf,SAAuBljD,EAAE,kBACzB,cAAC6jC,EAAA,EAAD,CAAgBC,KAAM9jC,EAAE,uDAAwDgkD,GAAG,WAErF,eAAC,IAAD,CAAS/iD,IAAI,OAAb,UACE,eAAC84E,EAAD,CACE5+D,QAAS,WACFw9C,GAAqBn2C,YAAem2C,EAAkB7iD,MACzDokE,EAASpkE,MAGbkkE,QAASrhB,IAAqB7iD,IANhC,UAQE,cAAC,IAAD,CAAcD,SAAUC,IAAOuK,MAAO,CAAEC,YAAa,KACrD,cAAC,KAAD,sBAEA9c,EAAU4S,IAAgB5S,GAAW,IAAIub,KAAI,SAACuC,GAC9C,IAAM+1C,EAAWsB,aAA4B7xD,KAAS6xD,EAAiBv3D,UAAYkgB,EAAMlgB,QACzF,OACE,eAAC24E,EAAD,CAAa5+D,QAAS,kBAAOk8C,GAAY6iB,EAAS54D,IAAQ04D,QAAS3iB,EAAnE,UACE,cAAC,IAAD,CAAcxhD,SAAUyL,EAAOjB,MAAO,CAAEC,YAAa,KACrD,cAAC,KAAD,UAAOgB,EAAM7Z,WAFmE6Z,EAAMlgB,kB,oFC9C9F+4E,EAAe75E,IAAOU,IAAV,0MAQL,qBAAGo5E,IAAiB,MAAQ,OAGnCC,EAAY/5E,YAAOg6E,IAAPh6E,CAAH,mGAIH,qBAAGkvC,MAAkBG,OAAOnlB,WAGlC+vD,EAAej6E,IAAOU,IAAV,0KASH,SAASw5E,EAAT,GAYX,IAAD,IAXDl5D,EAWC,EAXDA,MACAjB,EAUC,EAVDA,MACA+5D,EASC,EATDA,IACAK,EAQC,EARDA,eACAC,EAOC,EAPDA,eASQl3E,EAAYH,cAAZG,QAEAxD,EAAMC,cAAND,EAGF+iE,EAAoBnhD,cACpB8Y,EAAOl3B,IAAO,OAAIu/D,QAAJ,IAAIA,GAAJ,UAAIA,EAAoBv/D,UAAxB,iBAAI,EAA+B8d,EAAMlgB,gBAAzC,aAAI,EAA+Cs5B,MAGjEigD,EAAUp4D,YAAoBjB,GAC9B46B,EAAWj6B,YAAiBX,GAElC,OACE,eAAC64D,EAAD,CAAc95D,MAAOA,EAArB,UACE,cAACD,EAAA,EAAD,CAAcvK,SAAUyL,EAAOnB,KAAK,OAAOE,MAAO,CAAEu6D,QAASR,EAAM,MAAQ,OAC3E,eAAC,IAAD,CAAYn5E,IAAI,MAAMof,MAAO,CAAEu6D,QAASR,EAAM,MAAQ,KAAtD,UACE,eAAC,IAAD,WACE,cAAC,KAAD,UAAO94D,EAAM7Z,SACb,cAAC,KAAD,CAAMsT,MAAM,eAAeipC,GAAG,MAA9B,SACE,cAACu2B,EAAD,CAAc91B,MAAOnjC,EAAMnC,KAA3B,SAAkCmC,EAAMnC,YAG3Cub,GAAQA,EAAKha,SACZ,eAAC,IAAD,WACE,eAAC,KAAD,CAAM0iC,OAAK,EAAC2G,GAAG,MAAMhvC,MAAM,aAA3B,UACG/a,EAAE,OADL,IACc06B,EAAKvb,QAEnB,cAAC,IAAD,CAAUuB,QAASga,EAAKha,QAASP,KAAK,eAI1C+7B,GAAay+B,EAab,eAAC,IAAD,CAAUt6D,MAAO,CAAEgqD,SAAU,eAA7B,UACE,cAACgQ,EAAD,IACA,cAAC,KAAD,CAAMt/D,MAAM,UAAZ,uBAdF,cAAC,IAAD,CACEva,MAAM,cACN2a,QAAS,WACHu/D,GACFA,EAAep5D,GAEjBm5D,KANJ,SASGz6E,EAAE,eC3Eb,SAAS66E,EAAYhlE,GACnB,OAAOA,aAAoB/O,IAAQ+O,EAASzU,QAAUyU,IAAaC,IAAQ,QAAU,GAGvF,IAAMglE,EAAoBx6E,YAAOy6E,KAAPz6E,CAAH,yHAOjB06E,EAAkB16E,IAAOU,IAAV,gIAQrB,SAAS8Z,EAAT,GAA4D,IAAzC1V,EAAwC,EAAxCA,QACjB,OAAO,cAAC01E,EAAD,CAAmBr2B,MAAOr/C,EAAQglE,UAAlC,SAA8ChlE,EAAQ0gC,cAAc,KAG7E,IAAMm1C,EAAW36E,YAAOQ,IAAPR,CAAH,+QAMF,qBAAG4iE,UAA4B,aACvB,qBAAGA,UAA2B,UAE1B,gBAAG1zB,EAAH,EAAGA,MAAH,SAAU0zB,UAA4B1zB,EAAMG,OAAOC,cAE9D,gBAAGszB,EAAH,EAAGA,SAAU7L,EAAb,EAAaA,SAAb,OAA6B6L,GAAY7L,EAAW,GAAM,KAGvE,SAAS6jB,EAAT,GAYI,IAXFrlE,EAWC,EAXDA,SACAqkE,EAUC,EAVDA,SACAiB,EASC,EATDA,WACAC,EAQC,EARDA,cACA/6D,EAOC,EAPDA,MAQQtL,EAAY1R,cAAZ0R,QACF7V,EAAM27E,EAAYhlE,GAClBwlE,EAAoB55D,cACpB65D,EAAmB3lE,YAAc0lE,EAAmBxlE,GACpD0lE,EAAch5D,YAAoB1M,GAClCzQ,EAAU2pC,YAAkB,OAACh6B,QAAD,IAACA,SAAWjX,EAAW+X,GAGzD,OACE,eAAColE,EAAD,CACE56D,MAAOA,EACP24C,UAAS,qBAAgB95D,GACzBic,QAAS,kBAAOggE,EAAa,KAAOjB,KACpChX,SAAUiY,EACV9jB,SAAU+jB,EALZ,UAOE,cAAC,IAAD,CAAcvlE,SAAUA,EAAUsK,KAAK,SACvC,eAACnc,EAAA,EAAD,WACE,cAAC,KAAD,CAAMm/C,MAAI,EAAV,SAAYttC,EAASpO,SACrB,eAAC,KAAD,CAAMsT,MAAM,aAAaqoC,OAAK,EAACo4B,UAAQ,EAACxsB,SAAS,QAAjD,WACIssB,GAAoBC,GAAe,uBADvC,IAC2D1lE,EAASsJ,WAGtE,cAAC,IAAD,CAAUkB,MAAO,CAAEo7D,YAAa,YAAhC,SACGr2E,EAAU,cAAC0V,EAAD,CAAS1V,QAASA,IAAc2P,EAAU,cAAC86C,EAAA,EAAD,IAAmB,UAMjE,SAAS6rB,EAAT,GAsBX,IArBF3C,EAqBC,EArBDA,OACArqC,EAoBC,EApBDA,WACAiqB,EAmBC,EAnBDA,iBACAR,EAkBC,EAlBDA,iBACAG,EAiBC,EAjBDA,cACAqjB,EAgBC,EAhBDA,aACAC,EAeC,EAfDA,QACAnB,EAcC,EAdDA,eACAC,EAaC,EAbDA,eACAmB,EAYC,EAZDA,WAaMC,EAAqCrkE,mBAAQ,WACjD,IAAIskE,EAAsCH,EAAO,CAAII,IAASlmE,OAAb,mBAAuB44B,IAAcA,EAItF,YAHmB5wC,IAAf+9E,IACFE,EAAS,sBAAOA,EAAU7gD,MAAM,EAAG2gD,IAA1B,MAAuC/9E,GAAvC,YAAqDi+E,EAAU7gD,MAAM2gD,EAAYE,EAAUj5D,WAE/Fi5D,IACN,CAACF,EAAYntC,EAAYktC,IAEpBp4E,EAAYH,cAAZG,QAEAxD,EAAMC,cAAND,EAEF2hB,EAEFD,cAEErhB,EAAMpB,uBACV,YAA6B,IAA1BjC,EAAyB,EAAzBA,KAAMs/B,EAAmB,EAAnBA,MAAOjc,EAAY,EAAZA,MACRxK,EAAqB7Y,EAAKs/B,GAC1B6+C,EAAaplE,QAAQ4iD,GAAoBn2C,YAAem2C,EAAkB9iD,IAC1EulE,EAAgBrlE,QAAQuiD,GAAiB91C,YAAe81C,EAAeziD,IAGvEyL,EAAQ0G,YAAgBnS,EAAUrS,GAElCy4E,EAAat6D,GAAkBL,GAAShiB,OAAOC,KAAKoiB,GAAgBG,SAASR,EAAMlgB,SAEzF,OAAIk7B,IAAUu/C,GAAe7+E,EAkBzBi/E,GAAc36D,EAEd,cAACk5D,EAAD,CAAWn6D,MAAOA,EAAOiB,MAAOA,EAAOm5D,eAAgBA,EAAgBC,eAAgBA,EAAgBN,KAAG,IAI5G,cAACc,EAAD,CACE76D,MAAOA,EACPxK,SAAUA,EACVslE,WAAYA,EACZjB,SAlCiB,kBAAM/hB,EAAiBtiD,IAmCxCulE,cAAeA,IA3Bf,cAACJ,EAAD,CAAiB36D,MAAOA,EAAxB,SACE,cAAC,IAAD,CAAe1f,QAAQ,WAAWE,aAAa,MAA/C,SACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMuiD,OAAK,EAAX,SAAapjD,EAAE,gDACf,cAAC6jC,EAAA,EAAD,CACEC,KAAM9jC,EACJ,sGAEFgkD,GAAG,iBAuBjB,CACExgD,EACAme,EACAw2C,EACAG,EACAK,EACA+hB,EACAD,EACAoB,EACA77E,IAIEk8E,EAAUj9E,uBAAY,SAACq9B,EAAet/B,GAAhB,OAA8B69E,EAAY79E,EAAKs/B,MAAS,IAEpF,OACE,cAAC,IAAD,CACEy8C,OAAQA,EACR10C,IAAKs3C,EACLn7E,MAAM,OACNs7E,SAAUA,EACVK,UAAWL,EAASh5D,OACpBs5D,SAAU,GACVF,QAASA,EAPX,SASG77E,I,aC7JQg8E,MAXf,SAA4B12C,GAC1B,IAAMuI,EAAWc,cACXstC,EAAa7kE,mBAAQ,kBAxB7B,SAA4By2B,GAG1B,OAAO,SAAoBxnB,EAAeC,GAKxC,IArBuB41D,EAAwBC,EAwBzCC,GAxBiBF,EAqBNruC,EAASxnB,EAAOtlB,SArBco7E,EAsB9BtuC,EAASvnB,EAAOvlB,SArB/Bm7E,GAAYC,EACPD,EAASnZ,YAAYoZ,IAAa,EAAID,EAASj2B,QAAQk2B,GAAY,EAAI,EAE5ED,GAAYA,EAASnZ,YAAY,MAC3B,EAENoZ,GAAYA,EAASpZ,YAAY,KAC5B,EAEF,GAeL,OAAoB,IAAhBqZ,EAA0BA,EAE1B/1D,EAAOjf,QAAUkf,EAAOlf,OAEnBif,EAAOjf,OAAOwX,cAAgB0H,EAAOlf,OAAOwX,eAAiB,EAAI,EAEnEyH,EAAOjf,QAAckf,EAAOlf,QAAX,EAAyB,GAMlBi1E,CAAkB,OAACxuC,QAAD,IAACA,IAAY,MAAK,CAACA,IACtE,OAAOz2B,mBAAQ,WACb,OAAIkuB,EACK,SAACjf,EAAeC,GAAhB,OAAgE,EAA9B21D,EAAW51D,EAAQC,IAEvD21D,IACN,CAAC32C,EAAU22C,KCpBVK,EAAY,IAAIC,MAAM,YA6IbC,ICzKHC,GDyKGD,GA3If,YAOyB,IANvBlkB,EAMsB,EANtBA,iBACAR,EAKsB,EALtBA,iBACAS,EAIsB,EAJtBA,sBACAL,EAGsB,EAHtBA,gBACAkiB,EAEsB,EAFtBA,eACAC,EACsB,EADtBA,eAEQ16E,EAAMC,cAAND,EACAwD,EAAYH,cAAZG,QAGFu5E,EAAYp5E,mBAElB,EAAsC1F,mBAAiB,IAAvD,mBAAOmkB,EAAP,KAAoB46D,EAApB,KACMC,EAAiBp+B,YAAYz8B,EAAa,KAEhD,EAA4BnkB,oBAAkB,GAAvCi/E,EAAP,oBAEM/hD,EAAY3Z,cAGZ27D,EAAcj6D,YAAS+5D,GACvBG,EAAqB76D,YAAoB46D,GAE/C,EAAoBp5D,cAAbG,EAAP,oBAEM03D,EAAmBnkE,mBAAQ,WAC/B,IAAMqe,EAAImnD,EAAeh+D,cAAc66C,OACvC,MAAa,KAANhkC,GAAkB,MAANA,GAAmB,OAANA,GAAoB,QAANA,IAC7C,CAACmnD,IAEEI,EAAkBhB,EAAmBa,GAErCI,EAA0B7lE,mBAAQ,WACtC,OAAO4K,YAAa/iB,OAAOgjB,OAAO6Y,GAAY8hD,KAC7C,CAAC9hD,EAAW8hD,IAETM,EAAwB9lE,mBAAQ,WACpC,OAAO6lE,EAAe5zD,KAAK2zD,KAC1B,CAACC,EAAgBD,IAEdG,EAAuB9jB,YAAuB6jB,EAAcN,GAE5Dra,EAAuB3jE,uBAC3B,SAAC4W,GACCsiD,EAAiBtiD,GACbqO,GACFy4D,EAAUc,SAGd,CAACv5D,EAAWi0C,IAIRulB,EAAW/5E,mBACXg6E,EAAc1+E,uBAAY,SAAC03D,GAAW,IAAD,EACnCL,EAAQK,EAAMzI,OAAOnuD,MACrB69E,EAAmBpqE,YAAU8iD,GACnC0mB,EAAeY,GAAoBtnB,GACnC,UAAAymB,EAAUh5E,eAAV,SAAmB85E,SAAS,KAC3B,IAEGC,EAAc7+E,uBAClB,SAACgvD,GACC,GAAc,UAAVA,EAAE/uD,IAEJ,GAAU,QADA+9E,EAAeh+D,cAAc66C,OAErC8I,EAAqB9sD,UAChB,GAAI0nE,EAAqB16D,OAAS,EAAG,CAAC,IAAD,GAExC,UAAA06D,EAAqB,GAAG/1E,cAAxB,eAAgCwX,iBAAkBg+D,EAAenjB,OAAO76C,eACxC,IAAhCu+D,EAAqB16D,QAErB8/C,EAAqB4a,EAAqB,OAKlD,CAACA,EAAsB5a,EAAsBqa,IAIzCt7D,EAAiBQ,YAAuB86D,GACxCc,EAAkCrkB,YAAuB/3C,EAAgBs7D,GAE/E,OACE,mCACE,gCACE,eAAC,IAAD,CAAYh8E,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACE2X,GAAG,qBACHk1C,YAAa9tD,EAAE,gCACf6tD,MAAM,KACNiJ,aAAa,MACb/2D,MAAOqiB,EACPiiB,IAAKq5C,EACL1vB,SAAU2vB,EACVK,UAAWF,MAGdvlB,GACC,cAAC0hB,EAAD,CAAaz2E,QAASA,EAAS02E,SAAUtX,EAAsBjK,iBAAkBA,OAGpFwkB,IAAgBC,EACf,cAACp5E,EAAA,EAAD,CAAQqc,MAAO,CAAE1f,QAAS,SAAUo4E,OAAQ,QAA5C,SACE,cAACyB,EAAD,CAAWl5D,MAAO67D,EAAa1C,eAAgBA,EAAgBC,eAAgBA,OAE3D,OAApB8C,QAAoB,IAApBA,OAAA,EAAAA,EAAsB16D,QAAS,IAA2B,OAAtBi7D,QAAsB,IAAtBA,OAAA,EAAAA,EAAwBj7D,QAAS,EACvE,cAAC,IAAD,CAAK/C,OAAO,aAAZ,SACE,cAAC27D,EAAD,CACE3C,OAAQ,IACR6C,QAASA,EACTltC,WACEqvC,EAAyBP,EAAqB71D,OAAOo2D,GAA0BP,EAEjF3B,WAAYl6D,GAAkB67D,EAAuBA,EAAqB16D,YAAShlB,EACnFq6D,iBAAkByK,EAClBtK,cAAeM,EACfD,iBAAkBA,EAClBgjB,aAAcoB,EACdtC,eAAgBA,EAChBC,eAAgBA,MAIpB,cAAC12E,EAAA,EAAD,CAAQqc,MAAO,CAAE1f,QAAS,OAAQo4E,OAAQ,QAA1C,SACE,cAAC,KAAD,CAAMh+D,MAAM,aAAasoC,UAAU,SAASuK,GAAG,OAA/C,SACG5tD,EAAE,+B,yGChKL88E,O,mBAAAA,I,mBAAAA,I,6BAAAA,I,4BAAAA,Q,KAOGA,I,SCkBf,IAAMh9D,GAAUxf,YAAO0D,IAAP1D,CAAH,+DAKP29E,GAAa39E,YAAOD,IAAPC,CAAH,4LACM,gBAAG49E,EAAH,EAAGA,OAAQ1uC,EAAX,EAAWA,MAAX,OAAwB0uC,EAAM,UAAM1uC,EAAMG,OAAOnlB,QAAnB,MAAiC,iBAEnE,gBAAG0zD,EAAH,EAAGA,OAAQ1uC,EAAX,EAAWA,MAAX,OAAwB0uC,EAAS1uC,EAAMG,OAAOnlB,QAAUglB,EAAMG,OAAOwuC,YAOvF,SAASC,GAAiB7pD,GACxB,MAAM,YAAN,OAAmBA,EAAQ30B,QAAQ,MAAO,MAG5C,IAAMy+E,GAAUx2D,gBAAK,YAAoD,IAvB/CoN,EAuBcV,EAAgC,EAAhCA,QAChC+pD,EAAan6D,cAAkD,SAAC/lB,GAAD,OAAWA,EAAMm6B,MAAMlE,SACtFrQ,EAAWC,eACjB,EAAkDq6D,EAAW/pD,GAA5CmG,EAAjB,EAAQ32B,QAA8B4wB,EAAtC,EAAuBT,cAEjBgoB,EAAWtgB,YAAgBrH,GAEzBv0B,EAAMC,cAAND,EAEFu+E,EAAyBt/E,uBAAY,WACpC01B,GACL3Q,EAAS4R,aAAiBrB,MACzB,CAACvQ,EAAUuQ,EAASI,IAEjB6pD,EAAmBv/E,uBAAY,WAE/BkiD,OAAOs9B,QAAQ,sDACjBz6D,EAASwR,aAAWjB,MAErB,CAACvQ,EAAUuQ,IAERmqD,EAAmBz/E,uBAAY,WACnC+kB,EAAS0R,aAAWnB,MACnB,CAACvQ,EAAUuQ,IAERoqD,EAAoB1/E,uBAAY,WACpC+kB,EAAS2R,aAAYpB,MACpB,CAACvQ,EAAUuQ,IAEd,EAA+CwP,aAC7C,gCACE,cAAC,KAAD,UAAOrJ,IAtDazF,EAsDYyF,EAAKzF,QArDnC,IAAN,OAAWA,EAAQ2pD,MAAnB,YAA4B3pD,EAAQ4pD,MAApC,YAA6C5pD,EAAQ6pD,UAsDjD,cAAC,KAAD,CAAcp7B,UAAQ,EAACC,KAAI,gDAA2CpvB,GAAtE,SACGv0B,EAAE,SAEL,cAAC,IAAD,CAAQ6jD,QAAQ,SAASgK,MAAM,KAAK1yC,QAASqjE,EAAkBtb,SAA6C,IAAnC5jE,OAAOC,KAAK++E,GAAYx7D,OAAjG,SACG9iB,EAAE,YAEJ20B,GACC,cAAC,IAAD,CAAQkvB,QAAQ,OAAO1oC,QAASojE,EAAwBl+D,MAAO,CAAE6iC,SAAU,QAA3E,SACGljD,EAAE,oBAIT,CAAEgkC,UAAW,YAAaC,QAAS,UAf7BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAkB5B,OAAK1J,EAGH,eAACujD,GAAD,CAAYC,OAAQhiC,EAAwBtjC,GAAIwlE,GAAiB7pD,GAAjE,UACG6P,GAAkBD,EAClBzJ,EAAKha,QACJ,cAAC,IAAD,CAAUP,KAAK,OAAOE,MAAO,CAAEC,YAAa,QAAUI,QAASga,EAAKha,QAASC,IAAG,UAAK+Z,EAAKvb,KAAV,gBAEhF,qBAAKkB,MAAO,CAAE7f,MAAO,OAAQu4E,OAAQ,OAAQz4D,YAAa,UAE5D,eAACtc,EAAA,EAAD,CAAQqc,MAAO,CAAE0+D,KAAM,KAAvB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM57B,MAAI,EAAV,SAAYzoB,EAAKvb,SAEnB,eAAC,IAAD,CAAU2kC,GAAG,MAAb,UACE,eAAC,KAAD,CAAMZ,SAAS,OAAO6G,GAAG,MAAM+V,cAAc,YAA7C,UACGplC,EAAKl5B,OAAOshB,OADf,IACwB9iB,EAAE,aAE1B,sBAAMqkC,IAAKH,EAAX,SACE,cAAC,IAAD,CAASnpB,MAAM,OAAOva,MAAM,iBAIlC,cAAC,KAAD,CACE0uD,QAAShT,EACT8R,SAAU,WACJ9R,EACFyiC,IAEAD,SA1B2BnqD,GAHnB,QAqCdyqD,GAAgB1+E,IAAOU,IAAV,sFAqKJi+E,I,SAAAA,GA/Jf,YAQI,IAPFC,EAOC,EAPDA,aACAC,EAMC,EANDA,cACAC,EAKC,EALDA,WAMA,EAAwCnhF,mBAAiB,IAAzD,mBAAOohF,EAAP,KAAqBC,EAArB,KAEQt/E,EAAMC,cAAND,EAEFu4B,EAAQqC,cAGRpG,EAAiB8G,cACvB,EAAoCr9B,qBAApC,mBAAOshF,EAAP,KAAmBC,EAAnB,KACAlhF,qBAAU,YACHihF,GAAc/qD,GACjBgrD,EAAchrD,KAEf,CAAC+qD,EAAY/qD,IAEhB,IAAMmpD,EAAc1+E,uBAAY,SAACgvD,GAC/BqxB,EAAgBrxB,EAAEC,OAAOnuD,SACxB,IAEG0/E,EAAY7qB,eAEZ8qB,EAAoBjoE,mBAAQ,WAChC,OAAOoqC,aAAUw9B,GAAcv8D,OAAS,GAAK/M,QAAQo8C,aAAgBktB,MACpE,CAACA,IAEEM,EAAcloE,mBAAQ,WAE1B,OADiBnY,OAAOC,KAAKg5B,GAE1BrR,QAAO,SAACqN,GAEP,OAAOxe,QAAQwiB,EAAMhE,GAASxwB,WAAauwB,KAAsBxS,SAASyS,MAE3E7K,MAAK,SAACk2D,EAAIC,GACT,IAAiBC,EAAOvnD,EAAMqnD,GAAtB77E,QACSg8E,EAAOxnD,EAAMsnD,GAAtB97E,QAGR,OAAc,OAAVw7E,QAAU,IAAVA,OAAA,EAAAA,EAAYz9D,SAAS89D,OAAO,OAACL,QAAD,IAACA,OAAD,EAACA,EAAYz9D,SAAS+9D,KAC5C,IAEN,OAACN,QAAD,IAACA,OAAD,EAACA,EAAYz9D,SAAS89D,MAAtB,OAA6BL,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAYz9D,SAAS+9D,IAC7C,EAGLC,GAAMC,EACDD,EAAG3gE,KAAKF,cAAgB8gE,EAAG5gE,KAAKF,eAClC,EACD6gE,EAAG3gE,KAAKF,gBAAkB8gE,EAAG5gE,KAAKF,cAClC,EACA,EAEF6gE,GAAY,EACZC,EAAW,EACR,OAEV,CAACxnD,EAAOgnD,IAGX,EAAgCthF,qBAAhC,mBAAO+hF,EAAP,KAAiBC,EAAjB,KACA,EAAgChiF,qBAAhC,mBAAOiiF,EAAP,KAAiBC,EAAjB,KAEA7hF,qBAAU,WAAM,8CACd,uBAAA3B,EAAA,sDACE8iF,EAAUJ,GAAc,GACrBvyD,MAAK,SAAC4N,GAAD,OAAUulD,EAAYvlD,MAC3B/N,OAAM,kBAAMwzD,EAAY,2BAH7B,4CADc,sBAOVT,EAPW,WAAD,wBAQZU,IAEAH,OAAYniF,GACS,KAAjBuhF,GACFc,EAAY,8BAKK,KAAjBd,GACFc,OAAYriF,KAEb,CAAC2hF,EAAWJ,EAAcK,IAG7B,IAAMW,EAAa/gF,OAAOC,KAAKg5B,GAAOzW,SAASu9D,GAGzCiB,EAAerhF,uBAAY,WAC1B+gF,IACLb,EAAca,GACdd,EAAapC,GAAkByD,YAC/BnB,EAAWC,MACV,CAACA,EAAcF,EAAeC,EAAYF,EAAcc,IAE3D,OACE,eAAClgE,GAAD,WACE,eAAC,IAAD,CAAY7e,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACE2X,GAAG,iBACHi1C,MAAM,KACNC,YAAa9tD,EAAE,mCACfD,MAAOs/E,EACPrxB,SAAU2vB,MAGbuC,EACC,cAAC,KAAD,CAAMnlE,MAAM,UAAUsF,MAAO,CAAEmgE,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,QAELF,GACC,cAAC,IAAD,CAAY3/D,MAAO,CAAEguC,WAAY,GAAjC,SACE,cAAC3e,EAAA,EAAD,CAAM/uC,QAAQ,YAAd,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACGq/E,EAASt/D,SAAW,cAAC,IAAD,CAAUA,QAASs/D,EAASt/D,QAASP,KAAK,SAC/D,eAAC,IAAD,CAAYlf,IAAI,MAAMof,MAAO,CAAEqgE,WAAY,QAA3C,UACE,cAAC,KAAD,CAAMv9B,MAAI,EAAV,SAAY68B,EAAS7gE,OACrB,eAAC,KAAD,CAAMpE,MAAM,aAAaqoC,OAAK,EAAC0c,cAAc,YAA7C,UACGkgB,EAASx+E,OAAOshB,OADnB,IAC4B9iB,EAAE,mBAIjCqgF,EACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAe7/E,MAAM,OAAOupD,GAAG,SAC/B,cAAC,KAAD,UAAO/pD,EAAE,eAGX,cAAC,IAAD,CAAQQ,MAAM,cAAc2a,QAASmlE,EAArC,SACGtgF,EAAE,mBAOf,cAACg/E,GAAD,UACE,cAAC,IAAD,CAAY/9E,IAAI,KAAhB,SACG0+E,EAAY5gE,KAAI,SAACwV,GAAD,OACf,cAAC,GAAD,CAAuBA,QAASA,GAAlBA,c,UC7QpBzU,GAAUxf,IAAOU,IAAV,4HAOPy8D,GAASn9D,IAAOU,IAAV,gKASG,SAAS2/E,GAAT,GAMX,IALFzB,EAKC,EALDA,aACAxE,EAIC,EAJDA,eAKQl3E,EAAYH,cAAZG,QAEAxD,EAAMC,cAAND,EAER,EAAsC/B,mBAAiB,IAAvD,mBAAOmkB,EAAP,KAAoB46D,EAApB,KAGMU,EAAW/5E,mBACXg6E,EAAc1+E,uBAAY,SAAC03D,GAC/B,IAAML,EAAQK,EAAMzI,OAAOnuD,MACrB69E,EAAmBpqE,YAAU8iD,GACnC0mB,EAAeY,GAAoBtnB,KAClC,IAGG6mB,EAAcj6D,YAASd,GAGvBnB,EAA2BC,eAC3B0/D,EAAc56D,cAEd66D,EAAkB5hF,uBAAY,WAC9BuE,GAAWyd,GACbA,EAAgBlC,KAAI,SAACuC,GACnB,OAAOs/D,EAAYp9E,EAAS8d,EAAMlgB,cAGrC,CAACw/E,EAAa3/D,EAAiBzd,IAE5BuxB,EAAYtd,mBAAQ,WACxB,OACEjU,GACAyd,EAAgBlC,KAAI,SAACuC,GAAD,OAClB,eAAC,IAAD,CAAgC9gB,MAAM,OAAtC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcqV,SAAUyL,EAAOnB,KAAK,SACpC,cAAC,KAAD,CAAMujC,UAAQ,EAACC,KAAMlwC,YAAe6N,EAAMlgB,QAAS,UAAWoC,GAAUuX,MAAM,aAAaipC,GAAG,OAA9F,SACG1iC,EAAM7Z,YAGX,eAAC,IAAD,WACE,cAAC,IAAD,CAAYo8C,QAAQ,OAAO1oC,QAAS,kBAAMylE,EAAYp9E,EAAS8d,EAAMlgB,UAArE,SACE,cAAC,IAAD,MAEF,cAAC,KAAD,CAAcuiD,KAAMlwC,YAAe6N,EAAMlgB,QAAS,UAAWoC,UAXhD8d,EAAMlgB,cAgB1B,CAAC6f,EAAiBzd,EAASo9E,IAExBE,EAAiC,KAAhB1+D,GAAsB5O,YAAU4O,GAEvD,OACE,cAAC,GAAD,UACE,eAACpe,EAAA,EAAD,CAAQqc,MAAO,CAAE7f,MAAO,OAAQu+E,KAAM,OAAtC,UACE,eAAC,IAAD,CAAY99E,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACE2X,GAAG,qBACHi1C,MAAM,KACNC,YAAY,SACZ/tD,MAAOqiB,EACP00C,aAAa,MACbzyB,IAAKq5C,EACL1vB,SAAU2vB,EACVxvB,WAAY2yB,OAGdA,GAAkB,cAAC,KAAD,CAAM/lE,MAAM,UAAZ,SAAuB/a,EAAE,+BAC5Cm9E,GACC,cAAC3C,EAAD,CACEl5D,MAAO67D,EACP1C,eAAgB,kBAAMyE,EAAapC,GAAkBiE,cACrDrG,eAAgBA,EAChBr6D,MAAO,CAAE04D,OAAQ,oBAItBhkD,EACD,eAAC0oC,GAAD,WACE,eAAC,KAAD,CAAMta,MAAI,EAACpoC,MAAM,aAAjB,iBACGkG,QADH,IACGA,OADH,EACGA,EAAiB6B,OADpB,IACwD,IAA3B7B,EAAgB6B,OAAe9iB,EAAE,gBAAkBA,EAAE,oBAEjFihB,EAAgB6B,OAAS,GACxB,cAAC,IAAD,CAAQ+gC,QAAQ,WAAW1oC,QAAS0lE,EAApC,SACG7gF,EAAE,uBCnHjB,IAAMghF,GAAmB1gF,YAAO2gF,IAAP3gF,CAAH,8CAIP,SAAS4gF,GAAT,GAUX,IATFhC,EASC,EATDA,aACAC,EAQC,EARDA,cACAzE,EAOC,EAPDA,eACA0E,EAMC,EANDA,WAOA,EAAkCnhF,oBAAS,GAA3C,mBAAOkjF,EAAP,KAAkBC,EAAlB,KAEQphF,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,WACE,eAACghF,GAAD,CACEjjB,YAAaojB,EAAY,EAAI,EAC7BE,YAAa,kBAAMD,GAAa,SAAClf,GAAD,OAAWA,MAC3CrU,MAAM,KACNhK,QAAQ,SACR+J,GAAG,OALL,UAOE,cAAC,IAAD,CAAgBptD,MAAM,MAAtB,SAA6BR,EAAE,WAC/B,cAAC,IAAD,CAAgBQ,MAAM,MAAtB,SAA6BR,EAAE,eAEhCmhF,EACC,cAAC,GAAD,CAAajC,aAAcA,EAAcC,cAAeA,EAAeC,WAAYA,IAEnF,cAACuB,GAAD,CAAczB,aAAcA,EAAcxE,eAAgBA,O,oBCtB5D56D,GAAUxf,IAAOU,IAAV,qEAKPsgF,GAAUhhF,IAAOU,IAAV,8GAGS,qBAAGwuC,MAAkBG,OAAO7L,QA4GnCy9C,I,SAAAA,GAxGf,YAA+D,IAAD,EAAxCC,EAAwC,EAAxCA,QAAS9mD,EAA+B,EAA/BA,KAAM+mD,EAAyB,EAAzBA,SAC3BjyC,EAAUD,eAAVC,MACFxrB,EAAWC,eAETjkB,EAAMC,cAAND,EAGR,EAAkC/B,oBAAS,GAA3C,mBAAOmyD,EAAP,KAAkByS,EAAlB,KAEMtqC,EAAQqC,cACR6kD,EAAY7qB,eAGZ8sB,EAAS3rE,QAAO,UAACwiB,EAAMipD,UAAP,aAAC,EAAgBvtD,kBACvC,EAAgCh2B,mBAAwB,MAAxD,mBAAOiiF,EAAP,KAAiBC,EAAjB,KAEMwB,EAAgB1iF,uBAAY,WAC5ByiF,IACJvB,EAAY,MACZV,EAAU+B,GACP10D,MAAK,WACJ9I,EAAS0R,aAAW8rD,IACpBC,OAED90D,OAAM,SAAC/S,GACNumE,EAAYvmE,EAAMyqC,SAClBrgC,EAASwR,aAAWgsD,UAEvB,CAACE,EAAQ19D,EAAUy7D,EAAW+B,EAASC,IAE1C,OACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAYxgF,IAAI,KAAhB,SACE,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACE,cAACyuC,EAAA,EAAD,CAAM/uC,QAAQ,YAAd,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACG+5B,EAAKha,SAAW,cAAC,IAAD,CAAUA,QAASga,EAAKha,QAASP,KAAK,SACvD,eAAC,IAAD,CAAYlf,IAAI,KAAKof,MAAO,CAAEqgE,WAAY,QAA1C,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMv9B,MAAI,EAAC4G,GAAG,MAAd,SACGrvB,EAAKvb,OAER,cAACmiE,GAAD,IACA,eAAC,KAAD,CAAMl+B,OAAK,EAACroC,MAAM,aAAaipC,GAAG,MAAlC,UACGtpB,EAAKl5B,OAAOshB,OADf,gBAIF,cAAC,KAAD,CACEsgC,OAAK,EACLM,UAAQ,EACR83B,UAAQ,EACRxsB,SAAS,MACTrL,KAAI,gDAA2C69B,GALjD,SAOGA,cAOX,cAAC,KAAD,CAAS39B,QAAQ,SAAjB,SACE,eAAC,IAAD,CAAMoM,cAAc,SAApB,UACE,cAAC,KAAD,CAAM/M,SAAS,OAAOG,UAAU,SAAStoC,MAAOy0B,EAAMG,OAAOggB,QAAS/B,GAAG,OAAzE,SACG5tD,EAAE,6BAEL,cAAC,KAAD,CAAM+a,MAAOy0B,EAAMG,OAAOggB,QAAS/B,GAAG,MAAtC,SACG5tD,EACC,6NAGJ,cAAC,KAAD,CAAMmjD,MAAI,EAACpoC,MAAOy0B,EAAMG,OAAOggB,QAAS/B,GAAG,OAA3C,SACG,WAEH,eAAC,IAAD,CAAMuB,WAAW,SAAjB,UACE,cAAC,IAAD,CACEhwC,KAAK,YACLzL,KAAK,WACLw7C,QAASkB,EACTpC,SAAU,kBAAM6U,GAAczS,IAC9BvC,MAAM,OAER,cAAC,KAAD,CAAM7J,GAAG,OAAO3jC,MAAO,CAAE4iD,WAAY,QAArC,SACGjjE,EAAE,0BAMX,cAAC,IAAD,CAAQkjE,UAAW9S,EAAWj1C,QAASwmE,EAAvC,SACG3hF,EAAE,YAEJkgF,EACC,cAAC,KAAD,CAAMnlE,MAAM,UAAUsF,MAAO,CAAEmgE,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,aC5GRziB,GAASn9D,IAAOU,IAAV,+FAEU,qBAAGwuC,MAAkBG,OAAOG,iBAI5C8xC,GAAuBthF,YAAOuhF,KAAPvhF,CAAH,mEAKpBwhF,GAAkBxhF,YAAOyhF,KAAPzhF,CAAH,gDAWN,SAASo4D,GAAT,GAMe,IAAD,MAL3BnV,iBAK2B,MALf,kBAAM,MAKS,EAJ3B4U,EAI2B,EAJ3BA,iBACAQ,EAG2B,EAH3BA,iBACAC,EAE2B,EAF3BA,sBAE2B,IAD3BL,uBAC2B,SAC3B,EAAkCt6D,mBAA4B6+E,GAAkBppC,QAAhF,mBAAOsuC,EAAP,KAAkB9C,EAAlB,KAEMtc,EAAuB3jE,uBAC3B,SAAC4W,GACCsiD,EAAiBtiD,GACjB0tC,MAEF,CAACA,EAAW4U,IAIR8pB,EAAWC,YAAYF,GAG7B,EAAsC/jF,qBAAtC,mBAAO8iF,EAAP,KAAoBrG,EAApB,KAGA,EAAoCz8E,qBAApC,mBAAOsiF,EAAP,KAAmBpB,EAAnB,KACA,EAA8BlhF,qBAA9B,mBAAOujF,EAAP,KAAgBpC,EAAhB,KAEQp/E,EAAMC,cAAND,EAEFic,GAAM,mBACT6gE,GAAkBppC,OAAS,CAAE+Q,MAAOzkD,EAAE,kBAAmB+uD,YAAQjxD,IADxD,cAETg/E,GAAkBqF,OAAS,CAAE19B,MAAOzkD,EAAE,UAAW+uD,OAAQ,kBAAMmwB,EAAapC,GAAkBppC,WAFrF,cAGTopC,GAAkBiE,YAAc,CAC/Bt8B,MAAOzkD,EAAE,iBACT+uD,OAAQ,kBACNmwB,EAAa+C,GAAYA,IAAanF,GAAkBiE,YAAckB,EAAWnF,GAAkBppC,WAN7F,cAQTopC,GAAkByD,WAAa,CAAE97B,MAAOzkD,EAAE,eAAgB+uD,OAAQ,kBAAMmwB,EAAapC,GAAkBppC,WAR9F,GAWZ,OACE,eAACkuC,GAAD,CAAsBvX,SAAS,QAA/B,UACE,eAAC,KAAD,WACE,eAAC,KAAD,WACGpuD,EAAO+lE,GAAWjzB,QAAU,cAAC,KAAD,CAAiBA,OAAQ9yC,EAAO+lE,GAAWjzB,SACxE,cAAC,IAAD,UAAU9yC,EAAO+lE,GAAWv9B,WAE9B,cAAC,KAAD,CAAkBlB,UAAWA,OAE/B,eAACu+B,GAAD,WACGE,IAAclF,GAAkBppC,OAC/B,cAAC,GAAD,CACEykB,iBAAkByK,EAClBjK,iBAAkBA,EAClBC,sBAAuBA,EACvBL,gBAAiBA,EACjBkiB,eAAgB,kBAAMyE,EAAapC,GAAkBiE,cACrDrG,eAAgBA,IAEhBsH,IAAclF,GAAkBiE,aAAeA,EACjD,cAACpe,GAAA,EAAD,CAAanhE,OAAQ,CAACu/E,GAAcne,qBAAsBA,IACxDof,IAAclF,GAAkByD,YAAcA,GAAciB,EAC9D,cAAC,GAAD,CAAY9mD,KAAM6lD,EAAYiB,QAASA,EAASC,SAAU,kBAAMvC,EAAapC,GAAkBqF,WAC7FH,IAAclF,GAAkBqF,OAClC,cAACjB,GAAD,CACEhC,aAAcA,EACdxE,eAAgBA,EAChByE,cAAeA,EACfC,WAAYA,IAGd,GAED4C,IAAclF,GAAkBppC,QAC/B,cAAC,GAAD,UACE,cAAC,IAAD,CACEma,MAAM,KACNhK,QAAQ,OACR1oC,QAAS,kBAAM+jE,EAAapC,GAAkBqF,SAC9CnpB,UAAU,2BAJZ,SAMGh5D,EAAE,6B,yNC9GFoiF,EAN+B,SAAC,GAAmC,IAAD,IAAhCC,kBAAgC,MAAnB,GAAmB,EAAZjnE,EAAY,iBAC/E,OACE,cAAC,IAAD,aAAiBknE,YAAa,cAAC,KAAD,eAAWD,IAAgBE,SAAS,kBAAkBC,WAAW,OAAUpnE,K,QCTvGqnE,E,KAAyBniF,EAAOU,IAAV,woGAOV,qBAAGwuC,MAAkBkzC,KAAK9yC,cACxB,qBAAGJ,MAAkBG,OAAOK,cACnC,qBAAGR,MAAkBG,OAAO7L,QAKvB,qBAAG0L,MAAkBG,OAAO2mB,SAC1B,qBAAG9mB,MAAkBG,OAAOK,cASnC,qBAAGR,MAAkBG,OAAO7L,QAOjB,qBAAG0L,MAAkBG,OAAOK,cAKzB,qBAAGR,MAAkBG,OAAOK,cAe/B,qBAAGR,MAAkBG,OAAO8f,WAe5B,qBAAGjgB,MAAkBG,OAAOgzC,iBAO5B,qBAAGnzC,MAAkBG,OAAOizC,aAQ5B,qBAAGpzC,MAAkBG,OAAOizC,aA2BrCC,EAJU,WACvB,OAAO,cAACJ,EAAD,CAAwB7pE,GAAG,qB,QCzFrBkqE,EAf+B,SAAC1nE,GAC7C,IAAQpb,EAAMC,cAAND,EAER,OACE,cAAC,EAAD,aACE+iF,gBAAc,EACdC,oBAAkB,EAClBC,cAAe,GACfC,YAAaljF,EAAE,QACfwiF,WAAW,OACPpnE,M,gJCRJi7C,EAAc/1D,YAAOm2D,KAAPn2D,CAAH,0EAKX6iF,EAAe7iF,IAAOU,IAAV,sFAEd,qBAAGwuC,MAAkBksB,aAAaxe,MAKhC0a,EAAYt3D,IAAOU,IAAV,0BAqCAoiF,EA9BsB,SAAC,GAA4D,IAAhDC,EAA+C,EAAzDr1B,SAAyD,IAA7BF,mBAA6B,MAAf,SAAe,EAC/F,EAA8B7vD,oBAAS,GAAvC,mBAAOqlF,EAAP,KAAgBC,EAAhB,KACA,EAAoCtlF,mBAAS,IAA7C,mBAAOulF,EAAP,KAAmBC,EAAnB,KAEQzjF,EAAMC,cAAND,EAEF0jF,EAAoBjsE,mBACxB,kBAAMksE,KAAS,SAAC11B,GAAD,OAA4Co1B,EAAiBp1B,KAAI,OAChF,CAACo1B,IAQH,OACE,cAACzrB,EAAD,CAAW0rB,QAASA,EAApB,SACE,cAACH,EAAD,UACE,cAAC9sB,EAAD,CACEt2D,MAAOyjF,EACPx1B,SAVS,SAACC,GAChBw1B,EAAcx1B,EAAEC,OAAOnuD,OACvB2jF,EAAkBz1B,IASZH,YAAa9tD,EAAE8tD,GACfC,OAAQ,kBAAMw1B,GAAW,Y,0rxKC9C7BK,EAA6B,oBAAqB/hB,SAExD,SAASgiB,IACP,OAAQD,GAA2D,WAA7B/hB,SAASiiB,gBAMlC,SAASC,IACtB,MAA8B9lF,mBAAkB4lF,KAAhD,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAWjlF,uBAAY,WAC3BglF,EAAWJ,OACV,CAACI,IAWJ,OATA3lF,qBAAU,WACR,GAAKslF,EAGL,OADA/hB,SAASE,iBAAiB,mBAAoBmiB,GACvC,WACLriB,SAASG,oBAAoB,mBAAoBkiB,MAElD,CAACA,IAEGF,E,aClBM,SAASG,IACtB,IAAQ3gF,EAAYF,cAAZE,QACAD,EAAYsxD,cAAZtxD,QACFygB,EAAWC,cAEXmgE,EAAgBL,IAEtB,EAA0B9lF,mBAAsE,CAC9FuF,UACAwlB,YAAa,OAFf,mBAAO5qB,EAAP,KAAcC,EAAd,KAKMgmF,EAAsBplF,uBAC1B,SAAC+pB,GACC3qB,GAAS,SAAC6jE,GACR,OAAI1+D,IAAY0+D,EAAK1+D,QACa,kBAArB0+D,EAAKl5C,YAAiC,CAAExlB,UAASwlB,eACrD,CAAExlB,UAASwlB,YAAaiG,KAAKgC,IAAIjI,EAAak5C,EAAKl5C,cAErDk5C,OAGX,CAAC1+D,EAASnF,IAIZC,qBAAU,WACR,GAAKiF,GAAYC,GAAY4gF,EAU7B,OARA/lF,EAAS,CAAEmF,UAASwlB,YAAa,OAEjCzlB,EACGq8C,iBACA9yB,KAAKu3D,GACL13D,OAAM,SAAC/S,GAAD,OAAWC,QAAQD,MAAR,kDAAyDpW,GAAWoW,MAExFrW,EAAQ+gF,GAAG,QAASD,GACb,WACL9gF,EAAQghF,eAAe,QAASF,MAEjC,CAACrgE,EAAUxgB,EAASD,EAAS8gF,EAAqBD,IAErD,IAAMI,EAAiB3lC,YAAYzgD,EAAO,KAO1C,OALAE,qBAAU,WACHkmF,EAAehhF,SAAYghF,EAAex7D,aAAgBo7D,GAC/DpgE,EAASwN,YAAkB,CAAEhuB,QAASghF,EAAehhF,QAASwlB,YAAaw7D,EAAex7D,iBACzF,CAACo7D,EAAepgE,EAAUwgE,EAAex7D,YAAaw7D,EAAehhF,UAEjE,K,0DC3CM,SAAS2gF,IACtB,IAAQ5gF,EAAYsxD,cAAZtxD,QACFygB,EAAWC,cACX4/D,EAAkBE,IAGlBxrD,EAAQqC,cACRpG,EAAiB8G,cAGvB5Z,cAEA,IAAM+9D,EAAY7qB,cAmDlB,OC3Ea,SAAqB6vB,EAAsB3lC,GAAuC,IAAjB4lC,IAAgB,yDACxFC,EAAgBhhF,mBAGtBrF,qBAAU,WACRqmF,EAAc5gF,QAAU0gF,IACvB,CAACA,IAGJnmF,qBAAU,WACR,SAASsmF,IACP,IAAQ7gF,EAAY4gF,EAAZ5gF,QACJA,GACFA,IAIJ,GAAc,OAAV+6C,EAAgB,CACd4lC,GAASE,IACb,IAAMhsE,EAAK+mC,YAAYilC,EAAM9lC,GAC7B,OAAO,kBAAMgB,cAAclnC,OAG5B,CAACkmC,EAAO4lC,IDUXG,CAR8B5lF,uBAAY,WACnC4kF,GACLvkF,OAAOC,KAAKg5B,GAAO/4B,SAAQ,SAACq1B,GAAD,OACzB4qD,EAAU5qD,GAAKlI,OAAM,SAAC/S,GAAD,OAAWC,QAAQ4Q,MAAM,+BAAgC7Q,WAE/E,CAAC6lE,EAAWoE,EAAiBtrD,IAGGh1B,EAAU,IAAiB,MAG9DjF,qBAAU,WACRgB,OAAOC,KAAKg5B,GAAO/4B,SAAQ,SAAC+0B,GAC1B,IAAMmG,EAAOnC,EAAMhE,GACdmG,EAAK32B,SAAY22B,EAAKzG,kBAAqByG,EAAK9gB,OACnD6lE,EAAUlrD,GAAS5H,OAAM,SAAC/S,GAAD,OAAWC,QAAQ4Q,MAAM,4BAA6B7Q,WAGlF,CAACoK,EAAUy7D,EAAWl8E,EAASg1B,IAGlCj6B,qBAAU,WACRgB,OAAOC,KAAK+0B,KAAuB90B,SAAQ,SAAC+0B,GAC1C,IAAMmG,EAAOnC,EAAMhE,GACdmG,IAAUA,EAAK32B,SAAY22B,EAAKzG,kBAAqByG,EAAK9gB,QAC7D6lE,EAAUlrD,GAAS5H,OAAM,SAAC/S,GAAD,OAAWC,QAAQ4Q,MAAM,4BAA6B7Q,WAGlF,CAACoK,EAAUy7D,EAAWl8E,EAASg1B,IAGlCj6B,qBAAU,WACRgB,OAAOC,KAAKg5B,GAAO/4B,SAAQ,SAAC+0B,GAC1B,IAAMmG,EAAOnC,EAAMhE,GACnB,GAAImG,EAAK32B,SAAW22B,EAAKxG,cAGvB,OAFac,YAAkB0F,EAAK32B,QAAQkxB,QAASyF,EAAKxG,cAAce,UAGtE,KAAKC,IAAeC,KAClB,MAAM,IAAI/0B,MAAM,8BAElB,KAAK80B,IAAe4vD,MACpB,KAAK5vD,IAAe6vD,MACpB,KAAK7vD,IAAe8vD,MAClBhhE,EAAS4R,YAAiBrB,UAIjC,CAACvQ,EAAUuU,EAAO/D,IAEd,K,qEEvET,SAASywD,EAAWC,EAAaj0D,GAC/B,OALYk0D,EAKAD,EAAMj2D,KAAKC,MAAMD,KAAKm2D,SAAWn2D,KAAKgC,IAAI,EAAGA,EAAMi0D,IAJxD,IAAIvnD,SAAQ,SAAC22C,GAAD,OAAap1B,WAAWo1B,EAAS6Q,MADtD,IAAcA,EAWP,IAAME,EAAb,kDACE,aAAe,uCACP,aAFV,sBAAoCjlF,QASvBklF,EAAb,wIAAoCllF,Q,yECKpC,WACEyuC,EACA02C,EACAC,GAHF,qBAAA7oF,EAAA,6DAKEkd,QAAQ4Q,MAAM,iBAAkBokB,EAAmB02C,EAAOC,GAL5D,kBAU6C32C,EAAkBxvB,UACzDkmE,EAAMxmE,KAAI,SAAC0mE,GAAD,MAAS,CAACA,EAAIrkF,QAASqkF,EAAIv6D,cAX3C,mCAUKw6D,EAVL,KAUyBpmE,EAVzB,6DAcIzF,QAAQ4Q,MAAM,qCAAd,MAdJ,kBAiBMi7D,EAAmBrgF,WAAamgF,GAjBtC,uBAkBI3rE,QAAQ4Q,MAAR,gDAAuDi7D,EAAmB7lF,WAA1E,gBAA4F2lF,IACtF,IAAIF,EAAe,gCAnB7B,iCAqBS,CAAEt6D,QAAS1L,EAAY0J,YAAa08D,EAAmBrgF,aArBhE,2D,sBAyFe,SAAS8+E,IACtB,IAAMngE,EAAWC,cACX7lB,EAAQ+lB,aAA6C,SAAC2R,GAAD,OAAOA,EAAEtX,aAE9DmnE,EAAqB9mC,YAAYzgD,EAAMg4B,cAAe,KACtD7L,EAAoBY,cAClB3nB,EAAYF,cAAZE,QACFqrC,EAAoBj0B,cACpBgrE,EAAgBjiF,mBAEhBkiF,EAA+CpuE,mBAAQ,WAC3D,OAtEG,SACLquE,EACAtiF,GAEA,IAAKsiF,IAAiBtiF,EAAS,MAAO,GACtC,IAAM2yB,EAAY2vD,EAAatiF,GAC/B,OAAK2yB,EAEE72B,OAAOC,KAAK42B,GAAW/U,QAAsC,SAACyG,EAAMwO,GACzE,IAAM0vD,EAAe5vD,EAAUE,GAW/B,OATAxO,EAAKwO,GAAW/2B,OAAOC,KAAKwmF,GACzB7+D,QAAO,SAAChoB,GACP,IAAM+pB,EAAiButB,SAASt3C,GAChC,QAAI+pB,GAAkB,IACf88D,EAAa98D,GAAkB,KAEvC7H,QAAO,SAAC4kE,EAAajiF,GACpB,OAAOkrB,KAAKi2D,IAAIc,EAAaxvC,SAASzyC,MACrCmlB,KACErB,IACN,IAfoB,GAgEdo+D,CAAoBN,EAAoBniF,KAC9C,CAACmiF,EAAoBniF,IAElB0iF,EAA+BzuE,mBAAQ,WAC3C,OA3CG,SACL2R,EACAy8D,EACAriF,EACA+mB,GAEA,OAAK/mB,GAAY+mB,EACDnB,EAAY5lB,GAIrBlE,OAAOC,KAAKsmF,GAAe3+D,QAAO,SAACmP,GACxC,IAAMpN,EAAiB48D,EAAcxvD,GAE/Br5B,EAAOosB,EAAY5lB,GAAS6yB,GAElC,IAAKr5B,EAAM,OAAO,EAElB,IAAMmpF,EAAqB57D,GAAqBtB,EAAiB,GAGjE,QAAIjsB,EAAKu5B,qBAAuBv5B,EAAKu5B,qBAAuB4vD,MAGpDnpF,EAAKgsB,aAAehsB,EAAKgsB,YAAcm9D,MAf5B7mF,OAAOC,KAAKsmF,GAHU,GAqClCO,CAAsBhoF,EAAMgrB,YAAay8D,EAAeriF,EAAS+mB,KACvE,CAAC/mB,EAASpF,EAAMgrB,YAAay8D,EAAet7D,IAEzC87D,EAA6B5uE,mBACjC,kBAAM6R,KAAKC,UAAU28D,EAA6Bx8D,UAClD,CAACw8D,IAwEH,OArEA5nF,qBAAU,WAAO,IAAD,EACd,GAAKisB,GAAsB/mB,GAAYqrC,EAAvC,CAEA,IAAMy3C,EAA6Bh9D,KAAKM,MAAMy8D,GAC9C,GAAgC,IAA5BC,EAAiBxjE,OAArB,CACA,IAI8D,IAJxDrE,EAAQ6nE,EAAiBvnE,KAAI,SAAC7f,GAAD,OAAS2qB,YAAa3qB,MAEnDqnF,EChJK,SAAuBC,EAAYC,GAChD,GAAIA,EAAe,EAAG,MAAM,IAAIrmF,MAAM,8BACtC,GAAIomF,EAAM1jE,QAAU2jE,EAAc,MAAO,CAACD,GAE1C,IAAME,EAAoBz3D,KAAK03D,KAAKH,EAAM1jE,OAAS2jE,GAC7CG,EAAY33D,KAAK03D,KAAKH,EAAM1jE,OAAS4jE,GAE3C,OAAO,YAAIh+D,MAAMg+D,GAAWnnF,QAAQwf,KAAI,SAAC8nE,GAAD,OAAQL,EAAMtrD,MAAM2rD,EAAKD,EAAWC,EAAKD,EAAYA,MDyItEE,CAAWroE,EA/HZ,KAiIpB,IAAI,UAAAmnE,EAAc7hF,eAAd,eAAuBilB,eAAgBuB,EACzC,UAAAq7D,EAAc7hF,eAAd,mBAAuB6hF,qBAAvB,SAAsCpmF,SAAQ,SAACgqB,GAAD,OAAOA,OAGvDxF,EACEsS,YAAyB,CACvB7X,QACAjb,UACA+yB,oBAAqBhM,KAIzBq7D,EAAc7hF,QAAU,CACtBilB,YAAauB,EACbq7D,cAAeW,EAAaxnE,KAAI,SAACwmE,EAAOjpD,GACtC,MDpID,SACLyqD,EADK,GAGyC,IAE1CC,EAHFC,EAC2C,EAD3CA,EAAGC,EACwC,EADxCA,QAASC,EAC+B,EAD/BA,QAEVC,GAAY,EA2BhB,MAAO,CACLC,QA1Bc,IAAI1pD,QAAJ,uCAAe,WAAO22C,EAASC,GAAhB,eAAA53E,EAAA,sDAC7BqqF,EAAkBzS,EADW,cAGvB10D,OAHuB,oBAKVknE,IALU,cAKzBlnE,EALyB,OAMpBunE,IACH9S,EAAQz0D,GACRunE,GAAY,GARW,2DAYrBA,EAZqB,0DAerBH,GAAK,IAAO,gBAAiB3B,EAfR,wBAgBvB/Q,EAAO,EAAD,IACN6S,GAAY,EAjBW,6BAoBzBH,IApByB,yBAsBrBhC,EAAWiC,EAASC,GAtBC,iFAAf,yDA2BdG,OAAQ,WACFF,IACJA,GAAY,EACZJ,EAAgB,IAAI3B,MCgGUkC,EAAM,kB,+CAAMC,CAAW34C,EAAmB02C,EAAOh7D,KAAoB,CAC/F08D,EAAG/9D,IACHg+D,QAAS,KACTC,QAAS,OAHHG,EAAR,EAAQA,OAwCR,OAxCA,EAAgBD,QAMbv6D,MAAK,YAA6D,IAAjDxN,EAAgD,EAAzD0L,QAAkCy8D,EAAuB,EAApCz+D,YAC5B48D,EAAc7hF,QAAU,CAAE6hF,cAAe,GAAI58D,YAAauB,GAG1D,IAAMm9D,EAAoBnB,EAAarrD,MAAM,EAAGoB,GAAOlb,QAAe,SAACyG,EAAM0/B,GAAP,OAAgB1/B,EAAO0/B,EAAKzkC,SAAQ,GACpG6kE,EAAmBD,EAAoBpoE,EAAWwD,OAExDkB,EACEyS,YAAuB,CACrBjzB,UACAwnB,QAASs7D,EACNprD,MAAMwsD,EAAmBC,GACzBvmE,QAA6C,SAACyG,EAAMwO,EAAS7W,GAAO,IAAD,EAElE,OADAqI,EAAKwO,GAAL,UAAgB/W,EAAWE,UAA3B,QAAiC,KAC1BqI,IACN,IACLmB,YAAay+D,QAIlB96D,OAAM,SAAC/S,GACFA,aAAiByrE,EACnBxrE,QAAQ4Q,MAAM,kCAAmCF,IAGnD1Q,QAAQD,MAAM,kCAAmC2rE,EAAO/hF,EAASoW,GACjEoK,EACEwS,YAA8B,CAC5B/X,MAAO8mE,EACP/hF,UACA+yB,oBAAqBhM,SAItB+8D,UAGV,CAAC9jF,EAASqrC,EAAmB7qB,EAAUqiE,EAA4B97D,IAE/D,K,2CEhLM,SAAS45D,IACtB,IAAQ5gF,EAAYsxD,cAAZtxD,QACAC,EAAYF,cAAZE,QAEFokF,EAAkBz8D,cAElBnH,EAAWC,cACX7lB,EAAQ+lB,aAAgD,SAAC2R,GAAD,OAAOA,EAAErD,gBAEjEA,EAAehb,mBAAQ,wBAAOjU,GAAO,UAAGpF,EAAMoF,UAAT,QAA0B,KAAK,CAACA,EAASpF,IAEpF,EAAqCmvC,cAA7B8jB,EAAR,EAAQA,WAAY0E,EAApB,EAAoBA,aAmDpB,OAjDAz3D,qBAAU,WACHkF,GAAYD,GAAYqkF,GAE7BtoF,OAAOC,KAAKkzB,GACTvL,QAAO,SAACwL,GAAD,OAtCP,SACLk1D,EACA50D,GAEA,GAAIA,EAAGG,QAAS,OAAO,EACvB,IAAKH,EAAGC,uBAAwB,OAAO,EACvC,IAAM40D,EAAmBD,EAAkB50D,EAAGC,uBAC9C,GAAI40D,EAAmB,EAAG,OAAO,EACjC,IAAMC,IAAkB,IAAIj2D,MAAOC,UAAYkB,EAAGH,WAAa,IAAO,GACtE,OAAIi1D,EAAiB,GAEZD,EAAmB,IAExBC,EAAiB,IAEZD,EAAmB,EAuBNE,CAAYH,EAAiBn1D,EAAaC,OAC3DlzB,SAAQ,SAACkzB,GACRnvB,EACGykF,sBAAsBt1D,GACtB5F,MAAK,SAACqG,GACS,IAAD,IAATA,GACFnP,EACEkP,YAAoB,CAClB1vB,UACAkvB,OACAS,QAAS,CACP80D,UAAW90D,EAAQ80D,UACnBj/D,YAAamK,EAAQnK,YACrBrM,gBAAiBwW,EAAQxW,gBACzBtW,KAAM8sB,EAAQ9sB,KACd2jC,OAAQ7W,EAAQ6W,OAChBkI,GAAI/e,EAAQ+e,GACZg2C,gBAAiB/0D,EAAQ+0D,gBACzBC,iBAAkBh1D,EAAQg1D,sBAKC,IAAnBh1D,EAAQ6W,OAAe+rB,EAAe1E,GAElD,sBACA,eAAC,IAAD,CAAMpB,cAAc,SAApB,UACE,cAAC,KAAD,8BAAOx9B,EAAaC,UAApB,aAAO,EAAoB3F,eAA3B,wBAA+C2F,EAAKwI,MAAM,EAAG,GAA7D,cAAqExI,EAAKwI,MAAM,GAAI,OACnF13B,GACC,cAAC,KAAD,CAAMkgD,UAAQ,EAACC,KAAMlwC,YAAeif,EAAM,cAAelvB,GAAzD,kCAONwgB,EAAS+O,YAAmB,CAAEvvB,UAASkvB,OAAM1J,YAAa4+D,QAG7Dj7D,OAAM,SAAC/S,GACNC,QAAQD,MAAR,4CAAmD8Y,GAAQ9Y,WAGlE,CAACpW,EAASD,EAASkvB,EAAcm1D,EAAiB5jE,EAAU+xC,EAAc1E,IAEtE,K,gDC1FG+2B,G,uCCANC,GAAqB,uCAAG,sBAAA1rF,EAAA,+EAC5B,IAAIghC,SAAc,SAAC22C,GAAD,OAChBh1E,OAAOgpF,eAAennC,OAAQ,eAAgB,CAC5C3iD,IAD4C,WAE1C,OAAO67B,KAAKkuD,KAEd7qF,IAJ4C,SAIxC6qF,GACFluD,KAAKkuD,IAAMA,EAEXjU,WATsB,2CAAH,qDAqCZkU,GAvBS,WACtB,IAAQj4C,EAAUD,eAAVC,MAERjyC,qBAAU,WACR,IAAMmqF,EAActnC,OAAOjkD,aAAaC,QAAQu0D,MAEhD,GAAI+2B,EAAa,CACf,IAAMC,EAA0BD,IAAgBp9B,IAAeG,IACzDm9B,EAAwBC,QAAQ9pF,IAAIqiD,OAAQ,gBAIlD,GAAIunC,IAA4BC,EAG9B,YAFAN,KAAwBv7D,MAAK,kBAAMyjB,EAAMk4C,MAK3Cl4C,EAAMk4C,MAEP,CAACl4C,K,wDCfSs4C,GAdKC,aAAH,4LAKO,qBAAGt5C,MAAkBG,OAAOC,c,qCCwIrC3zB,GAnJqC,SAACjc,GAAD,MAAO,CACzD,CACEk4D,MAAOl4D,EAAE,QACT+oF,KAAM,WACNplC,KAAM,KAER,CACEuU,MAAOl4D,EAAE,SACT+oF,KAAM,YACNvC,MAAO,CACL,CACEtuB,MAAOl4D,EAAE,YACT2jD,KAAM,SAER,CACEuU,MAAOl4D,EAAE,aACT2jD,KAAM,WAIZ,CACEuU,MAAOl4D,EAAE,SACT+oF,KAAM,WACNplC,KAAM,UAER,CACEuU,MAAOl4D,EAAE,SACT+oF,KAAM,WACNplC,KAAM,UAER,CACEuU,MAAO,iBACP6wB,KAAM,WACNplC,KAAM,oCAER,CACEuU,MAAO,YACP6wB,KAAM,WACNvC,MAAO,CACL,CACEtuB,MAAO,gBACPvU,KAAM,wCAER,CACEuU,MAAO,gBACPvU,KAAM,4CAIZ,CACEuU,MAAO,aACP6wB,KAAM,aACNvC,MAAO,CACL,CACEtuB,MAAO,aACPvU,KAAM,qCAER,CACEuU,MAAO,WACPvU,KAAM,mFCnBCqlC,GAhCF,SAAC5tE,GACZ,IAAQrG,EAAYzR,cAAZyR,QACR,EAA0Bu7B,eAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACf,EAAgCjB,eAAxBxqB,EAAR,EAAQA,OAAQwN,EAAhB,EAAgBA,YACVspC,EAAe3uB,eAErB,GADoB70B,eAAZof,QACoCx3B,gBAApC1C,EAAR,EAAQA,gBAAiBqB,EAAzB,EAAyBA,YAAaoB,EAAtC,EAAsCA,EAEtC,OACE,cAAC,KAAD,cACE+U,QAASA,EACTw7B,MAAOA,EACPC,OAAQA,EACRzrB,OAAQA,EACRwN,YAAaA,EACb02D,YAAa1rF,EAAgB4yC,KAC7B+4C,MAAO94C,KACP+4C,QAASvqF,EACTi9D,aAAcA,EAAax2D,WAC3B+jF,MAAOntE,GAAOjc,IAQVob,K,SCWKiuE,G,kDA1Cb,WAAYjuE,GAAQ,IAAD,8BACjB,cAAMA,IACDhd,MAAQ,CAAEkrF,UAAU,GAFR,E,sDAUnB,SAAkB1vE,GAAQ,IAAD,EACjB2vE,EAAoC,mBAAf3vE,EAAMuF,KAC3BqqE,EAAqC,0BAAf5vE,EAAMu2B,KAC5Bs5C,EAAmBF,GAAsBC,EAIzCE,KAA8B,UAACvoC,OAAOglB,QAAQ/nE,aAAhB,aAAC,EAAsBsrF,4BAG3D,GAAID,IAAqBC,EAA4B,CACnD,IAAMC,EAAS,6BAAQxoC,OAAOglB,QAAQ/nE,OAAvB,IAA8BsrF,4BAA4B,IAGzE,OAFAvoC,OAAOglB,QAAQyjB,aAAaD,EAAW,SACvCxoC,OAAO2c,SAAS+rB,SAIlB,MAAMjwE,I,oBAGR,WACE,IAAQ0vE,EAAajvD,KAAKj8B,MAAlBkrF,SACAQ,EAAazvD,KAAKjf,MAAlB0uE,SAER,OAAIR,EACKQ,EAGF,cAAC,WAAD,gBAAczvD,KAAKjf,W,uCAjC5B,WAEE,MAAO,CAAEkuE,UAAU,O,GARc5yB,IAAMqzB,W,iIC6D9BC,GAAe,WAC1B,MAcI7lE,aAAY,SAAC/lB,GAAD,OAAkBA,EAAMi5B,MAAMqJ,aAb/BupD,EADf,EACEpqD,YACmBqqD,EAFrB,EAEEj6D,kBACkBk6D,EAHpB,EAGErqD,iBAC2BsqD,EAJ7B,EAIE5qD,0BACyB6qD,EAL3B,EAKE5qD,wBALF,IAMEkB,KAAQ/R,EANV,EAMUA,eAAgBoR,EAN1B,EAM0BA,QAASC,EANnC,EAMmCA,cAAeC,EANlD,EAMkDA,oBANlD,IAOEU,SACEN,EARJ,EAQIA,UACYgqD,EAThB,EASIt6D,WACsBu6D,EAV1B,EAUIx6D,qBACAwQ,EAXJ,EAWIA,kBACAC,EAZJ,EAYIA,mBAIEhB,EAA4B/nB,mBAAQ,WACxC,OAAO,IAAIrT,KAAUgmF,KACpB,CAACA,IAEE3qD,EAA0BhoB,mBAAQ,WACtC,OAAO,IAAIrT,KAAUimF,KACpB,CAACA,IAsBJ,MAAO,CACLxqD,YArBkBpoB,mBAAQ,WAC1B,OAAO,IAAIrT,KAAU6lF,KACpB,CAACA,IAoBFh6D,kBAlBwBxY,mBAAQ,WAChC,OAAO,IAAIrT,KAAU8lF,KACpB,CAACA,IAiBFpqD,iBAfuBroB,mBAAQ,WAC/B,OAAO,IAAIrT,KAAU+lF,KACpB,CAACA,IAcF3qD,4BACAC,0BACAkB,KAAM,CACJ/R,iBACAoR,UACAC,gBACAC,uBAEFU,SAAU,CACRN,YACAtQ,WAtBevY,mBAAQ,WACzB,OAAO,IAAIrT,KAAUkmF,KACpB,CAACA,IAqBAv6D,qBAnByBtY,mBAAQ,WACnC,OAAO,IAAIrT,KAAUmmF,KACpB,CAACA,IAkBAhqD,oBACAC,wB,oHC/DSgqD,GApDuB,SAAC,GAAkC,IAAhCpuE,EAA+B,EAA/BA,KAA+B,IAAzBwS,sBAAyB,MAAR,EAAQ,EAC9D5uB,EAAMC,eAAND,EACAy8B,EAAgFrgB,EAAhFqgB,aAAcmF,EAAkExlB,EAAlEwlB,aAAc9Q,EAAoD1U,EAApD0U,WAAY/B,EAAwC3S,EAAxC2S,IAAKD,EAAmC1S,EAAnC0S,kBAAmBD,EAAgBzS,EAAhByS,YAElE47D,EACFzqF,EADmB6uB,EACjB,gHACA,iFAEN,EAA+CkV,aAAW0mD,EAAgB,CAAEzmD,UAAW,iBAA/EE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAE5B,EAAkFzV,aAAWvS,EAAMwS,GAAtF87D,EAAb,EAAQ37D,IAAkCI,EAA1C,EAA0CA,iBAAkBC,EAA5D,EAA4DA,kBAEtDu7D,EAAeluD,EAAar7B,QAAb,+BAA+CD,aAAWs7B,EAAar7B,UAAa,QAEzG,EAA4BiuD,aAC1B,cAACgQ,GAAA,EAAD,CACE3vC,WAAYZ,EACZC,IAAKA,EACLwwC,UAAWv/D,EAAE,eAAgB,CAAEyH,OAAQg1B,EAAah1B,SACpD+3D,SAAUmrB,EACVlrB,mBAAoB79B,EAAan6B,OACjC0nB,iBAAkBA,EAClBC,kBAAmBA,EACnBR,eAAgBA,KATbg8D,EAAP,oBAaA,OACE,eAAC,IAAD,CAAMz7B,WAAW,SAAS7K,eAAe,gBAAzC,UACGlgB,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAlB,SAAyC,UAAMlkC,EAAjB6uB,EAAmB,MAAiB,OAAzB,OACxCiC,IAAe/B,EACd,cAAC,KAAD,CAAUvuB,MAAM,OAAOu4E,OAAO,SAE9B,eAAC,IAAD,CAAM5pB,WAAW,SAAjB,UACE,cAACr0C,GAAA,EAAD,CACEooC,SAAS,OACTloC,WAAY8V,EACZ/wB,MAAO2qF,EACP5lF,SAAU,EACVmW,KAAK,IACLkoC,MAAI,IAEN,cAAC,IAAD,CAAYhoC,QAASyvE,EAAmB/mC,QAAQ,OAAOgK,MAAM,KAA7D,SACE,cAAC,IAAD,CAAe9yC,MAAM,aAAava,MAAM,kBCvD9CqqF,GAAmBt4B,aAAH,+KAgBTu4B,GAAaxqF,aAAOovC,IAAPpvC,CAAH,oSAOZ,gBAAGwwB,EAAH,EAAGA,WAAH,SAAe0e,MAAkBG,OAAO7e,EAAa,eAAiB,gBAG7E,gBAAGi6D,EAAH,EAAGA,WAAYv7C,EAAf,EAAeA,MAAf,OACAu7C,EACI3S,aADM,0KAEkC5oC,EAAMG,OAAOgzC,cAAkBnzC,EAAMG,OAAOizC,WAF9E,uBAMS,SAACxnE,GAAD,OAAWA,EAAMo0B,MAAMkzC,KAAK9yC,aANrC,QAQV,gBAAGm7C,EAAH,EAAGA,WAAH,OACAA,GACAA,EAAWC,WACX5S,aAFA,wEAGeyS,OAGf,qBAAGr7C,MAAkBksB,aAAaxe,MAKzB+tC,GAAkB3qF,aAAOC,IAAPD,CAAH,wEACZ,qBAAGkvC,MAAkBkzC,KAAK9yC,cACvB,qBAAGJ,MAAkB07C,MAAMxI,Q,sCCnBxCyI,GAAkB7qF,aAAOmwD,IAAPnwD,CAAH,gFAOf8qF,GAAgD,SAAC,GAAuB,IAAD,EAApBhvE,EAAoB,EAApBA,KAAMrH,EAAc,EAAdA,QACrD/U,EAAMC,eAAND,EACA2wB,EAAiBovB,eAAjBpvB,aACR,EAGIq5D,KAFFlqD,EADF,EACEA,iBACQlR,EAFV,EAEE+R,KAAQ/R,eAIR6N,EASErgB,EATFqgB,aACAmF,EAQExlB,EARFwlB,aACA3E,EAOE7gB,EAPF6gB,YACArM,EAMExU,EANFwU,WACAC,EAKEzU,EALFyU,SACAwM,EAIEjhB,EAJFihB,aACA1gB,EAGEP,EAHFO,gBACAN,EAEED,EAFFC,OACAwS,EACEzS,EADFyS,YAGI9U,EAAe6nB,EAAaxgC,QAAUD,aAAWygC,EAAaxgC,SAAW,GACzEiqF,EAAsBlqF,aAAWwb,GACjC2uE,EAA2B9oF,eAC3B+oF,KAAqB,UAACpqC,OAAOC,gBAAR,aAAC,EAAiBwC,YACvC4nC,EAA8B,IAAXnvE,EAEzB,EACEqU,aAAiBtU,EAAMuU,GADjBI,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,iBAAkBE,EAApD,EAAoDA,gBAAiBC,EAArE,EAAqEA,eAAgBC,EAArF,EAAqFA,gBAGrF,EAA+C2S,aAC7C/jC,EAAE,gEACF,CAAEgkC,UAAW,iBAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAgB5B,EAIIL,aAAW/jC,EAAE,+CAAgD,CAAEyH,OAAQg1B,EAAah1B,SAAW,CACjGu8B,UAAW,WAJAynD,EADb,EACEvnD,UACSwnD,EAFX,EAEEvnD,QACgBwnD,EAHlB,EAGEvnD,eAKF,OACE,eAAC+mD,GAAD,CAAiBl7B,cAAc,SAA/B,UACE,eAAC,IAAD,CAAMrC,GAAG,MAAMtJ,eAAe,gBAAgB6K,WAAW,SAAzD,UACE,eAAC,KAAD,CAAM/L,OAAK,EAAX,UAAapjD,EAAE,gBAAf,OACA,eAAC,IAAD,CAAMmvD,WAAW,aAAjB,UACGlyB,GAAeA,EAAY1M,IAAI,GAC9B,qCACE,cAACzV,GAAA,EAAD,CAASsoC,OAAK,EAACrjD,MA1BG,WAC5B,GAAI8uB,EACF,OAAO1pB,aAAiB26B,EAAkBrD,EAAa33B,UAEzD,GAAI0mF,EAAkB,CACpB,IAAMI,EAAgC,IAAIxnF,KAAU64B,GAAa5M,MAAMyP,GACvE,OAAO36B,aAAiBymF,EAA+BnvD,EAAa33B,UAEtE,OAAOK,aAAiB83B,EAAaR,EAAa33B,UAkBlB+mF,GAAyB/mF,SAAU,EAAGmW,KAAI,WAAMwhB,EAAah1B,UACnF,sBAAM48B,IAAKonD,EAAX,SACE,cAAC,IAAD,CAAU1wE,MAAM,aAAava,MAAM,OAAOwjD,GAAG,MAAMF,GAAG,aAI1D,cAAC,KAAD,CAAUtjD,MAAM,OAAOu4E,OAAO,SAE/B4S,GAA6BD,QAGjCruD,GAAgBA,EAAalN,GAAG,IAC/B,eAAC,IAAD,CAAMy9B,GAAG,MAAMtJ,eAAe,gBAA9B,UACE,eAAC,KAAD,CAAMlB,OAAK,EAAX,UAAapjD,EAAE,uBAAf,OACA,cAAC,KAAD,CAAMojD,OAAK,EAAX,mBAAgB99C,aAAsB+3B,EAAcZ,EAAa33B,SAAU,GAA3E,YAAiF23B,EAAah1B,aAGjGspB,GACC,eAAC,IAAD,CAAM68B,GAAG,MAAMtJ,eAAe,gBAAgB6K,WAAW,SAAzD,UACE,eAAC,KAAD,CAAM/L,OAAK,EAAX,UAA8BpjD,EAAjBmxB,EAAmB,UAAe,aAA/C,OACCD,GAAmBF,EAClB,cAAC,IAAD,CAAMm+B,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMzL,UAAQ,EAACC,KAAMlwC,YAAe0d,EAAiBN,EAAWD,EAAY,aAA5E,UACE,cAAC9V,GAAA,EAAD,CAASsoC,OAAK,EAACrjD,MAAOqxB,EAAiBtsB,SAAU,EAAGiW,MAAM,YAC1D,cAAC,KAAD,CAAMqoC,OAAK,EAACY,GAAG,MAAMjpC,MAAM,UAAU+kD,cAAc,YAAnD,SACG9/D,EAAE,YAEL,cAAC,KAAD,CAAWgkD,GAAG,MAAMjpC,MAAM,iBAI9B,cAAC,KAAD,CAAUva,MAAM,OAAOu4E,OAAO,YAInClqD,GACC,eAAC,IAAD,CAAM++B,GAAG,MAAMtJ,eAAe,gBAAgB6K,WAAW,SAAzD,UACG/qB,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWkf,OAAK,EAAlC,SACGpjD,EAAE,qBAEL,cAAC,IAAD,CAAMmvD,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMnL,GAAG,MAAMZ,OAAK,EAApB,UACGx0B,EAAiB,IADpB,YAMN,cAAC,IAAD,CAAMg/B,GAAG,MAAMtJ,eAAe,WAA9B,SACE,cAAC,KAAD,CAAcX,KAAI,yCAAoCxiD,aAAWygC,EAAaxgC,UAAY+hD,MAAM,EAAOC,OAAK,EAA5G,SACGpjD,EAAE,sBAGP,cAAC,IAAD,CAAM4tD,GAAG,MAAMtJ,eAAe,WAA9B,SACE,cAAC,KAAD,CAAcX,KAAM/hB,EAAal6B,YAAay7C,MAAM,EAAOC,OAAK,EAAhE,SACGpjD,EAAE,yBAGNqrF,GACC,cAAC,IAAD,CAAMz9B,GAAG,MAAMtJ,eAAe,WAA9B,SACE,cAAC,KAAD,CACEX,KAAI,UAAKnqB,KAAL,oBAAkC3K,EAAcy8D,EAA2BD,GAC/EloC,MAAM,EACNC,OAAK,EAHP,SAKGpjD,EAAE,qBAIR+U,GAAWw2E,GAAqBxxE,GAC/B,cAAC,IAAD,CAAMuqC,eAAe,WAArB,SACE,eAAC,IAAD,CACET,QAAQ,OACR18B,EAAE,IACF4xD,OAAO,OACP59D,QAAS,kBAAMumC,aAAc3nC,EAAc6nB,EAAan6B,OAAQm6B,EAAa98B,WAJ/E,UAME,cAAC,KAAD,CAAMiW,MAAM,UAAUmoC,SAAS,OAA/B,SACGljD,EAAE,qBAEL,cAAC,KAAD,CAAcgkD,GAAG,iBAQd0S,OAAM7uC,KAAKujE,IC7KpBU,GAA0BxrF,aAAOmwD,IAAPnwD,CAAH,4HAyCdm9D,GAjCuB,SAAC,GAAuB,IAArBrhD,EAAoB,EAApBA,KAAMrH,EAAc,EAAdA,QACrC8Z,EAAgBzS,EAAhByS,YACA7uB,EAAMC,eAAND,EACR,EAAoC/B,oBAAS,GAA7C,mBAAO8tF,EAAP,KAAmBC,EAAnB,KAEMC,EAAoBjsF,EAAE,wEACtBksF,EAAkBlsF,EACtB,uGAGF,EAA+C+jC,aAAWlV,EAAcq9D,EAAkBD,EAAmB,CAC3GjoD,UAAW,WADLE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAI5B,OACE,eAAC,IAAD,WACE,eAAC0nD,GAAD,WACE,eAAC,IAAD,CAAM38B,WAAW,SAAjB,UACGtgC,EAAc,cAAC,KAAD,IAAyB,cAAC,KAAD,IACvCuV,GAAkBD,EACnB,cAAC,IAAD,CAAME,IAAKH,EAAX,SACE,cAAC,IAAD,CAAU8f,GAAG,MAAMxjD,MAAM,OAAOu4E,OAAO,OAAOh+D,MAAM,oBAGxD,cAAC,IAAD,CAAiBoxE,SAAUJ,EAAY5wE,QAAS,kBAAM6wE,GAAeD,IAArE,SACgB/rF,EAAb+rF,EAAe,OAAY,gBAG/BA,GAAc,cAAC,GAAD,CAAgB3vE,KAAMA,EAAMrH,QAASA,Q,mBCxC3Cq3E,GANoD,SAAChxE,GAClE,IAAMixE,EAAe,yBAAqBlrF,aAAWK,KAAOC,KAAKL,SAA5C,QAErB,OAAO,cAAC,KAAD,cAAgB+7D,WAAYkvB,EAAiBjvB,aAAa,gCAAmChiD,KCAhG0E,GAAUxf,aAAOgsF,IAAPhsF,CAAH,0EACG,gBAAGwwB,EAAH,EAAGA,WAAY8e,EAAf,EAAeA,WAAYJ,EAA3B,EAA2BA,MAA3B,OACZ1e,EAAa0e,EAAMG,OAAO48C,mBAAqB/8C,EAAMG,OAAOquB,UAAUpuB,MACvD,gBAAGJ,EAAH,EAAGA,MAAH,gBAAkBA,EAAM07C,MAAMxI,KAA9B,YAAsClzC,EAAM07C,MAAMxI,KAAlD,WAwDJ8J,GA/CV,SAAC,GAAgG,IAA9F5qD,EAA6F,EAA7FA,aAAcnF,EAA+E,EAA/EA,aAA+E,IAAjE3L,kBAAiE,aAA7CjC,mBAA6C,aAAxB49D,iBAAwB,SAC3FzsF,EAAMC,eAAND,EACF0sF,EAAqC,QAAxB9qD,EAAan6B,QAA4C,QAAxBg1B,EAAah1B,OAC3DmoC,EAAa68C,EAAY,YAAc,aAyB7C,OACE,cAAC3sE,GAAD,CAASgR,WAAYA,EAAY8e,WAAYA,EAA7C,SACE,eAAC,IAAD,CAAMuf,WAAW,SAAS7K,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAM2L,cAAc,SAApB,UACE,cAAC,IAAD,CAASl1C,MAAO+V,EAAa,eAAiB,OAAQ+8B,MAAM,KAA5D,mBAxBG7tD,EAFL6uB,EAEO,OAEP69D,EAEO,SAGF,QAiBH,YAC4B9qD,EAAan6B,UAEzC,cAAC,KAAD,CAAMsT,MAAO+V,EAAa,eAAiB,aAA3C,SAhBFjC,EACK7uB,EAAE,uBAEP0sF,EACK1sF,EAAE,uBAEJA,EAAE,iBAAkB,CAAEyH,OAAQg1B,EAAah1B,cAY7ConB,EACC,cAAC,GAAD,CAAyBruB,MAAO,GAAIu4E,OAAQ,KAE5C,cAAC,KAAD,CAAgB9b,aAAcr7B,EAAcs7B,eAAgBzgC,EAAcj8B,MAAO,GAAIu4E,OAAQ,W,0DCjD1F4T,GAAiB,SAACC,EAAsBvwE,EAAQojD,GAC3D,MAAkDxhE,oBAAS,GAA3D,mBAAO4uF,EAAP,KAA0BC,EAA1B,KACA,EAAqCv/C,cAA7BwoB,EAAR,EAAQA,aAAc1E,EAAtB,EAAsBA,WACdrxD,EAAMC,eAAND,EACFgkB,EAAW+U,eACThkB,EAAYzR,cAAZyR,QACFg4E,EAAmBp0E,YAAY0D,GA0BrC,MAAO,CAAE2wE,cAxBa/tF,sBAAW,sBAAC,8BAAAtC,EAAA,sEAE9BmwF,GAAqB,GAFS,SAGbF,EAAWrgE,QAAQwgE,EAAiB3rF,QAASgF,KAAO6mF,UAAUvgE,YAHjD,cAGxBsG,EAHwB,gBAIRA,EAAG81B,OAJK,OAIxB31B,EAJwB,OAM9BnP,EAASwe,aAAoBnmB,EAAQtH,IACjCoe,EAAQ6W,QACV+rB,EACE/1D,EAAE,oBACFA,EAAE,0CAA2C,CAAEyH,OAAQg4D,KAEzDqtB,GAAqB,KAGrBz7B,EAAWrxD,EAAE,SAAUA,EAAE,uFACzB8sF,GAAqB,IAhBO,kDAmB9BjzE,QAAQD,MAAR,MACAy3C,EAAWrxD,EAAE,SAAUA,EAAE,uFApBK,0DAsB/B,CAAC+U,EAASiP,EAAU4oE,EAAYG,EAAkB1wE,EAAQojD,EAAoBz/D,EAAGqxD,EAAY0E,IAExE82B,sBAIbK,GAAkB,SAAChgB,GAC9B,MAAkDjvE,oBAAS,GAA3D,mBAAO4uF,EAAP,KAA0BC,EAA1B,KACQ9sF,EAAMC,eAAND,EACR,EAAqCutC,cAA7BwoB,EAAR,EAAQA,aAAc1E,EAAtB,EAAsBA,WAChBlxB,EAAoB7mB,cACpB6zE,EAAel1E,cAgBrB,MAAO,CAAE+0E,cAdU,uCAAG,4BAAArwF,EAAA,sEACHwwF,EAAa5gE,QAAQ4T,EAAkB/+B,QAASgF,KAAO6mF,UAAUvgE,YAD9D,cACdsG,EADc,OAEpB85D,GAAqB,GAFD,SAGE95D,EAAG81B,OAHL,cAIR9e,QACV+rB,EAAa/1D,EAAE,oBAAqBA,EAAE,2CAA4C,CAAEyH,OAAQ,SAC5FylE,IACA4f,GAAqB,KAErBz7B,EAAWrxD,EAAE,SAAUA,EAAE,uFACzB8sF,GAAqB,IAVH,2CAAH,qDAcKD,sBAGbO,GAA8B,WACzC,MAA8CnvF,oBAAS,GAAvD,mBAAOovF,EAAP,KAAwBC,EAAxB,KACQv4E,EAAYzR,cAAZyR,QACFo4E,EAAel1E,cACfkoB,EAAoB7mB,cAC1B,EAAwCwzD,eAAhCC,EAAR,EAAQA,YAAaG,EAArB,EAAqBA,eAerB,OAdA5uE,qBAAU,YACiB,uCAAG,8BAAA3B,EAAA,+EAEDwwF,EAAa1hE,UAAU1W,EAASorB,EAAkB/+B,SAFjD,OAElBtE,EAFkB,OAGlB8uB,EAAmB,IAAIxnB,KAAUtH,EAAS+C,YAChDytF,EAAmB1hE,EAAiBuE,GAAG,IAJf,gDAMxBm9D,GAAmB,GANK,yDAAH,qDAUzBC,KACC,CAACx4E,EAASo4E,EAAchtD,EAAmB4sC,IAEvC,CAAEsgB,kBAAiBngB,mBCrDbsgB,GAzBuC,SAAC,GAAiC,IAA/BpxE,EAA8B,EAA9BA,KAA8B,IAAxBkkB,iBAAwB,SAC7EjkB,EAAuCD,EAAvCC,OAAQogB,EAA+BrgB,EAA/BqgB,aAAcmF,EAAiBxlB,EAAjBwlB,aACtB5hC,EAAMC,eAAND,EACFytF,EAAuB51E,YAAS4kB,EAAar7B,QAAUD,aAAWs7B,EAAar7B,SAAW,IAChG,EAA6CurF,GAAec,EAAsBpxE,EAAQulB,EAAan6B,QAA/FulF,EAAR,EAAQA,cAAeH,EAAvB,EAAuBA,kBAEvB,OACE,mCACGvsD,EACC,cAAC,KAAD,CAAU9/B,MAAM,OAAOu4E,OAAO,SAE9B,cAAC,IAAD,CACEz4C,UAAWusD,EACXa,QAASb,EAAoB,cAAC,IAAD,CAAec,MAAI,EAAC5yE,MAAM,iBAAoB,KAC3EmoD,SAAU2pB,EACV1xE,QAAS6xE,EACTxsF,MAAM,OALR,SAOGR,EAAE,eCpBP4tF,GAAattF,aAAO0wD,KAAP1wD,CAAH,+CAuCDutF,GAnCmD,SAAC,GAAgC,IAA9B30C,EAA6B,EAA7BA,YAAaqK,EAAgB,EAAhBA,UACxEvjD,EAAMC,eAAND,EACAwvC,EAAUD,eAAVC,MAER,OACE,eAAC,KAAD,CACEiV,MAAOzkD,EAAE,oBAAqB,CAAEyH,OAAQyxC,IACxCqK,UAAWA,EACXuB,iBAAkBtV,EAAMG,OAAOquB,UAAU8vB,WAH3C,UAKE,cAAC,KAAD,CAAM/yE,MAAM,UAAUooC,MAAI,EAA1B,SACGnjD,EAAE,gCAAiC,CAAEyH,OAAQyxC,MAEhD,cAAC,KAAD,CAAM4K,GAAG,OAAT,SAAiB9jD,EAAE,mDAA+C,CAAEyH,OAAQyxC,MAC5E,cAAC,KAAD,UACGl5C,EAAE,kFAA8E,CAC/EyH,OAAQyxC,MAGZ,eAAC,IAAD,CAAQ4K,GAAG,OAAOiN,GAAG,IAAIrN,UAAQ,EAACC,KAAK,QAAvC,UACG3jD,EAAE,OADL,IACck5C,KAEd,cAAC00C,GAAD,CAAYjqC,KAAK,yBAAyBD,UAAQ,EAAlD,SACE,eAAC,IAAD,CAAQG,QAAQ,YAAYC,GAAG,MAAMtjD,MAAM,OAA3C,UACGR,EAAE,iBACH,cAAC,KAAD,CAAa+a,MAAM,UAAUipC,GAAG,aAGpC,cAAC,IAAD,CAAQH,QAAQ,OAAO1oC,QAASooC,EAAhC,SACGvjD,EAAE,sBCpCL+tF,GAAeztF,aAAOi3D,IAAPj3D,CAAH,gDAYH0tF,GAR2C,SAAC,GAA2B,IAAzBhwF,EAAwB,EAAxBA,SAAUmd,EAAc,EAAdA,QACrE,OACE,cAAC4yE,GAAD,CAAclgC,MAAM,KAAKh7C,GAAG,MAAMsU,EAAE,WAAW08B,QAAQ,WAAW1oC,QAASA,EAA3E,SACGnd,K,UCLD6H,GAAU,CACdgnB,SAAU6M,MAGNu0D,GAAS,uCAAG,WAAOlB,EAAkBloF,GAAzB,+BAAAlI,EAAA,6DAAiCmI,EAAjC,+BAA4C,GAA5C,SACCioF,EAAiBhkC,QAAQ,IAAI3kD,KAAUS,GAAQE,MAAMR,KAAQS,IAAIF,IAAWjF,WAAYgG,IADzF,cACVmtB,EADU,gBAEMA,EAAG81B,OAFT,cAEV31B,EAFU,yBAGTA,EAAQ6W,QAHC,2CAAH,wDAMTkkD,GAAY,uCAAG,WAAOnB,EAAkBloF,GAAzB,iBAAAlI,EAAA,sEACFowF,EAAiBhkC,QAAQ,IAAI3kD,KAAUS,GAAQE,MAAM00B,MAAuB55B,WAAYgG,IADtF,cACbmtB,EADa,gBAEGA,EAAG81B,OAFN,cAEb31B,EAFa,yBAGZA,EAAQ6W,QAHI,2CAAH,wDA8BHmkD,GAxBM,SAAC9xE,GAAwC,IAAxB+xE,EAAuB,wDACrDpqE,EAAW+U,eACjB,EAAoBz1B,cAAZyR,EAAR,EAAQA,QACFkpB,EAAqBxlB,cACrBs0E,EAAmBp0E,YAAY0D,GAE/BgyE,EAAcpvF,sBAAW,uCAC7B,WAAO4F,EAAgBC,GAAvB,SAAAnI,EAAA,yDACiB,IAAX0f,EADN,gCAEUusC,aAAU3qB,EAAoB,EAAGp5B,GAF3C,kCAGaupF,EAHb,iCAIUF,GAAanB,EAAkBloF,GAJzC,gDAMUopF,GAAUlB,EAAkBloF,EAAQC,GAN9C,QAQEkf,EAAS2e,aAAwBtmB,EAAQtH,IACzCiP,EAAS0e,aAAkBrmB,EAAQtH,IATrC,4CAD6B,wDAY7B,CAACA,EAASiP,EAAUoqE,EAAYnwD,EAAoB8uD,EAAkB1wE,IAGxE,MAAO,CAAEiyE,QAASD,ICtCdE,GAAW,uCAAG,WAAOxB,EAAkBloF,EAAQC,GAAjC,iBAAAnI,EAAA,sEACDowF,EAAiB7jC,SAAS,IAAI9kD,KAAUS,GAAQE,MAAMR,KAAQS,IAAIF,IAAWjF,YAD5E,cACZmzB,EADY,gBAEIA,EAAG81B,OAFP,cAEZ31B,EAFY,yBAGXA,EAAQ6W,QAHG,2CAAH,0DAMXwkD,GAAoB,uCAAG,WAAOzB,GAAP,iBAAApwF,EAAA,sEACVowF,EAAiB0B,oBADP,cACrBz7D,EADqB,gBAELA,EAAG81B,OAFE,cAErB31B,EAFqB,yBAGpBA,EAAQ6W,QAHY,2CAAH,sDA+BX0kD,GAzBQ,SAACryE,GAA6C,IAArCsyE,EAAoC,wDAC5D3qE,EAAW+U,eACjB,EAAoBz1B,cAAZyR,EAAR,EAAQA,QACFkpB,EAAqBxlB,cACrBs0E,EAAmBp0E,YAAY0D,GAE/BuyE,EAAgB3vF,sBAAW,uCAC/B,WAAO4F,EAAgBC,GAAvB,SAAAnI,EAAA,yDACiB,IAAX0f,EADN,gCAEU2sC,aAAY/qB,EAAoB,EAAGp5B,GAF7C,kCAGa8pF,EAHb,iCAIUH,GAAqBzB,GAJ/B,gDAMUwB,GAAYxB,EAAkBloF,EAAQC,GANhD,QAQEkf,EAAS2e,aAAwBtmB,EAAQtH,IACzCiP,EAAS0e,aAAkBrmB,EAAQtH,IACnCiP,EAAS4e,aAAwBvmB,EAAQtH,IAV3C,4CAD+B,wDAa/B,CAACA,EAASiP,EAAU2qE,EAAyB1wD,EAAoB8uD,EAAkB1wE,IAGrF,MAAO,CAAEwyE,UAAWD,ICpBhBhB,GAAattF,aAAO0wD,KAAP1wD,CAAH,+CAqLDwuF,GAjL+B,SAAC,GAOxC,IANLC,EAMI,EANJA,UACA3yE,EAKI,EALJA,KACAimB,EAII,EAJJA,oBACAX,EAGI,EAHJA,kBAGI,IAFJstD,uBAEI,SADJzrC,EACI,EADJA,UAEQlnC,EAA+DD,EAA/DC,OAAQogB,EAAuDrgB,EAAvDqgB,aAAcmE,EAAyCxkB,EAAzCwkB,SAAUvD,EAA+BjhB,EAA/BihB,aAAcuE,EAAiBxlB,EAAjBwlB,aAC9C5hC,EAAMC,eAAND,EACAwvC,EAAUD,eAAVC,MACA8+C,EAAYH,GAAa9xE,EAAQ0yE,GAAjCT,QACAO,EAAcH,GAAeryE,EAAQD,EAAKuyE,yBAA1CE,UACR,EAAqCthD,cAA7BwoB,EAAR,EAAQA,aAAc1E,EAAtB,EAAsBA,WACtB,EAAkCpzD,oBAAS,GAA3C,mBAAOgxF,EAAP,KAAkBC,EAAlB,KACA,EAAsCjxF,mBAAS,IAA/C,mBAAOkxF,EAAP,KAAoBC,EAApB,KACA,EAAyDnxF,oBAAS,GAAlE,mBAAOoxF,EAAP,KAA6BC,EAA7B,KACA,EAA8BrxF,mBAAS,GAAvC,mBAAOsxF,EAAP,KAAgBC,EAAhB,KACMC,EAA4B,WAChC,OAAIT,EACKpuD,EAAS0B,cAEXjF,EAAalN,GAAG,IAAMkS,EAAoBlS,GAAGkN,GAAgBA,EAAegF,GAG/EqtD,EAAiBP,GAAe1pF,aAAa,IAAIrB,KAAU+qF,GAAapqF,MAAM28B,GAAmBr8B,YAEvG/G,qBAAU,WACR,GAAI++B,EAAalN,GAAG,KAAO6+D,EAAiB,CAC1C,IAAMW,EAAyB/qF,aAAiB,IAAIR,KAAU+qF,GAAc1yD,EAAa33B,UACzFwqF,EAAyBK,EAAuBC,KAAKhvD,EAAS0B,eAAenS,GAAGkN,OAEjF,CAAC8xD,EAAa9xD,EAAcuD,EAAUnE,EAAcuyD,EAAiBM,IAExE,IAWMO,EAAsB,SAACC,GAC3B,GAAIA,EAAgB,EAAG,CACrB,IAAMC,EAAyBN,IAA4BvqF,UAAU,KAAKgpB,aAAa4hE,GACjFE,EAAgB1qF,aAAsByqF,EAAwBtzD,EAAa33B,SAAU23B,EAAa33B,UACxGsqF,EAAeY,QAEfZ,EAAe,IAEjBI,EAAWM,IAGPG,EAAkB,uCAAG,sBAAAtzF,EAAA,yDACzBuyF,GAAa,IAETF,EAHqB,0CAMfH,EAAUM,EAAa1yD,EAAa33B,UANrB,OAOrBixD,EAAa,GAAD,OACP/1D,EAAE,YADK,KAEVA,EAAE,kEAAmE,CACnEyH,OAAQm6B,EAAan6B,UAGzBynF,GAAa,GACb3rC,IAdqB,kDAgBrB8N,EAAWrxD,EAAE,SAAUA,EAAE,uFACzBkvF,GAAa,GAjBQ,2DAsBfZ,EAAQa,EAAa1yD,EAAa33B,UAtBnB,QAuBrBixD,EAAa,GAAD,OACP/1D,EAAE,UADK,KAEVA,EAAE,oDAAqD,CACrDyH,OAAQg1B,EAAah1B,UAGzBynF,GAAa,GACb3rC,IA9BqB,mDAgCrB8N,EAAWrxD,EAAE,SAAUA,EAAE,uFACzBkvF,GAAa,GAjCQ,kEAAH,qDAsCxB,OACE,eAAC,KAAD,CACEzqC,MAAyBzkD,EAAlBgvF,EAAoB,UAAe,iBAC1CzrC,UAAWA,EACXuB,iBAAkBtV,EAAMG,OAAOquB,UAAU8vB,WAH3C,UAKGzwD,EAAalN,GAAG,KAAO6+D,GACtB,cAAC,KAAD,CAAMj0E,MAAM,YAAYooC,MAAI,EAACyK,GAAG,OAAOvtC,MAAO,CAAEgjC,UAAW,UAAYH,SAAS,OAAhF,SACGljD,EAAE,4CAA6C,CAC9C6E,OAAQS,aAAsB+3B,EAAcZ,EAAa33B,SAAU,GACnEwc,MAAOmb,EAAah1B,WAI1B,eAAC,IAAD,CAAM0nD,WAAW,SAAS7K,eAAe,gBAAgBsJ,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMzK,MAAI,EAAV,UAA8BnjD,EAAlBgvF,EAAoB,UAAe,SAA/C,OACA,eAAC,IAAD,CAAM7/B,WAAW,SAASkb,SAAS,OAAnC,UACE,cAAC,IAAD,CACE/M,IAAG,yBAAoBn8D,aAAWs7B,EAAar7B,SAA5C,QACHZ,MAAO,GACPu4E,OAAQ,GACRp4D,IAAK8b,EAAah1B,SAEpB,cAAC,KAAD,CAAMu8C,GAAG,MAAMb,MAAI,EAAnB,SACG1mB,EAAah1B,eAIpB,cAAC,IAAD,CACE1H,MAAOovF,EACPj+C,YA1FyB,SAAColB,GAC9B,GAAIA,EAAO,CACT,IAAM45B,EAAiBtrF,aAAiB,IAAIR,KAAUkyD,GAAQ75B,EAAa33B,UACrEqrF,EAAalhE,KAAKmjD,MAAM8d,EAAehrF,UAAUuqF,KAA6BvhE,aAAa,KAAK7oB,YACtGmqF,EAAWvgE,KAAKi2D,IAAIiL,EAAY,WAEhCX,EAAW,GAEbJ,EAAe94B,IAmFX85B,cAAqC,IAAtB1uD,GAAA,WAA+BguD,GAAkB,EAAjD,QACfvhC,UAAWkhC,EACXvqF,SAAU23B,EAAa33B,WAExBuqF,GACC,cAAC,KAAD,CAAMt0E,MAAM,UAAUmoC,SAAS,OAAO7iC,MAAO,CAAEgjC,UAAW,SAAWS,GAAG,MAAxE,SACG9jD,EAAE,wCAAyC,CAC1C6E,OAAQS,aAAsB,IAAIlB,KAAUi5B,GAAeZ,EAAa33B,SAAU,GAClFwc,MAAOmb,EAAah1B,WAI1B,cAAC,KAAD,CAAMu8C,GAAG,OAAOjpC,MAAM,aAAamoC,SAAS,OAAO0K,GAAG,MAAtD,SACG5tD,EAAE,qBAAsB,CACvBoF,QAASE,aAAsBmqF,IAA6BhzD,EAAa33B,cAG7E,cAAC,KAAD,CACEogF,IAAK,EACLj0D,IAAK,IACLlxB,MAAOwvF,EACPc,eAAgBR,EAChB1wE,KAAK,QACLmxE,WAAU,UAAKf,EAAL,KACVgB,KAAM,IAER,eAAC,IAAD,CAAMphC,WAAW,SAAS7K,eAAe,gBAAgBR,GAAG,MAA5D,UACE,cAAC,GAAD,CAAkB3oC,QAAS,kBAAM00E,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkB10E,QAAS,kBAAM00E,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkB10E,QAAS,kBAAM00E,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkB10E,QAAS,kBAAM00E,EAAoB,MAArD,SAA4D7vF,EAAE,YAEhE,cAAC,IAAD,CACEsgC,UAAW2uD,EACXvB,QAASuB,EAAY,cAAC,IAAD,CAAetB,MAAI,EAAC5yE,MAAM,iBAAoB,KACnEI,QAAS80E,EACT/sB,UAAWisB,GAA2C,IAA5BrtD,WAAWqtD,IAAsBE,EAC3DvrC,GAAG,OALL,SAOe9jD,EAAZivF,EAAc,aAAkB,cAEjCD,GACA,cAAC,GAAD,CAAYtrC,UAAQ,EAACC,KAAK,QAA1B,SACE,cAAC,IAAD,CAAQnjD,MAAM,OAAOsjD,GAAG,MAAMD,QAAQ,YAAtC,SACG7jD,EAAE,eAAgB,CAAEyH,OAAQg1B,EAAah1B,iBCjFvC+oF,GAhGkC,SAAC,GAO3C,IANLp0E,EAMI,EANJA,KACAimB,EAKI,EALJA,oBACAC,EAII,EAJJA,cACAysD,EAGI,EAHJA,UACA0B,EAEI,EAFJA,SAEI,IADJnwD,iBACI,SACI7D,EAAwErgB,EAAxEqgB,aAAciF,EAA0DtlB,EAA1DslB,kBAAmBrE,EAAuCjhB,EAAvCihB,aAAcvM,EAAyB1U,EAAzB0U,WAAY8P,EAAaxkB,EAAbwkB,SAC3D5gC,EAAMC,eAAND,EACF0wF,EAAqBvrF,aAAiBm9B,EAAe7F,EAAa33B,UAClE6rF,EAA2BxrF,aAC/Bm9B,EAAcpU,aAAawT,GAC3BjF,EAAa33B,UAGf,EAAiCuqD,aAAS,cAAC,GAAD,CAAsBnW,YAAazc,EAAah1B,UAAnFmpF,EAAP,oBAEA,EAAyBvhC,aACvB,cAAC,GAAD,CACE0/B,UAAWA,EACX3yE,KAAMA,EACNimB,oBAAqBA,EACrBX,kBAAmBA,KALhBmvD,EAAP,oBASA,EAA2BxhC,aACzB,cAAC,GAAD,CACEhtB,oBAAqBA,EACrB0sD,UAAWA,EACX3yE,KAAMA,EACNslB,kBAAmBA,EACnBstD,iBAAe,KANZ8B,EAAP,oBAUA,EAA+C/sD,aAC7C/jC,EAAE,6EACF,CAAEgkC,UAAW,WAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtB2sD,EAAoB1zD,EAAalN,GAAG,IAAMyQ,EAAS0B,cAAc/R,IAAI8M,GAmD3E,OAAO,cAAC,IAAD,CAAM4yB,cAAc,SAApB,SAA8B3vB,EAAY,cAAC,KAAD,CAAU9/B,MAAM,OAAOu4E,OAAO,SAhDtE0X,EACL,eAAC,IAAD,CAAMnsC,eAAe,gBAAgB6K,WAAW,SAAhD,UACE,cAAC,IAAD,CAAMc,cAAc,SAApB,SACE,qCACE,cAACn1C,GAAA,EAAD,CAASqoC,MAAI,EAACD,SAAS,OAAOp+C,SAAU,EAAG/E,MAAO2wF,IAC3B,IAAtBhvD,GACC,cAAC,KAAD,CAAMwhB,SAAS,OAAOnoC,MAAM,aAA5B,SACE,cAACD,GAAA,EAAD,CACEooC,SAAS,OACTnoC,MAAM,aACNjW,SAAU,EACV/E,MAAO4wF,EACPz1E,OAAO,IACPD,KAAK,gBAMf,eAAC,IAAD,WACE,cAAC,IAAD,CAAY4oC,QAAQ,YAAY1oC,QAAS21E,EAAkB/mC,GAAG,MAA9D,SACE,cAAC,KAAD,CAAWhvC,MAAM,UAAUva,MAAM,WAElCuwF,EACC,sBAAM1sD,IAAKH,EAAX,SACE,cAAC,IAAD,CAAY2f,QAAQ,YAAYqf,UAAQ,EAAxC,SACE,cAAC,IAAD,CAASnoD,MAAM,eAAeva,MAAM,OAAOu4E,OAAO,aAItD,cAAC,IAAD,CACEl1B,QAAQ,YACR1oC,QAASknB,EAAoBlS,GAAG,GAAK0gE,EAAiBD,EACtD1tB,SAAUpyC,EAHZ,SAKE,cAAC,IAAD,CAAS/V,MAAM,UAAUva,MAAM,OAAOu4E,OAAO,cAIlD30C,GAAkBD,KAGrB,cAAC,IAAD,CAAQ++B,SAAUpyC,EAAY3V,QAASknB,EAAoBlS,GAAG,GAAK0gE,EAAiBD,EAApF,SACG5wF,EAAE,cClGL6F,GAAU,CACdgnB,SAAU6M,MAGNs3D,GAAW,uCAAG,WAAOjE,GAAP,iBAAApwF,EAAA,sEACDowF,EAAiBhkC,QAAQ,IAAKljD,IAD7B,cACZmtB,EADY,gBAEIA,EAAG81B,OAFP,cAEZ31B,EAFY,yBAGXA,EAAQ6W,QAHG,2CAAH,sDAMXinD,GAAc,uCAAG,WAAOlE,GAAP,iBAAApwF,EAAA,sEACJowF,EAAiBhkC,QAAjB,6BAA8BljD,IAA9B,IAAuC9F,MAAOoE,QAD1C,cACf6uB,EADe,gBAECA,EAAG81B,OAFJ,cAEf31B,EAFe,yBAGdA,EAAQ6W,QAHM,2CAAH,sDA2BLknD,GArBQ,SAAC70E,GAAgC,IAAxB+xE,EAAuB,wDAC/CpqE,EAAW+U,eACjB,EAAoBz1B,cAAZyR,EAAR,EAAQA,QACFg4E,EAAmBp0E,YAAY0D,GAC/B4hB,EAAqBxlB,cAErB04E,EAAgBlyF,sBAAW,sBAAC,sBAAAtC,EAAA,yDACjB,IAAX0f,EAD4B,gCAExB8sC,aAAYlrB,EAAoB,GAFR,kCAGrBmwD,EAHqB,iCAIxB6C,GAAelE,GAJS,gDAMxBiE,GAAYjE,GANY,QAQhC/oE,EAAS4e,aAAwBvmB,EAAQtH,IACzCiP,EAAS0e,aAAkBrmB,EAAQtH,IATH,4CAU/B,CAACA,EAASiP,EAAUoqE,EAAYnwD,EAAoB8uD,EAAkB1wE,IAEzE,MAAO,CAAE+0E,SAAUD,ICoGNE,GA/GmC,SAAC,GAS5C,IARLC,EAQI,EARJA,iBACAC,EAOI,EAPJA,YACA3vD,EAMI,EANJA,aACA4vD,EAKI,EALJA,oBACAn1E,EAII,EAJJA,OACA0yE,EAGI,EAHJA,UAGI,IAFJ0C,sBAEI,SADJluC,EACI,EADJA,UAEQvjD,EAAMC,eAAND,EACAwvC,EAAUD,eAAVC,MACR,EAAqCjC,cAA7BwoB,EAAR,EAAQA,aAAc1E,EAAtB,EAAsBA,WACd+/B,EAAaF,GAAe70E,EAAQ0yE,GAApCqC,SACA9C,EAAYH,GAAa9xE,EAAQ0yE,GAAjCT,QACR,EAAkCrwF,oBAAS,GAA3C,mBAAOgxF,EAAP,KAAkBC,EAAlB,KACA,EAA4CjxF,mBAASwzF,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA+C5tD,aAC7C,qCACE,cAAC,KAAD,CAAM6pB,GAAG,OAAT,SAAiB5tD,EAAE,kDACnB,cAAC,KAAD,UAAOA,EAAE,gDAEX,CAAEgkC,UAAW,aAAc4tD,cAAe,CAAC,GAAI,MALzC1tD,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAQtBytD,EAAoB,uCAAG,sBAAAl1F,EAAA,yDAC3BuyF,GAAa,IAETwC,EAHuB,0CAKjBpD,EAAQiD,EAAa3vD,EAAa98B,UALjB,OAMvBixD,EAAa,GAAD,OACP/1D,EAAE,cADK,KAEVA,EAAE,8DAA+D,CAAEyH,OAAQm6B,EAAan6B,UAE1FynF,GAAa,GACb3rC,IAXuB,kDAavB8N,EAAWrxD,EAAE,SAAUA,EAAE,uFACzB6Z,QAAQD,MAAR,MACAs1E,GAAa,GAfU,2DAoBjBkC,IApBiB,QAqBvBr7B,EAAa,GAAD,OACP/1D,EAAE,aADK,KAEVA,EAAE,wDAAyD,CAAEyH,OAAQm6B,EAAan6B,UAEpFynF,GAAa,GACb3rC,IA1BuB,mDA4BvB8N,EAAWrxD,EAAE,SAAUA,EAAE,uFACzB6Z,QAAQD,MAAR,MACAs1E,GAAa,GA9BU,kEAAH,qDAmC1B,OACE,eAAC,KAAD,CACEzqC,MAAK,UAAK7iB,EAAan6B,OAAlB,YAA6CzH,EAAjByxF,EAAmB,UAAe,YACnEluC,UAAWA,EACXuB,iBAAkBtV,EAAMG,OAAOquB,UAAU8vB,WAH3C,UAKG2D,GACC,eAAC,IAAD,CAAMntC,eAAe,SAAS6K,WAAW,SAASvB,GAAG,OAArD,UACE,eAAC,IAAD,CACEmQ,YAAa2zB,EAAiB,EAAI,EAClC7jC,MAAM,KACNhK,QAAQ,SACRw9B,YAAa,SAAC/kD,GAAD,OAAWq1D,GAAmBr1D,IAJ7C,UAME,cAAC,IAAD,CAAgBy0B,GAAG,SAAnB,SAA6B/wD,EAAE,cAC/B,cAAC,IAAD,CAAgB+wD,GAAG,SAAnB,SAA6B/wD,EAAE,gBAEjC,cAAC,IAAD,CAAMgkD,GAAG,OAAO3f,IAAKH,EAArB,SACE,cAAC,IAAD,CAAUnpB,MAAM,iBAEjBqpB,GAAkBD,KAIvB,eAAC,IAAD,CAAMmgB,eAAe,gBAAgB6K,WAAW,SAASvB,GAAG,OAA5D,UACE,eAAC,KAAD,WAAwB5tD,EAAjB0xF,EAAmB,cAAmB,cAA7C,OACA,eAAC,IAAD,CAAMzhC,cAAc,SAApB,UACE,eAAC,IAAD,WACGqhC,EADH,IACsB1vD,EAAan6B,UAElC+pF,EAAsB,GACrB,cAAC,KAAD,CAAMtuC,SAAS,OAAOnoC,MAAM,aAA5B,oBAA8CtV,aAAa+rF,GAA3D,gBAKN,cAAC,IAAD,CACE1tC,GAAG,MACH3oC,QAAS02E,EACTvxD,UAAW2uD,EACXvB,QAASuB,EAAY,cAAC,IAAD,CAAetB,MAAI,EAAC5yE,MAAM,iBAAoB,KAJrE,SAMe/a,EAAZivF,EAAc,aAAkB,aAEnC,cAAC,IAAD,CAAQprC,QAAQ,OAAO1oC,QAASooC,EAAWuuC,GAAG,MAA9C,SACG9xF,EAAE,sBCjDI+xF,GAtEuC,SAAC,GAOhD,IANL5lD,EAMI,EANJA,SACAvK,EAKI,EALJA,aACAvlB,EAII,EAJJA,OACA0yE,EAGI,EAHJA,UACAjgE,EAEI,EAFJA,kBAEI,IADJwR,iBACI,SACItgC,EAAMC,eAAND,EACFgyF,EAAsB7sF,aAAiBgnC,EAAUvK,EAAa98B,UAC9DwsF,EAAmB7rF,aAAausF,EAAqB,EAAG,GAExDC,EAA4B9sF,aAAiBgnC,EAASje,aAAaY,GAAoB8S,EAAa98B,UAEpGysF,EAAcjsF,aAAsB6mC,EAAUvK,EAAa98B,UAC3DotF,EAAc/lD,EAAS9mC,WAAa,EACpCosF,EAA4B,IAAXp1E,EAEvB,EAA2BgzC,aACzB,cAAC,GAAD,CACEiiC,iBAAkBA,EAClBC,YAAaA,EACb3vD,aAAcA,EACd4vD,oBAAqBS,EACrB51E,OAAQA,EACR0yE,UAAWA,EACX0C,eAAgBA,KARbU,EAAP,oBAYA,OACE,eAAC,IAAD,CAAM7tC,eAAe,gBAAgB6K,WAAW,SAASvB,GAAG,OAA5D,UACE,cAAC,IAAD,CAAMqC,cAAc,SAApB,SACG3vB,EACC,cAAC,KAAD,CAAU9/B,MAAM,OAAOu4E,OAAO,SAE9B,mCACGmZ,EACC,qCACE,cAACp3E,GAAA,EAAD,CAASqoC,MAAI,EAACD,SAAS,OAAOp+C,SAAU,EAAG/E,MAAOiyF,IACjDljE,EAAoB,GACnB,cAAChU,GAAA,EAAD,CACEg+C,QAAQ,SACR5V,SAAS,OACTnoC,MAAM,aACNjW,SAAU,EACVoW,OAAO,IACPnb,MAAOkyF,EACPh3E,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAMmoC,SAAS,OAAOnoC,MAAM,eAA5B,0BAQV,cAAC,IAAD,CAAQmoD,UAAWgvB,EAAa/2E,QAASg3E,EAAzC,SACoBnyF,EAAjByxF,EAAmB,UAAe,iBCtErCW,GAAa9xF,aAAOy6E,KAAPz6E,CAAH,mDAqED+xF,GA5DiC,SAAC,GAA6B,IAA3Bj2E,EAA0B,EAA1BA,KAAMkmB,EAAoB,EAApBA,cAC/CjmB,EAA2FD,EAA3FC,OAAQogB,EAAmFrgB,EAAnFqgB,aAAcmF,EAAqExlB,EAArEwlB,aAAcyL,EAAuDjxB,EAAvDixB,QAAS/wB,EAA8CF,EAA9CE,aAAcskB,EAAgCxkB,EAAhCwkB,SAAU9R,EAAsB1S,EAAtB0S,kBAEvEigE,EAAYzyE,IAAiBC,KAAaC,QACxCxc,EAAMC,eAAND,EACFyrB,GAAoB,OAARmV,QAAQ,IAARA,OAAA,EAAAA,EAAUnV,WAAY,IAAIrnB,KAAUw8B,EAASnV,WAAatnB,KACtEk+B,GAA8B,OAARzB,QAAQ,IAARA,OAAA,EAAAA,EAAUyB,qBAAsB,IAAIj+B,KAAUw8B,EAASyB,qBAAuBl+B,KACpGgoC,GAAmB,OAARvL,QAAQ,IAARA,OAAA,EAAAA,EAAUxB,eAAgB,IAAIh7B,KAAUw8B,EAASxB,eAAiBj7B,KAC7EmuF,GAAiB7mE,EAAU0E,GAAG,KAAO4+D,EACrC0B,EAAWnuD,EAAcnS,GAAG,GAC5BmQ,GAAaM,EAEnB,OACE,cAAC,IAAD,CAAMqvB,cAAc,SAApB,SACE,eAAC,IAAD,CAAMA,cAAc,SAApB,UACG5iB,GACC,qCACE,eAAC,IAAD,CAAKyrB,QAAQ,SAAb,UACE,cAACs5B,GAAD,CAAYr3E,MAAM,YAAY+kD,cAAc,YAAY3c,MAAI,EAACD,SAAS,OAAtE,mBACMthB,EAAan6B,OADnB,OAGA,cAAC2qF,GAAD,CAAYr3E,MAAM,aAAa+kD,cAAc,YAAY3c,MAAI,EAACD,SAAS,OAAvE,SACGljD,EAAE,eAGP,cAAC,GAAD,CACEmsC,SAAUA,EACVvK,aAAcA,EACdvlB,OAAQA,EACRyS,kBAAmBA,EACnBigE,UAAWA,EACXzuD,UAAWA,OAIjB,eAAC,IAAD,CAAKw4B,QAAQ,SAAb,UACE,eAACs5B,GAAD,CAAYr3E,MAAO01E,EAAW,YAAc,aAAc3wB,cAAc,YAAY3c,MAAI,EAACD,SAAS,OAAlG,UACGutC,EAAWh0D,EAAah1B,OAASzH,EAAE,SAAU,OAEhD,cAACoyF,GAAD,CAAYr3E,MAAO01E,EAAW,aAAe,YAAa3wB,cAAc,YAAY3c,MAAI,EAACD,SAAS,OAAlG,SACGutC,EAAWzwF,EAAE,UAAL,UAAoBy8B,EAAah1B,aAG7C6qF,EACC,cAAC,GAAD,CAAgBl2E,KAAMA,EAAMkkB,UAAWA,IAEvC,cAACiyD,GAAD,CACEjyD,UAAWA,EACXlkB,KAAMA,EACNimB,oBAAqBA,EACrBC,cAAeA,EACfysD,UAAWA,EACX0B,SAAUA,UCrBP+B,GAvC6C,SAAC,GAAuB,IAArBp2E,EAAoB,EAApBA,KAAMrH,EAAc,EAAdA,QAC3DsH,EAA6DD,EAA7DC,OAAQogB,EAAqDrgB,EAArDqgB,aAAcmF,EAAuCxlB,EAAvCwlB,aAAc9Q,EAAyB1U,EAAzB0U,WAAY8P,EAAaxkB,EAAbwkB,SAChD5gC,EAAMC,eAAND,EACFsiC,GAAwB,OAAR1B,QAAQ,IAARA,OAAA,EAAAA,EAAU0B,eAAgB,IAAIl+B,KAAUw8B,EAAS0B,eAAiBn+B,KAClFsuF,EAA0BnwD,EAAcnS,GAAG,GAEjD,OACE,cAAC26D,GAAD,CACEh6D,WAAYA,GAAyB,IAAXzU,EAC1Bq2E,OAAQ5hE,GAAc,cAAC,IAAD,CAAY6hE,aAAa,eAAe7uD,KAAM9jC,EAAE,cAFxE,SAIE,eAACirF,GAAD,WACE,cAAC,GAAD,CACEwB,UAAWgG,EACX7wD,aAAcA,EACdnF,aAAcA,EACd3L,WAAYA,GAAyB,IAAXzU,IAE5B,eAAC,IAAD,WACE,cAAC,GAAD,CAAQD,KAAMA,IACd,cAAC,IAAD,CAAM0nC,GAAG,OAAOmM,cAAc,SAA9B,SACGl7C,EACC,cAAC,GAAD,CAAaqH,KAAMA,EAAMkmB,cAAeA,IAExC,qCACE,cAAC,KAAD,CAAMsrB,GAAG,OAAOkS,cAAc,YAAY5c,SAAS,OAAOnoC,MAAM,aAAaooC,MAAI,EAAjF,SACGnjD,EAAE,mBAEL,cAACqwC,GAAA,EAAD,YAKR,cAACuiD,GAAD,CAAYx2E,KAAMA,EAAMrH,QAASA,UCZ1B89E,GAxB4C,SAAC,GAA2C,IAAD,IAAxCvyD,iBAAwC,SAArB4sC,EAAqB,EAArBA,eACvEltE,EAAMC,eAAND,EAER,EAA6CktF,GAAgBhgB,GAArD8f,EAAR,EAAQA,cAAeH,EAAvB,EAAuBA,kBAEvB,OACE,mCACGvsD,EACC,cAAC,KAAD,CAAU9/B,MAAM,OAAOu4E,OAAO,SAE9B,cAAC,IAAD,CACEz4C,UAAWusD,EACXa,QAASb,EAAoB,cAAC,IAAD,CAAec,MAAI,EAAC5yE,MAAM,iBAAoB,KAC3EmoD,SAAU2pB,EACV1xE,QAAS6xE,EACTxsF,MAAM,OALR,SAOGR,EAAE,eCIE8yF,GA5Be,SAACvyD,EAA2BvQ,GAAyD,IAAlCkQ,EAAiC,uDAAX,OACrG,EAAgDjiC,mBAAS,MAAzD,mBAAO80F,EAAP,KAAyBC,EAAzB,KACA,EAA8C/0F,oBAAS,GAAvD,mBAAOg1F,EAAP,KAAwBC,EAAxB,KACA,EAA4Cj1F,mBAASgxB,KAAKmjD,MAAMvgD,KAAKW,MAAQ,MAA7E,mBAAO2gE,EAAP,KAAuBC,EAAvB,KAsBA,OApBA90F,qBAAU,WACR,IACM+0F,EADa9yD,EAAoBL,EACGizD,EACpCG,EAAwBtjE,EAAWG,GAAG,IAAMkjE,EAAuB,EAKnEE,EAAgB5zC,aAAY,WAFhCyzC,GAAkB,SAACI,GAAD,OAAiBA,EAAc,OAEH,KAShD,OARIF,GACFN,EAAoBK,GACpBH,GAAmB,KAEnBA,GAAmB,GACnBpzC,cAAcyzC,IAGT,kBAAMzzC,cAAcyzC,MAC1B,CAAChzD,EAAmBL,EAAqB8yD,EAAqBG,EAAgBnjE,IAE1E,CAAEijE,kBAAiBF,qB,UChBbU,GAPoD,SAAC,GAA0B,IAAxBV,EAAuB,EAAvBA,iBAC5D/yF,EAAMC,eAAND,EACR,EAAiC0xE,aAAeqhB,GAAxC9gB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAErB,OAAO,cAAC,KAAD,CAAMjvB,SAAS,OAAf,SAAuBljD,EAAE,+BAAgC,CAAE0zF,IAAKzhB,EAAM0hB,KAAMzhB,EAAO0hB,OAAQzhB,OC8DrF0hB,GA3D2D,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnE9zF,EAAMC,eAAND,EACA+U,EAAYzR,cAAZyR,QACR,EAGIi1E,KAHJ,IACEppD,SAAYL,EADd,EACcA,kBAAmBvQ,EADjC,EACiCA,WADjC,IAEE2Q,KAAQV,EAFV,EAEUA,cAAeC,EAFzB,EAEyBA,oBAEnB6zD,EAAe9zD,EAAgB,KAAO,IAC5C,EAA+C8D,aAC7C,qCACE,cAAC,KAAD,CAAMof,MAAI,EAACyK,GAAG,MAAd,SACG5tD,EAAE,wBAAyB,CAAEggE,IAAK+zB,MAErC,cAAC,KAAD,UACG/zF,EACC,qJAIN,CAAEgkC,UAAW,iBAXPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAc5B,EAA8C0uD,GAC5Ct8C,SAASjW,EAAmB,IAC5BvQ,EACAkQ,GAHM6yD,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,gBAOpBe,EAAazzD,IAAsB0yD,GAAmBjjE,EAAWG,GAAG,GAGpE8jE,EAAkBl/E,GAAWwrB,GAAqB0yD,EAYxD,OACE,eAAC,IAAD,CACE9jC,WAAY2kC,EAAiB,aAAe,SAC5CxvC,eAAe,gBACf2L,cAAe6jC,EAAiB,SAAW,MAH7C,UAKG1vD,GAAkBD,EACnB,eAAC,KAAD,CAAaE,IAAKH,EAAWkf,OAAK,EAAlC,UACG4wC,EAAa,IAAMD,EADtB,KAhBEC,EACKh0F,EAAE,iBAAiBif,cAGnBjf,EADLi0F,EACO,sBAEF,4CAaNA,GAAmB,cAAC,GAAD,CAAoBlB,iBAAkBA,QClBjDmB,GArC+B,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,mBAAoBhF,EAAkB,EAAlBA,YAC3DnvF,EAAMC,eAAND,EAIF+zF,EADF/J,KADFrpD,KAAQV,cAE2B,IAC/Bm0D,GAAatyD,WAAWqtD,IAAgB4E,EAAe,MAAMvuF,QAAQ,GAC3E,EAA+Cu+B,aAC7C,qCACE,cAAC,KAAD,CAAMof,MAAI,EAACyK,GAAG,MAAd,SACG5tD,EAAE,wBAAyB,CAAEggE,IAAK+zB,MAErC,cAAC,KAAD,UACG/zF,EACC,qJAIN,CAAEgkC,UAAW,cAXPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAc5B,OACE,qCACE,eAAC,IAAD,CAAM0f,GAAG,OAAOqL,WAAW,SAAS7K,eAAe,gBAAnD,UACGlgB,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWkf,OAAK,EAAlC,SACGpjD,EAAE,mBAEL,eAAC,KAAD,CAAMkjD,SAAS,OAAf,UACGisC,EAAciF,EAAY,IAD7B,IACmCD,QAGrC,cAAC,GAAD,QCfApG,GAAeztF,aAAOi3D,IAAPj3D,CAAH,gDAIZ+zF,GAAc,CAClBxnE,SAAU,MA6LGynE,GA1LyC,SAAC,GAA8D,IAA5Dl4E,EAA2D,EAA3DA,KAAMm4E,EAAqD,EAArDA,WAAqD,IAAzCvF,uBAAyC,SAAhBzrC,EAAgB,EAAhBA,UAC9Fv/B,EAAW+U,eACT0D,EAAiBrgB,EAAjBqgB,aACA1nB,EAAYzR,cAAZyR,QACForB,EAAoB7mB,cAC1B,EAGI0wE,KAHJ,IACEppD,SAAYL,EADd,EACcA,kBAAmBvQ,EADjC,EACiCA,WAC/BC,EAFF,EAEEA,kBAEMjwB,EAAMC,eAAND,EACAwvC,EAAUD,eAAVC,MACR,EAAqCjC,cAA7BwoB,EAAR,EAAQA,aAAc1E,EAAtB,EAAsBA,WACtB,EAAkCpzD,oBAAS,GAA3C,mBAAOgxF,EAAP,KAAkBC,EAAlB,KACA,EAAsCjxF,mBAAS,IAA/C,mBAAOkxF,EAAP,KAAoBC,EAApB,KACA,EAA8BnxF,mBAAS,GAAvC,mBAAOsxF,EAAP,KAAgBC,EAAhB,KACQyD,EAAoBH,GAAsBt8C,SAASjW,EAAmB,IAAKvQ,GAA3EijE,gBACFuB,EAAgBtnD,eAChBwiD,EACJ8E,EAAcrkE,GAAG,IAAMg/D,EAAc1pF,aAAa,IAAIrB,KAAU+qF,GAAapqF,MAAMyvF,GAAenvF,YAAc,GAa5GwqF,EAAsB,SAACC,GAC3B,GAAIA,EAAgB,EAAG,CACrB,IAAMC,EAAyBwE,EAAWrvF,UAAU,KAAKgpB,aAAa4hE,GAChEE,EAAgB1qF,aAAsByqF,EAAwBtzD,EAAa33B,SAAU23B,EAAa33B,UACxGsqF,EAAeY,QAEfZ,EAAe,IAEjBI,EAAWM,IAGP2E,EAAgB,uCAAG,WAAOC,GAAP,uBAAA/3F,EAAA,yDACvBuyF,GAAa,GACPyF,EAAuBrmE,aAAoBomE,EAAsBzkE,GAEjE2kE,EAA8B,IAAIxwF,KAAU,MAC5CywF,EAAkB7kE,EAAWK,MAAMskE,EAAqBlmE,oBACrComE,EAAgBlrC,IAAIirC,GANtB,0CAUFz0D,EAAkB20D,YAAYT,IAV5B,cAUbrhE,EAVa,iBAWGA,EAAG81B,OAXN,eAYP9e,SACV+rB,EAAa/1D,EAAE,aAAcA,EAAE,0DAC/BkvF,GAAa,GACb3rC,IACAv/B,EAASkf,aAAuB,CAAEnuB,cAhBjB,kDAmBnBs8C,EAAWrxD,EAAE,SAAUA,EAAE,uFACzBkvF,GAAa,GApBM,2DA0BF/uD,EAAkB+oB,SAASyrC,EAAqBlmE,kBAAkB5uB,WAAYw0F,IA1B5E,eA0BbrhE,EA1Ba,iBA2BGA,EAAG81B,OA3BN,eA4BP9e,SACV+rB,EAAa/1D,EAAE,aAAcA,EAAE,0DAC/BkvF,GAAa,GACb3rC,IACAv/B,EAASkf,aAAuB,CAAEnuB,cAhCjB,mDAmCnBs8C,EAAWrxD,EAAE,SAAUA,EAAE,uFACzBkvF,GAAa,GApCM,kEAAH,sDAyChB6F,EAAa,uCAAG,WAAOL,GAAP,eAAA/3F,EAAA,6DACpBuyF,GAAa,GADO,kBAKD/uD,EAAkB4oB,QAAQ2rC,EAAqB70F,WAAYw0F,IAL1D,cAKZrhE,EALY,gBAMIA,EAAG81B,OANP,cAON9e,SACV+rB,EAAa/1D,EAAE,WAAYA,EAAE,4CAC7BkvF,GAAa,GACb3rC,IACAv/B,EAASkf,aAAuB,CAAEnuB,cAXlB,kDAclBs8C,EAAWrxD,EAAE,SAAUA,EAAE,uFACzBkvF,GAAa,GAfK,0DAAH,sDAmBbe,EAAkB,uCAAG,4BAAAtzF,EAAA,sDACnB+3F,EAAuB9vF,aAAiB,IAAIR,KAAU+qF,GAAc1yD,EAAa33B,UACnFkqF,EAEFyF,EAAiBC,GAGjBK,EAAcL,GAPS,2CAAH,qDAWxB,OACE,eAAC,KAAD,CACEjwC,MAAyBzkD,EAAlBgvF,EAAoB,UAAe,iBAC1CzrC,UAAWA,EACXuB,iBAAkBtV,EAAMG,OAAOquB,UAAU8vB,WAH3C,UAKE,eAAC,IAAD,CAAM3+B,WAAW,SAAS7K,eAAe,gBAAgBsJ,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMzK,MAAI,EAAV,UAA8BnjD,EAAlBgvF,EAAoB,UAAe,SAA/C,OACA,eAAC,IAAD,CAAM7/B,WAAW,SAASkb,SAAS,OAAnC,UACE,cAAC,IAAD,CACE/M,IAAG,yBAAoBn8D,aAAWs7B,EAAar7B,SAA5C,QACHZ,MAAO,GACPu4E,OAAQ,GACRp4D,IAAK8b,EAAah1B,SAEpB,cAAC,KAAD,CAAMu8C,GAAG,MAAMb,MAAI,EAAnB,SACG1mB,EAAah1B,eAIpB,cAAC,IAAD,CACE1H,MAAOovF,EACPj+C,YAnHyB,SAAColB,GAC9B,GAAIA,EAAO,CACT,IAAM45B,EAAiB,IAAI9rF,KAAUkyD,GAAOpoC,aAAa3pB,KAAQS,IAAIy3B,EAAa33B,WAC5EqrF,EAAalhE,KAAKmjD,MAAM8d,EAAehrF,UAAUqvF,GAAYrmE,aAAa,KAAK7oB,YACrFmqF,EAAWW,EAAa,IAAM,IAAMA,QAEpCX,EAAW,GAEbJ,EAAe94B,IA4GX85B,cAAeoE,EAAcrkE,GAAG,IAAjB,WAA2Bu/D,GAAkB,EAA7C,QACf5qF,SAAU23B,EAAa33B,WAEzB,cAAC,KAAD,CAAMg/C,GAAG,MAAME,GAAG,OAAOjpC,MAAM,aAAamoC,SAAS,OAAO0K,GAAG,MAA/D,SACG5tD,EAAE,qBAAsB,CAAEoF,QAASE,aAAsBivF,EAAY93D,EAAa33B,cAErF,cAAC,KAAD,CACEogF,IAAK,EACLj0D,IAAK,IACLlxB,MAAOwvF,EACPc,eAAgBR,EAChB1wE,KAAK,QACLmxE,WAAU,UAAKf,EAAL,KACVgB,KAAM,IAER,eAAC,IAAD,CAAMphC,WAAW,SAAS7K,eAAe,gBAAgBR,GAAG,MAA5D,UACE,cAAC,GAAD,CAAc+J,MAAM,KAAKh7C,GAAG,MAAMsU,EAAE,WAAW08B,QAAQ,WAAW1oC,QAAS,kBAAM00E,EAAoB,KAArG,iBAGA,cAAC,GAAD,CAAchiC,MAAM,KAAKh7C,GAAG,MAAMsU,EAAE,WAAW08B,QAAQ,WAAW1oC,QAAS,kBAAM00E,EAAoB,KAArG,iBAGA,cAAC,GAAD,CAAchiC,MAAM,KAAKh7C,GAAG,MAAMsU,EAAE,WAAW08B,QAAQ,WAAW1oC,QAAS,kBAAM00E,EAAoB,KAArG,iBAGA,cAAC,GAAD,CAAchiC,MAAM,KAAKh7C,GAAG,MAAMsU,EAAE,WAAW08B,QAAQ,WAAW1oC,QAAS,kBAAM00E,EAAoB,MAArG,SACG7vF,EAAE,YAGNgvF,GAAmBiE,GAClB,cAAC,GAAD,CAAYkB,mBAAoB13D,EAAah1B,OAAQ0nF,YAAaA,IAEpE,cAAC,IAAD,CACE7uD,UAAW2uD,EACXvB,QAASuB,EAAY,cAAC,IAAD,CAAetB,MAAI,EAAC5yE,MAAM,iBAAoB,KACnEI,QAAS80E,EACT/sB,UAAWisB,GAA2C,IAA5BrtD,WAAWqtD,GACrCrrC,GAAG,OALL,SAOe9jD,EAAZivF,EAAc,aAAkB,cAEjCD,GACA,cAAC,IAAD,CAAQlrC,GAAG,MAAMiN,GAAG,IAAIrN,UAAQ,EAACC,KAAK,QAAQE,QAAQ,YAAtD,SACG7jD,EAAE,eAAgB,CAAEyH,OAAQg1B,EAAah1B,eC9JrCutF,GAxCyC,SAAC,GAAmC,IAAjC54E,EAAgC,EAAhCA,KAAMimB,EAA0B,EAA1BA,oBAC/D,EAGI2nD,KAFUh6D,EADd,EACE4Q,SAAY5Q,WACZC,EAFF,EAEEA,kBAEMwM,EAAiBrgB,EAAjBqgB,aACR,EAAiD7O,aAAoBoC,EAAYC,GAAzE7B,EAAR,EAAQA,gBAAiBD,EAAzB,EAAyBA,oBACnBqmE,EAAgBtnD,eAChB+nD,EAAoBT,EAAcrkE,GAAG,GACvChrB,aAAiBipB,EAAgBF,aAAasmE,GAAgB/3D,EAAa33B,UAC3E,EAEJ,EAAiCuqD,aAAS,cAAC,GAAD,CAAsBnW,YAAazc,EAAah1B,UAAnFmpF,EAAP,oBACA,EAAyBvhC,aAAS,cAAC,GAAD,CAAiBklC,WAAYlyD,EAAqBjmB,KAAMA,KAAnFy0E,EAAP,oBACA,EAA2BxhC,aAAS,cAAC,GAAD,CAAiBklC,WAAYnmE,EAAiBhS,KAAMA,EAAM4yE,iBAAe,KAAtG8B,EAAP,oBAEA,OACE,eAAC,IAAD,CAAMxsC,eAAe,gBAAgB6K,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMc,cAAc,SAApB,UACE,cAACn1C,GAAA,EAAD,CAASooC,SAAS,OAAOC,MAAI,EAACpjD,MAAOouB,EAAqBrpB,SAAU,IACpE,cAAC,KAAD,CAAMo+C,SAAS,OAAOnoC,MAAM,aAA5B,SACGy5E,EAAcrkE,GAAG,GAChB,cAACrV,GAAA,EAAD,CAAS/a,MAAOk1F,EAAmB/xC,SAAS,OAAOnoC,MAAM,aAAajW,SAAU,EAAGoW,OAAO,IAAID,KAAK,SAEnG,cAAC,KAAD,CAAU6oC,GAAG,MAAMi1B,OAAQ,GAAIv4E,MAAO,UAI5C,eAAC,IAAD,WACE,cAAC,IAAD,CAAYqjD,QAAQ,YAAY1oC,QAAS21E,EAAkB/mC,GAAG,MAA9D,SACE,cAAC,KAAD,CAAWhvC,MAAM,UAAUva,MAAM,WAEnC,cAAC,IAAD,CAAYqjD,QAAQ,YAAY1oC,QAASknB,EAAoBlS,GAAG,GAAK0gE,EAAiBD,EAAtF,SACE,cAAC,IAAD,CAAS71E,MAAM,UAAUva,MAAM,OAAOu4E,OAAO,kBCZxCmc,GAtB6C,SAAC,GAKtD,IAJL94E,EAII,EAJJA,KACAimB,EAGI,EAHJA,oBACA8yD,EAEI,EAFJA,uBAEI,IADJ70D,iBACI,SACI7D,EAAiBrgB,EAAjBqgB,aACAz8B,EAAMC,eAAND,EACR,EAAiCqvD,aAAS,cAAC,GAAD,CAAsBnW,YAAazc,EAAah1B,UAAnFmpF,EAAP,oBACA,EAAyBvhC,aAAS,cAAC,GAAD,CAAiBklC,WAAYlyD,EAAqBjmB,KAAMA,KAAnFy0E,EAAP,oBAUA,OAAO,cAAC,IAAD,CAAM5gC,cAAc,SAApB,SAA8B3vB,EAAY,cAAC,KAAD,CAAU9/B,MAAM,OAAOu4E,OAAO,SAPtEoc,EACL,cAAC,GAAD,CAAkB/4E,KAAMA,EAAMimB,oBAAqBA,IAEnD,cAAC,IAAD,CAAQlnB,QAASknB,EAAoBlS,GAAG,GAAK0gE,EAAiBD,EAA9D,SAAuF5wF,EAAE,cCpBzFoyF,GAAa9xF,aAAOy6E,KAAPz6E,CAAH,mDAmDD80F,GA3CV,SAAC,GAAiD,IAA/Ch5E,EAA8C,EAA9CA,KAAM+4E,EAAwC,EAAxCA,uBAAwB70D,EAAgB,EAAhBA,UAC5B7D,EAA2BrgB,EAA3BqgB,aAAcmE,EAAaxkB,EAAbwkB,SACd5gC,EAAMC,eAAND,EACFqiC,GAA8B,OAARzB,QAAQ,IAARA,OAAA,EAAAA,EAAUyB,qBAAsB,IAAIj+B,KAAUw8B,EAASyB,qBAAuBl+B,KAE1G,EAA4CipF,KAApCC,EAAR,EAAQA,gBAAiBngB,EAAzB,EAAyBA,eAEzB,OACE,cAAC,IAAD,CAAMjd,cAAc,SAApB,SACE,eAAC,IAAD,CAAMA,cAAc,SAApB,UACE,eAAC,IAAD,CAAK6I,QAAQ,SAAb,UACE,eAAC,GAAD,CACE/9C,MAAOo6E,EAAyB,YAAc,aAC9Cr1B,cAAc,YACd3c,MAAI,EACJD,SAAS,OAJX,UAMGiyC,EAAyB14D,EAAah1B,OAASzH,EAAE,SAAU,OAE9D,cAAC,GAAD,CACE+a,MAAOo6E,EAAyB,aAAe,YAC/Cr1B,cAAc,YACd3c,MAAI,EACJD,SAAS,OAJX,SAMGiyC,EAAyBn1F,EAAE,wBAAL,UAAkCy8B,EAAah1B,aAGzE4lF,EACC,cAAC,GAAD,CACE/sD,UAAWA,EACXlkB,KAAMA,EACNimB,oBAAqBA,EACrB8yD,uBAAwBA,IAG1B,cAAC,GAAD,CAAqB70D,UAAWA,EAAW4sC,eAAgBA,UCftDmoB,GA7ByD,SAAC,GAIlE,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,oBAEQx1F,EAAMC,eAAND,EAER,EAA+C+jC,aAC7C,qCACE,cAACjpB,GAAA,EAAD,CAASooC,SAAS,OAAOnjD,MAAOu1F,EAAexwF,SAAU,EAAGq+C,MAAI,EAACloC,KAAK,SACtE,cAACH,GAAA,EAAD,CAASooC,SAAS,OAAOnjD,MAAOw1F,EAAsBzwF,SAAU,EAAGq+C,MAAI,EAACjoC,OAAO,OAC9Elb,EAAE,iCACH,cAAC,KAAD,UAAOw1F,OAET,CACExxD,UAAW,eARPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAY5B,OACE,qCACGA,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWkf,OAAK,EAAlC,SACE,cAACtoC,GAAA,EAAD,CAASooC,SAAS,OAAOnjD,MAAOu1F,UCSzBG,GAlCsB,WACnC,IAAQz1F,EAAMC,eAAND,EACA+U,EAAYzR,cAAZyR,QACR,EAGIi1E,KAFF/5D,EADF,EACEA,kBADF,IAEE2Q,SAAY7Q,EAFd,EAEcA,qBAAsBC,EAFpC,EAEoCA,WAAYwQ,EAFhD,EAEgDA,mBAE1Cg0D,EAAgBtnD,eACtB,EAAiEpd,aAC/D/a,EACAgb,EACAC,EACAC,EACAukE,EAAcnvF,YALR6qB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQtCilE,EAAiBl1D,GAAqD,IAA/BgW,SAAShW,GAEhDg1D,EADqB,IAAI3jE,KAAK6jE,GACW1vF,iBAE/C,OACE,eAAC,IAAD,CAAMmpD,WAAW,SAAS7K,eAAe,gBAAzC,UACE,cAAC,KAAD,CAAMpB,SAAS,OAAf,mBAA0BljD,EAAE,qBAA5B,OACCkwB,GACC,cAAC,GAAD,CACEolE,cAAehlE,EACfilE,qBAAsB9kE,EACtB+kE,oBAAqBA,QCnBzBG,GAAiBr1F,aAAOs1F,IAAPt1F,CAAH,mDACJ,qBAAGggC,UAA6B,IAAM,WA6DvCu1D,GArDiC,SAAC,GAA8B,IAA5Bz5E,EAA2B,EAA3BA,KAAM05E,EAAqB,EAArBA,eAC/C91F,EAAMC,eAAND,EACA+1F,EAASC,eAATD,KACAhhF,EAAYzR,cAAZyR,QACR,EAGIi1E,KAHJ,IACEppD,SAAY5Q,EADd,EACcA,WAAuBimE,EADrC,EAC0B31D,UAChB1R,EAFV,EAEE+R,KAAQ/R,eAGJumE,EAAyBnlE,GAAcA,EAAWG,GAAG,GACrDmQ,GAAalkB,EAAKwkB,UAAYq1D,EAC9BC,EAA0BtnE,GAAkBA,EAAiB,IAEnE,OAAIknE,IAAmBX,EACd,KAIP,cAACrK,GAAD,CAAYC,WAAY,CAAEC,UAAW+K,GAArC,SACE,eAAC9K,GAAD,WACE,cAAC,GAAD,CACEwB,UAAW0I,EACXtmE,aAAW,EACX+S,aAAcpgC,KAAOC,KACrBg7B,aAAcj7B,KAAOC,OAEvB,eAACk0F,GAAD,CAAgBr1D,UAAWA,EAA3B,UACE,cAAC,GAAD,CAAQlkB,KAAMA,EAAMwS,eAAgBsnE,IACpC,cAAC,IAAD,CAAKpyC,GAAG,OAAR,SACE,cAACqyC,GAAD,MAEF,cAAC,IAAD,CAAKryC,GAAG,MAAR,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAMA,GAAG,OAAOmM,cAAc,SAA9B,SACGl7C,EACC,cAACqhF,GAAD,CAAkBh6E,KAAMA,EAAM+4E,uBAAwBA,EAAwB70D,UAAWA,IAEzF,qCACE,cAAC,KAAD,CAAMstB,GAAG,OAAOkS,cAAc,YAAY5c,SAAS,OAAOnoC,MAAM,aAAaooC,MAAI,EAAjF,SACGnjD,EAAE,mBAEL,cAACqwC,GAAA,EAAD,YAKR,cAACuiD,GAAD,CAAYx2E,KAAMA,EAAMrH,QAASA,U,mBrCrE7BqzE,K,cAAAA,E,aAAAA,Q,KAUZ,I,+GAAMxwB,GAAYt3D,KAAOU,IAAV,yIAIX,qBAAGwuC,MAAkBksB,aAAaxe,MAyBvBm5C,GAnB8C,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAClEC,EAAe,SAACC,GAChBH,IAAaG,GACfF,EAASE,IAIb,OACE,eAAC7+B,GAAD,WACE,cAAC,IAAD,CAAY/T,QAAQ,OAAOgK,MAAM,KAAKj1C,GAAG,oBAAoBuC,QAAS,kBAAMq7E,EAAapO,GAASsO,OAAlG,SACE,cAAC,IAAD,CAAc37E,MAAOu7E,IAAalO,GAASsO,KAAO,UAAY,mBAEhE,cAAC,IAAD,CAAY7yC,QAAQ,OAAOgK,MAAM,KAAKj1C,GAAG,qBAAqBuC,QAAS,kBAAMq7E,EAAapO,GAASuO,QAAnG,SACE,cAAC,KAAD,CAAc57E,MAAOu7E,IAAalO,GAASuO,MAAQ,UAAY,uBsC6BxDC,GApDQ,SAAC,GAAmF,IAAjFC,EAAgF,EAAhFA,WAAYC,EAAoE,EAApEA,cAAeC,EAAqD,EAArDA,wBAAyBT,EAA4B,EAA5BA,SAAUU,EAAkB,EAAlBA,YACtF,EAAyBC,eAAjBpiE,EAAR,EAAQA,IAAKqiE,EAAb,EAAaA,QACb,EAAuBlB,eAAfmB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNp3F,EAAMC,eAAND,EAEFq3F,EAAiB,cAAC,GAAD,CAAYf,SAAUA,EAAUC,SAAU,SAACE,GAAD,OAAoBO,EAAYP,MAE3Fa,EACJ,eAAC,IAAD,CAAYv5B,YAAam5B,EAAU,EAAI,EAAGrpC,MAAM,KAAKhK,QAAQ,SAA7D,UACE,cAAC,IAAD,CAAgBkN,GAAIC,KAAM9e,GAAE,UAAKrd,GAAjC,SACG70B,EAAE,UAEL,cAAC,KAAD,CAAiBuvD,KAAMwnC,EAAvB,SACE,cAAC,IAAD,CAAgBhmC,GAAIC,KAAM9e,GAAE,UAAKrd,EAAL,YAA5B,SACG70B,EAAE,mBAMLu3F,EACJ,eAAC,IAAD,CAAMzzC,GAAI,CAAC,MAAO,KAAM,EAAG,MAAOE,GAAI,CAAC,EAAG,KAAM,OAAQ,MAAOM,eAAe,SAAS6K,WAAW,SAAlG,UACE,cAAC,KAAD,CAAQtB,MAAM,KAAKqB,QAAS2nC,EAAY7oC,SAAU,kBAAM8oC,GAAc,SAAC50B,GAAD,OAAWA,QACjF,cAAC,KAAD,CAAMle,GAAI,CAAC,MAAO,MAAO,OAAzB,SAAkChkD,EAAE,oBAIxC,OAAIm3F,GAAQC,EAER,eAAC,IAAD,CAAMnnC,cAAc,SAASd,WAAW,aAAavB,GAAG,OAAxD,UACE,eAAC,IAAD,CAAMptD,MAAM,OAAO8jD,eAAe,gBAAlC,UACG+yC,EACAC,KAEFC,KAML,eAAC,IAAD,CACEpoC,WAAW,SACX7K,eAAgB,CAAC,eAAgB,eAAgB,cACjDsJ,GAAI,CAAC,OAAQ,OAAQ,OAAQ,OAH/B,UAKGypC,EACAC,EACAC,MCzCDC,GAAUl3F,KAAOU,IAAV,+GACS,qBAAGwuC,MAAkBG,OAAO48C,sBAgHnCkL,GA1GiC,SAAC,GAAqC,IAAnCl0C,EAAkC,EAAlCA,UAAWm0C,EAAuB,EAAvBA,iBACpD13F,EAAMC,eAAND,EACA+U,EAAYzR,cAAZyR,QACAy6B,EAAUD,eAAVC,MACR,EAAqCjC,cAA7B8jB,EAAR,EAAQA,WAAY0E,EAApB,EAAoBA,aACd51B,EAAoB7mB,cAC1B,EAAkCrb,oBAAS,GAA3C,mBAAOgxF,EAAP,KAAkBC,EAAlB,KACA,EAIIlF,KAHFxqD,EADF,EACEA,0BACAC,EAFF,EAEEA,wBACQO,EAHV,EAGEW,KAAQX,QAEJw0D,EAAgBtnD,eAChByqD,EAAmB33D,EAAU,IAC7B43D,EAAsBzyF,aAAiBs6B,EAAyB,IAEhEo4D,EAA8BpgF,mBAAQ,WAC1C,OAAO,IAAIrT,KAAUo7B,GAA2BtR,aAAasmE,KAC5D,CAACA,EAAeh1D,IAEbs4D,EAAyBD,EAA4BtnE,IAAI,GACzDwnE,IAAuBv4D,GAA4BA,EAA0BjP,IAAI,GACjFynE,EAAwBF,EAAyB3yF,aAAiB0yF,EAA6B,IAAM,EACrGI,EAAsBF,EAAuB5yF,aAAiBq6B,EAA2B,IAAM,EAErG,EAA+CuE,aAAW,cAAC2zD,EAAD,CAAkB13B,IAAKhgC,IAAa,CAC5FgE,UAAW,SACXk0D,eAAgB,CAAEC,MAAO,MAFnBj0D,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtB6rD,EAAkB,uCAAG,4BAAAtzF,EAAA,6DACzBuyF,GAAa,GADY,kBAGN/uD,EAAkBkN,QAAQ,CAAExgB,SAAU,MAHhC,cAGjBmG,EAHiB,gBAIDA,EAAG81B,OAJF,cAKX9e,SACV+rB,EAAa/1D,EAAE,qBAAsBA,EAAE,6CACvCkvF,GAAa,GACb3rC,KARqB,kDAWvB8N,EAAWrxD,EAAE,SAAUA,EAAE,uFACzBkvF,GAAa,GAZU,0DAAH,qDAgBxB,OACE,eAAC,KAAD,CAAOzqC,MAAOzkD,EAAE,gBAAiBujD,UAAWA,EAAWuB,iBAAkBtV,EAAMG,OAAOquB,UAAU8vB,WAAhG,UACG1pD,GAAkBD,EACnB,eAAC,IAAD,CAAMgrB,WAAW,aAAa7K,eAAe,gBAA7C,UACE,cAAC,KAAD,UAAOtkD,EAAE,uBACT,eAAC,IAAD,CAAMiwD,cAAc,SAApB,UACE,cAACn1C,GAAA,EAAD,CAASqoC,MAAI,EAACpjD,MAAOk4F,EAAqBnzF,SAAU,EAAGmW,KAAK,SAC5D,cAAC,KAAD,CAAMioC,SAAS,OAAOnoC,MAAM,aAA5B,SACE,cAACD,GAAA,EAAD,CACEooC,SAAS,OACTnoC,MAAM,aACNhb,MAAOi4F,EACPlzF,SAAU,EACVmW,KAAK,OACLC,OAAO,cAKf,cAACs8E,GAAD,IACA,eAAC,IAAD,CAAMroC,WAAW,SAAS7K,eAAe,gBAAzC,UACE,cAAC,KAAD,CAAMpB,SAAS,OAAOnoC,MAAM,aAA5B,SACG/a,EAAE,8BAEL,cAAC8a,GAAA,EAAD,CAASC,MAAM,aAAahb,MAAO63F,EAAqB38E,KAAK,YAE/D,eAAC,IAAD,CAAMk0C,WAAW,SAAS7K,eAAe,gBAAgBsJ,GAAG,OAA5D,UACE,cAAC,KAAD,CAAM1K,SAAS,OAAOnoC,MAAM,aAA5B,SACG/a,EAAE,YAEL,eAAC,KAAD,CAAMkjD,SAAS,OAAOnoC,MAAM,aAA5B,UACG48E,EADH,UAID5iF,EACC,cAAC,IAAD,CACEurB,UAAW2uD,EACX/rB,UAAW80B,IAA0BC,IAAwBj4D,EAC7D0tD,QAASuB,EAAY,cAAC,IAAD,CAAetB,MAAI,EAAC5yE,MAAM,iBAAoB,KACnEI,QAAS80E,EACTriC,GAAG,OACHh1C,GAAG,wBANL,SAQe5Y,EAAZivF,EAAc,aAAkB,aAGnC,cAAC5+C,GAAA,EAAD,CAAcud,GAAG,SAEnB,eAAC,IAAD,CAAMtJ,eAAe,SAAS6K,WAAW,SAAzC,UACE,cAAC,KAAD,CAAMjM,SAAS,OAAOC,MAAI,EAACpoC,MAAM,aAAagvC,GAAG,MAAjD,SACG/pD,EAAE,uBAEL,sBAAMqkC,IAAKH,EAAX,SACE,cAAC,IAAD,CAAUnpB,MAAM,wBCvGpB+vE,GAAaxqF,aAAOovC,IAAPpvC,CAAH,gGAGZ,qBAAGkvC,MAAkBksB,aAAaxe,MA+FvBk7C,GA1FI,WACjB,IAAQp4F,EAAMC,eAAND,EACR,EAGIgqF,KAFFxqD,EADF,EACEA,0BACQQ,EAFV,EAEEW,KAAQX,QAEJw0D,EAAgBtnD,eAEhB2qD,EAA8BpgF,mBAAQ,WAC1C,OAAO,IAAIrT,KAAUo7B,GAA2BtR,aAAasmE,KAC5D,CAACA,EAAeh1D,IAEbs4D,EAAyBD,EAA4BtnE,IAAI,GACzDwnE,IAAuBv4D,GAA4BA,EAA0BjP,IAAI,GACjFynE,EAAwBF,EAAyB3yF,aAAiB0yF,EAA6B,IAAM,EACrGI,EAAsBF,EAAuB5yF,aAAiBq6B,EAA2B,IAAM,EAE/Fk4D,EAAmB,SAAC,GAAD,IAAG13B,EAAH,EAAGA,IAAH,OACvB,qCACE,cAAC,KAAD,CAAMpS,GAAG,OAAT,SAAiB5tD,EAAE,8EACnB,cAAC,KAAD,CAAM4tD,GAAG,OAAT,SACG5tD,EACC,wJAGJ,cAAC,KAAD,CAAMqgB,MAAO,CAAEg4E,WAAY,QAA3B,SACGr4F,EAAE,wEAAyE,CAAEggE,IAAKA,EAAM,YAK/F,EAA+B3Q,aAAS,cAAC,GAAD,CAAaqoC,iBAAkBA,KAAhEY,EAAP,oBAEA,EAA+Cv0D,aAAW,cAAC2zD,EAAD,CAAkB13B,IAAKhgC,IAAa,CAC5FgE,UAAW,aACX4tD,cAAe,CAAC,GAAI,MAFd1tD,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAK5B,OACE,qCACGA,GAAkBD,EACnB,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAM8rB,cAAc,SAApB,SACE,eAAC,IAAD,CAAMd,WAAW,SAASvB,GAAG,OAA7B,UACE,cAAC,KAAD,CAAM1K,SAAS,OAAOC,MAAI,EAACpoC,MAAM,aAAagvC,GAAG,MAAjD,SACG/pD,EAAE,qBAEL,cAAC,IAAD,CAAKqkC,IAAKH,EAAV,SACE,cAAC,IAAD,CAAUnpB,MAAM,sBAItB,eAAC,IAAD,CAAMo0C,WAAW,SAAS7K,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAM2L,cAAc,SAASlG,GAAG,OAAhC,UACE,cAAC,IAAD,UACGguC,EACC,cAACj9E,GAAA,EAAD,CAASooC,SAAS,OAAOC,MAAI,EAACpjD,MAAOk4F,EAAqBnzF,SAAU,IAEpE,cAAC,KAAD,CAAUi0E,OAAQ,GAAIv4E,MAAO,GAAIotD,GAAG,UAGvCkqC,EACC,cAACh9E,GAAA,EAAD,CACEooC,SAAS,OACTnoC,MAAM,aACNhb,MAAOi4F,EACPlzF,SAAU,EACVmW,KAAK,OACLC,OAAO,MAGT,cAAC,KAAD,CAAU69D,OAAQ,GAAIv4E,MAAO,QAGjC,cAAC,IAAD,CACE0iE,UAAW80B,IAA0BC,IAAwBj4D,EAC7D7kB,QAASm9E,EACTzqC,MAAM,KACNj1C,GAAG,wBAJL,SAMG5Y,EAAE,uBC3GXu4F,GAAaj4F,aAAOy6E,KAAPz6E,CAAH,oFAEZ,qBAAGkvC,MAAkBksB,aAAawC,MAKhC0vB,GAAattF,aAAO0wD,KAAP1wD,CAAH,kLAQZ,qBAAGkvC,MAAkBksB,aAAaxe,MAmBvBs7C,GAdI,WACjB,IAAQx4F,EAAMC,eAAND,EACR,OACE,cAAC,GAAD,CAAY0jD,UAAQ,EAACC,KAAK,0DAA1B,SACE,eAAC,IAAD,CAAQ4X,GAAI,CAAC,OAAQ,KAAM,KAAM,KAAM,QAAS1X,QAAQ,SAAxD,UACE,cAAC00C,GAAD,CAAYx9E,MAAM,gBAAgBooC,MAAI,EAACD,SAAS,OAAhD,SACGljD,EAAE,UAEL,cAAC,IAAD,CAAU+a,MAAM,gBAAgBipC,GAAI,CAAC,KAAM,KAAM,KAAM,EAAG,e,UC9B5Dy0C,GAAWn4F,KAAOU,IAAV,uJAUD03F,GAAcp4F,aAAOmwD,IAAPnwD,CAAH,6IAIpBy6E,MAKW0d,MCNTE,GAAar4F,aAAOm4F,GAAPn4F,CAAH,uJAIZ,qBAAGkvC,MAAkBksB,aAAaxe,MA8DvB07C,GAxD2B,SAAC,GAAc,IAAZx8E,EAAW,EAAXA,KACnCpc,EAAMC,eAAND,EACR,EAAuBg2F,eAAfmB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACN/6E,EAA0ED,EAA1EC,OAAQogB,EAAkErgB,EAAlEqgB,aAAcmF,EAAoDxlB,EAApDwlB,aAAchB,EAAsCxkB,EAAtCwkB,SAAU9P,EAA4B1U,EAA5B0U,WAAYjC,EAAgBzS,EAAhByS,YAEpDmB,EACVg6D,KADFppD,SAAY5Q,WAER6oE,EAAiB7oE,GAAcA,EAAWG,GAAG,GAE7CgkE,EAAqB13D,EAAah1B,OAClCg4D,EAAqB79B,EAAan6B,OAGlCgpF,IADwB,OAAR7vD,QAAQ,IAARA,OAAA,EAAAA,EAAU0B,eAAgB,IAAIl+B,KAAUw8B,EAAS0B,eAAiBn+B,MACzDgsB,GAAG,GAC5Bq7D,EAA8B,IAAXnvE,EAEnBy8E,EAAgBjqE,EAAcgqE,EAAiBpI,EAEjDhsC,EAAK,UAAMzkD,EAAE,QAAR,YAAmBy/D,GACxB9O,EAAQ,UAAM3wD,EAAE,SAAR,YAAoBm0F,GAC1B4E,EAA0B,IAAX18E,GAA4B,IAAXA,IAAiB86E,IAASC,EAUhE,OARIvoE,GACF41B,EAAQzkD,EAAE,YACV2wD,EAAW3wD,EAAE,wBACJwrF,IACT/mC,EAAQzkD,EAAE,cACV2wD,EAAQ,UAAM3wD,EAAE,QAAR,gBAAuBA,EAAE,SAASuhE,oBAAlC,SAIR,eAACo3B,GAAD,CAAY5lB,KAAK,OAAjB,UACGlkD,EACC,cAAC,GAAD,CAAyBk7B,GAAG,MAAMvpD,MAAO,GAAIu4E,OAAQ,KAErD,cAAC,KAAD,CAAgB9b,aAAcr7B,EAAcs7B,eAAgBzgC,EAAcstB,GAAG,MAAMvpD,MAAO,GAAIu4E,OAAQ,KAExG,eAAC2f,GAAD,WACGI,GACC,cAAC,KAAD,CAAM51C,SAAS,OAAOC,MAAI,EAACpoC,MAAO+V,EAAa,UAAY,YAAagvC,cAAc,YAAtF,SACG9/D,EAAE,YAGP,cAAC,KAAD,CAAMmjD,MAAOg0C,IAASC,EAAMh0C,MAAO+zC,GAAQC,EAA3C,SACG3yC,IAEFs0C,GACC,cAAC,KAAD,CAAM71C,SAAS,OAAOnoC,MAAM,aAA5B,SACG41C,WCrDPgoC,GAAar4F,aAAOm4F,GAAPn4F,CAAH,iFAEZ,qBAAGkvC,MAAkBksB,aAAaxe,MAKhC87C,GAAkB14F,KAAOU,IAAV,sDA0HNi4F,GAtHmC,SAAC,GAAuC,IAArC78E,EAAoC,EAApCA,KAAMrH,EAA8B,EAA9BA,QAAS0rB,EAAqB,EAArBA,eAC1DzgC,EAAMC,eAAND,EACR,EAAuBg2F,eAAfmB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACN/6E,EAAiFD,EAAjFC,OAAQulB,EAAyExlB,EAAzEwlB,aAActlB,EAA2DF,EAA3DE,aAAcskB,EAA6CxkB,EAA7CwkB,SAAU9R,EAAmC1S,EAAnC0S,kBAAmBD,EAAgBzS,EAAhByS,YACnE28D,EAA8B,IAAXnvE,EAEnB8vB,GAAmB,OAARvL,QAAQ,IAARA,OAAA,EAAAA,EAAUxB,eAAgB,IAAIh7B,KAAUw8B,EAASxB,eAAiBj7B,KAE/E6tF,EAAsB7sF,aAAiBgnC,EAAUvK,EAAa98B,UAC9DmtF,EAA4B9sF,aAAiBgnC,EAASje,aAAaY,GAAoB8S,EAAa98B,UACpGotF,EAAcn9E,GAAWo3B,EAAShc,GAAG,GACnCohE,EAAcjsF,aAAsB6mC,EAAUvK,EAAa98B,UAC3DwsF,EAAmB7rF,aAAausF,EAAqB,EAAG,GACxDjD,EAAYzyE,IAAiBC,KAAaC,QAGhD,EAGIwtE,KAHJ,IACEppD,SAAY7Q,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAAYwQ,EADhD,EACgDA,mBAC9CvQ,EAFF,EAEEA,kBAEF,EAAiEH,aAC/D/a,EACAgb,EACAC,EACAC,EACAnB,GALMoB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQtCilE,EAAiBl1D,GAAqD,IAA/BgW,SAAShW,GAEhDg1D,EADqB,IAAI3jE,KAAK6jE,GACW1vF,iBAEzCkzF,EAAYrqE,EAAc7uB,EAAE,qBAAuBA,EAAE,iBAAkB,CAAE+jD,MAAOniB,EAAan6B,SACnGuqF,EAAsBnjE,EAAcyB,EAAoB0hE,EACxDE,EAAcrjE,EAAcqB,EAAkBgiE,EAC9CD,EAA4BpjE,EAAc4B,EAAmBwhE,EAE7D,MAA+CluD,aAC7C,qCACE,cAACjpB,GAAA,EAAD,CAASooC,SAAS,OAAOnjD,MAAOuwB,EAAmBxrB,SAAU,EAAGq+C,MAAI,EAACloC,KAAK,SAC1E,cAACH,GAAA,EAAD,CAASooC,SAAS,OAAOnjD,MAAO0wB,EAAkB3rB,SAAU,EAAGq+C,MAAI,EAACjoC,OAAO,OAC1Elb,EAAE,iCACH,cAAC,KAAD,UAAOw1F,OAET,CAAExxD,UAAW,WAPPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAU5B,EAA2BirB,aACzB,cAAC,GAAD,CACEiiC,iBAAkBA,EAClBC,YAAaA,EACb3vD,aAAcA,EACd4vD,oBAAqBS,EACrB51E,OAAQA,EACR0yE,UAAWA,EACX0C,eAAgBjG,KARb2G,EAAP,oBAiBA,OACE,cAAC,GAAD,CAAYpf,KAAK,OAAjB,SACE,eAAC2lB,GAAD,WACE,cAAC,KAAD,CAAMx1C,SAAS,OAAOnoC,MAAM,aAAasoC,UAAU,OAAnD,SACG61C,KAEDz4D,GAAkB1rB,EAClB,cAAC,KAAD,CAAUvU,MAAM,OAAOu4E,OAAO,SAE9B,qCACG30C,GAAkBD,EACnB,eAAC,IAAD,WACE,eAAC,IAAD,CAAK4lB,GAAG,MAAMgvB,OAAO,OAAO59D,SAAU0T,GAAeqjE,EAjBrC,SAACv7B,GAC3BA,EAAMwiB,kBACNgZ,UAemGr0F,EAAzF,UACE,cAACgd,GAAA,EAAD,CACEgpC,GAAG,MACHX,MAAOg0C,IAASC,EAChBl0C,SAAUi0C,GAAQC,EAAO,OAAS,OAClCr8E,MAAOm3E,EAAc,UAAY,eACjCptF,SAAUotF,EAAc,EAAI,EAC5BnyF,MAAOmyF,EAAcF,EAAsB,IAE5CE,EACC,mCACGpjE,EAAoB,GACnB,cAAChU,GAAA,EAAD,CACEg+C,QAAQ,SACR5V,SAAS,OACTnoC,MAAM,aACNjW,SAAU,EACVoW,OAAO,IACPnb,MAAOkyF,EACPh3E,KAAK,WAKX,cAAC,KAAD,CAAM6oC,GAAG,MAAMZ,SAAS,OAAOnoC,MAAM,eAArC,sBAKH8T,GAAeqjE,IAAgBiF,IAASC,GACvC,cAAC4B,GAAD,CAAiB30D,IAAKH,EAAtB,SACE,cAAC,IAAD,CAAUnpB,MAAM,6B,iDCzEnBo+E,GAnDiB,SAAC,GAAsD,IAApD/8E,EAAmD,EAAnDA,KAAMg9E,EAA6C,EAA7CA,SAA6C,IAAnCxqE,sBAAmC,MAAlB,EAAkB,EAAZxT,EAAY,mBAC5EqhB,EAAmErgB,EAAnEqgB,aAAcmF,EAAqDxlB,EAArDwlB,aAAc9Q,EAAuC1U,EAAvC0U,WAAYhC,EAA2B1S,EAA3B0S,kBAAmBC,EAAQ3S,EAAR2S,IAC3D/uB,EAAMC,eAAND,EAER,EAAkF2uB,aAAWvS,EAAMwS,GAAtF87D,EAAb,EAAQ37D,IAAkCI,EAA1C,EAA0CA,iBAAkBC,EAA5D,EAA4DA,kBAEtDu7D,EAAeluD,EAAar7B,QAAb,+BAA+CD,aAAWs7B,EAAar7B,UAAa,QAEzG,EAA4BiuD,aAC1B,cAACgQ,GAAA,EAAD,CACE3vC,WAAYZ,EACZC,IAAKA,EACLwwC,UAAWv/D,EAAE,eAAgB,CAAEyH,OAAQg1B,EAAah1B,SACpD+3D,SAAUmrB,EACVlrB,mBAAoB79B,EAAan6B,OACjC0nB,iBAAkBA,EAClBC,kBAAmBA,EACnBR,eAAgBA,KATbg8D,EAAP,oBAaMyO,EAAe,SAAC1iC,GACpBA,EAAMwiB,kBACNyR,KAGF,OACE,cAAC,IAAD,2BAAMz7B,WAAW,SAAS7K,eAAe,iBAAoBlpC,GAA7D,aACGsvE,GAA+B55D,EAC9B,qCACE,cAAChW,GAAA,EAAD,CACEK,QAASk+E,EACTn2C,SAAS,OACTloC,WAAY8V,EACZ/wB,MAAO+wB,EAAa,EAAI45D,EACxB5lF,SAAU,EACVmW,KAAK,OAEL6V,GAAcsoE,GACd,cAAC,IAAD,CAAQj+E,QAASk+E,EAAcx1C,QAAQ,OAAOrjD,MAAM,OAAOu4E,OAAO,OAAOp4E,QAAQ,MAAM+/E,WAAW,MAAlG,SACE,cAAC,IAAD,CAAe3lE,MAAM,aAAava,MAAM,cAK9C,cAAC,KAAD,CAAUA,MAAM,OAAOu4E,OAAO,aC/ChC4f,GAAar4F,aAAOm4F,GAAPn4F,CAAH,sFAEZ,qBAAGkvC,MAAkBksB,aAAahb,MAqBvB44C,GAhByB,SAAC,GAA8B,IAA5Bl9E,EAA2B,EAA3BA,KAAMwS,EAAqB,EAArBA,eACvC5uB,EAAMC,eAAND,EACR,EAAuBg2F,eAAfmB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNvoE,EAAgBzS,EAAhByS,YACR,OACE,cAAC,GAAD,CAAYkkD,KAAK,OAAjB,SACE,eAAC2lB,GAAD,WACE,cAAC,KAAD,CAAMx1C,SAAS,OAAOnoC,MAAM,aAAasoC,UAAU,OAAnD,SACiBrjD,EAAd6uB,EAAgB,MAAW,SAE9B,cAAC,GAAD,CAAKzS,KAAMA,EAAMwS,eAAgBC,EAAcD,EAAiB,EAAGwqE,UAAWjC,IAASC,UCfzFuB,GAAar4F,aAAOm4F,GAAPn4F,CAAH,mDAwCDi5F,GApCyC,SAAC,GAAc,IAAZn9E,EAAW,EAAXA,KACjDpc,EAAMC,eAAND,EACAqc,EAAmDD,EAAnDC,OAAQogB,EAA2CrgB,EAA3CqgB,aAAcQ,EAA6B7gB,EAA7B6gB,YAAapO,EAAgBzS,EAAhByS,YACnCiR,EAAqBkqD,KAArBlqD,iBAEF0rD,EAA8B,IAAXnvE,EAEnBm9E,EAAqB/hF,mBAAQ,WACjC,GAAIoX,EACF,OAAO1pB,aAAiB26B,EAAkBrD,EAAa33B,UAEzD,GAAI0mF,EAAkB,CACpB,IAAMI,EAAgC,IAAIxnF,KAAU64B,GAAa5M,MAAMyP,GACvE,OAAO36B,aAAiBymF,EAA+BnvD,EAAa33B,UAEtE,OAAOK,aAAiB83B,EAAaR,EAAa33B,YACjD,CAAC+pB,EAAaiR,EAAkB0rD,EAAkBvuD,EAAaR,EAAa33B,WAE/E,OACE,cAAC,GAAD,CAAYiuE,KAAK,OAAjB,SACE,eAAC2lB,GAAD,WACE,cAAC,KAAD,CAAMx1C,SAAS,OAAOnoC,MAAM,aAAasoC,UAAU,OAAnD,SACGrjD,EAAE,kBAEJi9B,GAAeA,EAAY1M,IAAI,GAC9B,cAAC,IAAD,CAAMwoD,OAAO,OAAO5pB,WAAW,SAA/B,SACE,cAACr0C,GAAA,EAAD,CAASooC,SAAS,OAAOnjD,MAAOy5F,EAAoB10F,SAAU,EAAGmW,KAAI,WAAMwhB,EAAah1B,YAG1F,cAAC,KAAD,CAAUjH,MAAM,OAAOu4E,OAAO,eCjClC4f,GAAar4F,aAAOm4F,GAAPn4F,CAAH,mDAqDDm5F,GAjD+B,SAAC,GAAc,IAAZr9E,EAAW,EAAXA,KACvCC,EAA0DD,EAA1DC,OAAQ4gB,EAAkD7gB,EAAlD6gB,YAAarM,EAAqCxU,EAArCwU,WAAYC,EAAyBzU,EAAzByU,SAAUC,EAAe1U,EAAf0U,WAC3CH,EAAiBovB,eAAjBpvB,aACA3wB,EAAMC,eAAND,EAER,EACE0wB,aAAiBtU,EAAMuU,GADjBI,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,iBAAkBE,EAApD,EAAoDA,gBAAiBC,EAArE,EAAqEA,eAAgBC,EAArF,EAAqFA,gBAG/Es7D,EAAwB,IAAXrwE,EAEbq9E,EAAe3oE,EACnB,eAAC,IAAD,CAAMo+B,WAAW,SAAjB,UACE,eAAC,IAAD,CAAM4vB,KAAK,MAAX,UACE,cAACjkE,GAAA,EAAD,CAASooC,SAAS,OAAOnjD,MAAOqxB,EAAiBtsB,SAAU,IAC3D,cAAC,KAAD,CAAMk/C,GAAG,MAAM8b,cAAc,YAA7B,SACG9/D,EAAE,eAGP,cAAC,IAAD,CAAM++E,KAAK,IAAX,SACE,cAAC,KAAD,CACEr7B,UAAQ,EACRC,KAAMlwC,YAAe0d,EAAiBN,EAAWD,EAAY,aAC7DzV,QAAS,SAAC8yC,GAAD,OAAOA,EAAEkrB,mBAHpB,SAKE,cAAC,KAAD,CAAWn1B,GAAG,eAKpB,cAAC,KAAD,gBAOI21C,IADuB18D,EAAY9M,GAAG,KAAOQ,IAAkBO,IAAoBF,KAC7C07D,IAAe57D,EAC3D,OACE,cAAC,GAAD,CAAYiiD,KAAK,OAAjB,SACE,eAAC2lB,GAAD,WACE,cAAC,KAAD,CAAMx1C,SAAS,OAAOnoC,MAAM,aAAasoC,UAAU,OAAnD,SACiDrjD,EAA9CmxB,IAAmBJ,EAA6B,UAAe,eAEjE4oE,EAAc,cAAC,KAAD,CAAUn5F,MAAM,OAAOu4E,OAAO,SAAY2gB,QCnD3Df,GAAar4F,aAAOm4F,GAAPn4F,CAAH,6PAOZ,qBAAGkvC,MAAkBksB,aAAahb,MAOhCk5C,GAAYt5F,aAAOu5F,IAAPv5F,CAAH,mEACA,qBAAGgjF,QAAyB,iBAAmB,eAkB/CiW,GAd0C,SAAC,GAAgC,IAA9BpN,EAA6B,EAA7BA,SAAU2N,EAAmB,EAAnBA,aAC5D95F,EAAMC,eAAND,EACR,OACE,eAAC,GAAD,CAAY+yE,KAAK,OAAjB,UACG+mB,GACC,cAAC,KAAD,CAAM/+E,MAAM,UAAUooC,MAAI,EAA1B,SACcnjD,EAAXmsF,EAAa,OAAY,aAG9B,cAACyN,GAAD,CAAW7+E,MAAM,UAAUuoE,QAAS6I,QCrC7B4N,GAAkBz5F,KAAOU,IAAV,maAEN,qBAAGwuC,MAAkBG,OAAO2mB,SAM9C,qBAAG9mB,MAAkBksB,aAAaxe,MAQlC,qBAAG1N,MAAkBksB,aAAas+B,MASzBC,GAAe35F,KAAOU,IAAV,wEAKZk5F,GAAgB55F,KAAOU,IAAV,4GC4IXm5F,GAvJoD,SAAC,GAQ7D,IAPL99E,EAOI,EAPJA,OACAC,EAMI,EANJA,aACAslB,EAKI,EALJA,aACAhB,EAII,EAJJA,SACAH,EAGI,EAHJA,eACA5R,EAEI,EAFJA,YACAC,EACI,EADJA,kBAEQ9uB,EAAMC,eAAND,EACA+U,EAAYzR,cAAZyR,QAEFo3B,GAAmB,OAARvL,QAAQ,IAARA,OAAA,EAAAA,EAAUxB,eAAgB,IAAIh7B,KAAUw8B,EAASxB,eAAiBj7B,KAE/E6tF,EAAsB7sF,aAAiBgnC,EAAUvK,EAAa98B,UAC9DmtF,EAA4B9sF,aAAiBgnC,EAASje,aAAaY,GAAoB8S,EAAa98B,UACpGotF,EAAc/lD,EAAShc,GAAG,GACxBohE,EAAcjsF,aAAsB6mC,EAAUvK,EAAa98B,UAC3DwsF,EAAmB7rF,aAAausF,EAAqB,EAAG,GACxDP,EAA4B,IAAXp1E,EACjB0yE,EAAYzyE,IAAiBC,KAAaC,QAGhD,EAIIwtE,KAJJ,IACEppD,SAAY7Q,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAClCC,EAFF,EAEEA,kBACQrB,EAHV,EAGE+R,KAAQ/R,eAEV,EAAiEkB,aAC/D/a,EACAgb,EACAC,EACAC,EACAnB,GALMoB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQ5CuhE,EAAsBnjE,EAAcyB,EAAoB0hE,EACxDE,EAAcrjE,EAAcqB,EAAkBgiE,EAC9CD,EAA4BpjE,EAAc4B,EAAmBwhE,EAE7D,MAA2B5iC,aACzB,cAAC,GAAD,CACEiiC,iBAAkBA,EAClBC,YAAaA,EACb3vD,aAAcA,EACd4vD,oBAAqBS,EACrB51E,OAAQA,EACR0yE,UAAWA,EACX0C,eAAgBA,KARbU,EAAP,oBAYA,EAA+CpuD,aAC7C/jC,EAAE,gEACF,CAAEgkC,UAAW,iBAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBg2D,EAAcvrE,EAClB,cAAC,KAAD,CAAMq0B,SAAS,OAAOC,MAAI,EAACpoC,MAAM,YAAYg2C,GAAG,OAAO+O,cAAc,YAArE,SACG9/D,EAAE,uBAGL,qCACE,eAAC,KAAD,CAAMkjD,SAAS,OAAOC,MAAI,EAACpoC,MAAM,YAAYg2C,GAAG,OAAO+O,cAAc,YAArE,UACGl+B,EAAan6B,OAAQ,OAExB,cAAC,KAAD,CAAMy7C,SAAS,OAAOC,MAAI,EAACpoC,MAAM,aAAag2C,GAAG,OAAO+O,cAAc,YAAtE,SACG9/D,EAAE,eAKT,OAAK+U,EAYA0rB,EAYH,eAACs5D,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,eAACF,GAAD,WACE,cAAC,IAAD,CAAMnb,KAAK,IAAIx6B,GAAG,OAAO0L,cAAc,SAASoqC,UAAU,aAA1D,SACE,mCACGnI,EACC,qCACE,cAACp3E,GAAA,EAAD,CAASw/E,WAAW,IAAIn3C,MAAI,EAACD,SAAS,OAAOp+C,SAAU,EAAG/E,MAAOiyF,IAChEljE,EAAoB,GACnB,cAAChU,GAAA,EAAD,CACEg+C,QAAQ,SACR5V,SAAS,OACTnoC,MAAM,aACNjW,SAAU,EACVoW,OAAO,IACPnb,MAAOkyF,EACPh3E,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAMmoC,SAAS,OAAOnoC,MAAM,eAA5B,0BAOP8T,EACC,eAAC,IAAD,CAAMkwD,KAAK,MAAM9uB,cAAc,SAASoqC,UAAU,aAAalrC,WAAW,aAA1E,UACE,cAAC,GAAD,CAA0B2kC,gBAAc,IACxC,eAAC,IAAD,CAAMlmC,GAAG,MAAMtJ,eAAe,gBAAgB6K,WAAW,SAAzD,UACG/qB,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWkf,OAAK,EAAlC,SACGpjD,EAAE,qBAEL,cAAC,IAAD,CAAMmvD,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMnL,GAAG,MAAMZ,OAAK,EAApB,UACGx0B,EAAiB,IADpB,eAON,cAAC,IAAD,CAAQs0C,UAAWgvB,EAAa/2E,QAASg3E,EAAzC,SACoBnyF,EAAjByxF,EAAmB,UAAe,mBAzDzC,eAACsI,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,cAACF,GAAD,UACE,cAAC,KAAD,CAAU15F,MAAO,IAAKu4E,OAAO,OAAOzO,UAAW,UAfnD,eAACyvB,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,eAACF,GAAD,WACE,cAACp/E,GAAA,EAAD,CAASypC,GAAG,MAAM+1C,WAAW,IAAIn3C,MAAI,EAACD,SAAS,OAAOp+C,SAAU,EAAG/E,MAAO,IAC1E,cAAC,IAAD,CAAQmjE,UAAQ,EAAhB,SAAmCljE,EAAjByxF,EAAmB,UAAe,oBC7ExD8I,GAAoBj6F,KAAOU,IAAV,iDA+ORw5F,GAtO6C,SAAC,GAA8B,IAA5Bp+E,EAA2B,EAA3BA,KAAMqkB,EAAqB,EAArBA,eAEjEpkB,EASED,EATFC,OACAogB,EAQErgB,EARFqgB,aACAmF,EAOExlB,EAPFwlB,aACAvE,EAMEjhB,EANFihB,aACAvM,EAKE1U,EALF0U,WACAxU,EAIEF,EAJFE,aACAskB,EAGExkB,EAHFwkB,SACAc,EAEEtlB,EAFFslB,kBACA7S,EACEzS,EADFyS,YAEM7uB,EAAMC,eAAND,EACA+U,EAAYzR,cAAZyR,QAEF04E,EAAuB51E,YAAS4kB,EAAar7B,QAAUD,aAAWs7B,EAAar7B,SAAW,IAChG,EAAuFurF,GACrFc,EACApxE,EACAulB,EAAan6B,QAHQgzF,EAAvB,EAAQzN,cAAqD0N,EAA7D,EAA0C7N,kBAM1C,EAA4CO,KAApCC,EAAR,EAAQA,gBAAiBngB,EAAzB,EAAyBA,eACzB,EACEggB,GAAgBhgB,GADKytB,EAAvB,EAAQ3N,cAAsD4N,EAA9D,EAA2C/N,kBAGrCG,EAAgBn+D,EAAc8rE,EAAqBF,EACnD5N,EAAoBh+D,EAAc+rE,EAAyBF,EAE3D3L,EAAYzyE,IAAiBC,KAAaC,QAC1CiP,GAAoB,OAARmV,QAAQ,IAARA,OAAA,EAAAA,EAAUnV,WAAY,IAAIrnB,KAAUw8B,EAASnV,WAAatnB,KACtEm+B,GAAwB,OAAR1B,QAAQ,IAARA,OAAA,EAAAA,EAAU0B,eAAgB,IAAIl+B,KAAUw8B,EAAS0B,eAAiBn+B,KAClF02F,GAAyBhsE,GAAeyT,EAAcnS,GAAG,GAEzDkS,GAA8B,OAARzB,QAAQ,IAARA,OAAA,EAAAA,EAAUyB,qBAAsB,IAAIj+B,KAAUw8B,EAASyB,qBAAuBl+B,KAEpGusF,EAAqBvrF,aAAiBm9B,EAAe7F,EAAa33B,UAClE6rF,EAA2BxrF,aAC/Bm9B,EAAcpU,aAAawT,GAC3BjF,EAAa33B,UAGf,EAGIklF,KAFUh6D,EADd,EACE4Q,SAAY5Q,WACZC,EAFF,EAEEA,kBAGF,EAAiDrC,aAAoBoC,EAAYC,GAAzE7B,EAAR,EAAQA,gBAAiBD,EAAzB,EAAyBA,oBACnB2sE,EAAkB9qE,GAAcA,EAAWG,GAAG,GAC9C4qE,EAAoBlsE,GAAeisE,EACnCE,EAAwB71F,aAAiBipB,EAAgBF,aAAawT,GAAoBjF,EAAa33B,UAEvGwtF,EAAgBzjE,GAAew+D,GAAmB5hE,EAAU0E,GAAG,KAAO4+D,EAE5E,EAAiC1/B,aAAS,cAAC,GAAD,CAAsBnW,YAAazc,EAAah1B,UAAnFmpF,EAAP,oBAEA,EAAyBvhC,aACvB,cAAC,GAAD,CACE0/B,UAAWA,EACX3yE,KAAMA,EACNimB,oBAAqBA,EACrBX,kBAAmBA,KALhBmvD,EAAP,oBASA,EAA8BxhC,aAAS,cAAC,GAAD,CAAiBklC,WAAYlyD,EAAqBjmB,KAAMA,KAAxF6+E,EAAP,oBAEA,GAA2B5rC,aACzB,cAAC,GAAD,CACEhtB,oBAAqBA,EACrB0sD,UAAWA,EACX3yE,KAAMA,EACNslB,kBAAmBA,EACnBstD,iBAAe,KANZ8B,GAAP,qBAUA,GAAgCzhC,aAAS,cAAC,GAAD,CAAiBklC,WAAYnmE,EAAiBhS,KAAMA,EAAM4yE,iBAAe,KAA3GkM,GAAP,qBAEM5M,GAAU,WACVz/D,EACFosE,IAEApK,KAYJ,GAA+C9sD,aAC7C/jC,EAAE,wEACF,CAAEgkC,UAAW,WAFPE,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,QAASC,GAA5B,GAA4BA,eAKtB2sD,GAAoB1zD,EAAalN,GAAG,IAAMyQ,EAAS0B,cAAc/R,IAAI8M,GAE3E,OAAKtoB,EAeA0rB,EAeD6xD,EAEA,eAACyH,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAM/2C,SAAS,OAAOC,MAAI,EAACpoC,MAAM,aAAag2C,GAAG,OAAO+O,cAAc,YAAtE,SACG9/D,EAAE,mBAGP,cAACk6F,GAAD,UACE,cAAC,IAAD,CAAQ15F,MAAM,OAAO0iE,SAAU2pB,EAAmB1xE,QAAS6xE,EAAenpC,QAAQ,YAAlF,SACG7jD,EAAE,iBAQT66F,GAAyBE,EAEzB,eAAChB,GAAD,WACE,eAACE,GAAD,WACE,eAAC,KAAD,CAAM/2C,SAAS,OAAOC,MAAI,EAACpoC,MAAM,YAAYg2C,GAAG,OAAO+O,cAAc,YAArE,UACGrjC,EAAah1B,OAAQ,OAExB,cAAC,KAAD,CAAMy7C,SAAS,OAAOC,MAAI,EAACpoC,MAAM,aAAag2C,GAAG,OAAO+O,cAAc,YAAtE,SACiB9/D,EAAd6uB,EAAgB,uBAA4B,eAGjD,eAACqrE,GAAD,WACE,eAAC,IAAD,CAAMnb,KAAK,IAAIx6B,GAAG,OAAO0L,cAAc,SAASoqC,UAAU,aAA1D,UACE,cAACv/E,GAAA,EAAD,CACEw/E,WAAW,IACXn3C,MAAI,EACJD,SAAS,OACTp+C,SAAU,EACV/E,MAAO8uB,EAAcV,EAAsBuiE,IAE7C,cAAC51E,GAAA,EAAD,CACEooC,SAAS,OACT4V,QAAQ,SACR/9C,MAAM,aACNjW,SAAU,EACV/E,MAAO8uB,EAAcmsE,EAAwBrK,EAC7C11E,KAAK,OACLC,OAAO,SAGX,eAACq/E,GAAD,WACE,cAAC,IAAD,CAAY12C,QAAQ,YAAY1oC,QA9FxB,WACZ0T,EACFqsE,KAEApK,MA0F0D/mC,GAAG,MAAvD,SACE,cAAC,KAAD,CAAWhvC,MAAM,UAAUva,MAAM,WAElCuwF,GACC,sBAAM1sD,IAAKH,GAAX,SACE,cAAC,IAAD,CAAY2f,QAAQ,YAAYqf,UAAQ,EAAxC,SACE,cAAC,IAAD,CAASnoD,MAAM,eAAeva,MAAM,OAAOu4E,OAAO,aAItD,cAAC,IAAD,CACEl1B,QAAQ,YACR1oC,QAASknB,EAAoBlS,GAAG,GAAKm+D,GAAUsC,EAC/C1tB,SAAUpyC,EAHZ,SAKE,cAAC,IAAD,CAAS/V,MAAM,UAAUva,MAAM,cAIpC4jC,IAAkBD,SAOzB,eAAC41D,GAAD,WACE,eAACE,GAAD,WACE,eAAC,KAAD,CAAM/2C,SAAS,OAAOC,MAAI,EAACpoC,MAAM,YAAYg2C,GAAG,OAAO+O,cAAc,YAArE,UACG9/D,EAAE,SAAU,OAEf,cAAC,KAAD,CAAMkjD,SAAS,OAAOC,MAAI,EAACpoC,MAAM,aAAag2C,GAAG,OAAO+O,cAAc,YAAtE,SACGrjC,EAAah1B,YAGlB,cAACyyF,GAAD,UACE,cAAC,IAAD,CACE15F,MAAM,OACN2a,QAASknB,EAAoBlS,GAAG,GAAKm+D,GAAUsC,EAC/C/sC,QAAQ,YACRqf,SAAUpyC,EAJZ,SAMG9wB,EAAE,gBAxGP,eAAC+5F,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAM/2C,SAAS,OAAOC,MAAI,EAACpoC,MAAM,aAAag2C,GAAG,OAAO+O,cAAc,YAAtE,SACG9/D,EAAE,qBAGP,cAACk6F,GAAD,UACE,cAAC,KAAD,CAAU15F,MAAO,IAAKu4E,OAAO,OAAOzO,UAAW,UAtBnD,eAACyvB,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAM/2C,SAAS,OAAOC,MAAI,EAACpoC,MAAM,aAAag2C,GAAG,OAAO+O,cAAc,YAAtE,SACG9/D,EAAE,qBAGP,cAACk6F,GAAD,UACE,cAAC7pD,GAAA,EAAD,CAAc7vC,MAAM,eC9GxB26F,GAAkB5oC,aAAH,yGASf6oC,GAAoB7oC,aAAH,yGASjB8oC,GAAoB/6F,KAAOU,IAAV,iQACR,qBAAGmrF,SAEV/T,aADI,2EAEA+iB,IAEJ/iB,aAJI,2EAKAgjB,OAGI,qBAAG5rD,MAAkBG,OAAOO,YAMxC,qBAAGV,MAAkBksB,aAAajb,MAMhCs5C,GAAkBz5F,KAAOU,IAAV,uLAIjB,qBAAGwuC,MAAkBksB,aAAaxe,MAwBhCo+C,GAAch7F,aAAOC,IAAPD,CAAH,oKAKb,qBAAGkvC,MAAkBksB,aAAajb,MAqLvB86C,GA/KiC,SAAC,GAA8D,IAAD,EAA3DxmF,EAA2D,EAA3DA,QAASqH,EAAkD,EAAlDA,KAAMqkB,EAA4C,EAA5CA,eAAgB0rD,EAA4B,EAA5BA,SAAUqP,EAAkB,EAAlBA,YAExFn/E,EASED,EATFC,OACAogB,EAQErgB,EARFqgB,aACAmF,EAOExlB,EAPFwlB,aACA3E,EAME7gB,EANF6gB,YACArM,EAKExU,EALFwU,WACAC,EAIEzU,EAJFyU,SACAwM,EAGEjhB,EAHFihB,aACA1gB,EAEEP,EAFFO,gBACAkS,EACEzS,EADFyS,YAEM7uB,EAAMC,eAAND,EACFqrF,EAAsBlqF,aAAWwb,GACjC2uE,EAA2B9oF,eACzBmuB,EAAiBovB,eAAjBpvB,aACAwmE,EAAqBqE,EAArBrE,KAAMC,EAAeoE,EAAfpE,KAAMqE,EAASD,EAATC,KACd1C,GAAgB5B,GAAQC,IAAoB,IAAX/6E,EAEvC,EACEqU,aAAiBtU,EAAMuU,GADjBI,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,iBAAkBE,EAApD,EAAoDA,gBAAiBC,EAArE,EAAqEA,eAAgBC,EAArF,EAAqFA,gBAG/Em6D,KAAqB,UAACpqC,OAAOC,gBAAR,aAAC,EAAiBwC,YACvC7pC,EAAe6nB,EAAaxgC,QAAUD,aAAWygC,EAAaxgC,SAAW,GAE/E,EAGI4oF,KAFFlqD,EADF,EACEA,iBACQlR,EAFV,EAEE+R,KAAQ/R,eAGJsnE,EAA0BtnE,GAAkBA,EAAiB,IAC7D48D,EAA8B,IAAXnvE,EAazB,EAII0nB,aAAW/jC,EAAE,+CAAgD,CAAEyH,OAAQg1B,EAAah1B,SAAW,CACjGu8B,UAAW,WAJAynD,EADb,EACEvnD,UACSwnD,EAFX,EAEEvnD,QACgBwnD,EAHlB,EAGEvnD,eAKI6nD,EAAoBjsF,EAAE,wEACtBksF,EAAkBlsF,EACtB,uGAGF,EAII+jC,aAAWlV,EAAcq9D,EAAkBD,EAAmB,CAChEjoD,UAAW,iBAJA03D,EADb,EACEx3D,UACSy3D,EAFX,EAEEx3D,QACgBy3D,EAHlB,EAGEx3D,eAKIy3D,EAAcx+D,EAAalN,GAAG,GAClC,eAAC,IAAD,CAAMy9B,GAAG,MAAMtJ,eAAe,gBAA9B,UACE,eAAC,KAAD,WAAOtkD,EAAE,uBAAT,OACA,cAAC,KAAD,oBAAUsF,aAAsB+3B,EAAcZ,EAAa33B,SAAU,GAArE,YAA2E23B,EAAah1B,aAExF,KAEEq0F,EACJ5qE,GAAmBF,EACjB,eAAC,IAAD,CAAM48B,GAAG,MAAMtJ,eAAe,gBAA9B,UACE,eAAC,KAAD,WAAwBtkD,EAAjBmxB,EAAmB,UAAe,aAAzC,OACA,cAAC,IAAD,UACE,eAAC,KAAD,CAAMuyB,UAAQ,EAACC,KAAMlwC,YAAe0d,EAAiBN,EAAWD,EAAY,aAA5E,UACE,cAAC9V,GAAA,EAAD,CAASooC,SAAS,OAAOnjD,MAAOqxB,EAAiBtsB,SAAU,EAAGiW,MAAM,YACpE,cAAC,KAAD,CAAMipC,GAAG,MAAMjpC,MAAM,UAAU+kD,cAAc,YAA7C,SACG9/D,EAAE,YAEL,cAAC,KAAD,CAAWgkD,GAAG,MAAMjpC,MAAM,oBAKhC,cAAC,KAAD,CAAUva,MAAM,OAAOu4E,OAAO,SAG5BgjB,EACJ,eAAC,IAAD,CAAMz3C,eAAe,gBAAgB6K,WAAW,SAASvB,GAAG,MAA5D,UACE,eAAC,KAAD,WAAqB5tD,EAAd6uB,EAAgB,MAAW,OAAlC,OACA,cAAC,GAAD,CAAKzS,KAAMA,EAAMg9E,UAAQ,EAACxqE,eAAgBC,EAAcqnE,EAA0B,OAIhF8F,EACJ,eAAC,IAAD,CAAM13C,eAAe,gBAAgB6K,WAAW,SAASvB,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMoB,SAAU,CAAC,OAAQ,QAAzB,UAAmChvD,EAAE,gBAArC,OACA,eAAC,IAAD,CAAMmvD,WAAW,SAAjB,UACGlyB,GAAeA,EAAY1M,IAAI,GAC9B,qCACE,cAACzV,GAAA,EAAD,CAASooC,SAAS,OAAOnjD,MAtEL,WAC5B,GAAI8uB,EACF,OAAO1pB,aAAiB26B,EAAkBrD,EAAa33B,UAEzD,GAAI0mF,EAAkB,CACpB,IAAMI,EAAgC,IAAIxnF,KAAU64B,GAAa5M,MAAMyP,GACvE,OAAO36B,aAAiBymF,EAA+BnvD,EAAa33B,UAEtE,OAAOK,aAAiB83B,EAAaR,EAAa33B,UA8DV+mF,GAAyB/mF,SAAU,EAAGmW,KAAI,WAAMwhB,EAAah1B,UAC7F,sBAAM48B,IAAKonD,EAAX,SACE,cAAC,IAAD,CAAU1wE,MAAM,aAAava,MAAM,OAAOwjD,GAAG,aAIjD,cAAC,KAAD,CAAUxjD,MAAM,OAAOu4E,OAAO,SAE/B4S,GAA6BD,QAKpC,OACE,eAAC2P,GAAD,CAAmBlP,SAAUA,EAA7B,UACE,eAACmP,GAAD,WACGO,GACC1E,GAAQC,IAAS2E,GACjB5E,GAAQC,GAAQqE,IAASO,EAC1BjrE,GAA4B+qE,EAC7B,cAAC,IAAD,CAAMluC,GAAG,MAAMtJ,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CAAcX,KAAI,yCAAoCxiD,aAAWygC,EAAaxgC,UAAY+hD,MAAM,EAAhG,SACGnjD,EAAE,sBAGP,cAAC,IAAD,CAAM4tD,GAAG,MAAMtJ,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CAAcX,KAAM/hB,EAAal6B,YAAay7C,MAAM,EAApD,SACGnjD,EAAE,yBAGNqrF,GACC,cAAC,IAAD,CAAMz9B,GAAG,MAAMtJ,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CACEX,KAAI,UAAKnqB,KAAL,oBAAkC3K,EAAcy8D,EAA2BD,GAC/EloC,MAAM,EAFR,SAIGnjD,EAAE,qBAIR+U,GAAWw2E,GAAqBxxE,GAC/B,cAAC,IAAD,CAAM6zC,GAAG,MAAMtJ,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,eAAC,IAAD,CACET,QAAQ,OACR18B,EAAE,IACF4xD,OAAO,OACP59D,QAAS,kBAAMumC,aAAc3nC,EAAc6nB,EAAan6B,OAAQm6B,EAAa98B,WAJ/E,UAME,cAAC,KAAD,CAAMiW,MAAM,UAAZ,SAAuB/a,EAAE,qBACzB,cAAC,KAAD,CAAcgkD,GAAG,aAItBn1B,EAAc,cAAC,KAAD,IAAyB,cAAC,KAAD,IACvC+sE,GAAqBD,EACtB,sBAAMt3D,IAAKq3D,EAAX,SACE,cAAC,IAAD,CAAU13C,GAAG,MAAMxjD,MAAM,OAAOu4E,OAAO,OAAOh+D,MAAM,oBAGxD,eAAC,GAAD,WACGg+E,GACC,cAAC,KAAD,CAAMj1C,GAAG,MAAM8J,GAAG,OAAO7yC,MAAM,aAA/B,SACG8T,EAAc7uB,EAAE,uBAAL,UAAiCA,EAAE,QAAnC,gBAAkDA,EAAE,SAASuhE,oBAA7D,UAGhB,cAAC06B,GAAD,6BAAa7/E,GAAb,IAAmBqkB,eAAgBA,KACnC,cAACy7D,GAAD,CAAO9/E,KAAMA,EAAMqkB,eAAgBA,WCpQrC07D,GAAY77F,KAAOU,IAAV,uGA2CAo7F,GArCyB,SAAC,GAAuC,IAArChgF,EAAoC,EAApCA,KAAMrH,EAA8B,EAA9BA,QAAS0rB,EAAqB,EAArBA,eACxD,EAAyCu1D,eAAjCmB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAMqE,EAApB,EAAoBA,KAAMY,EAA1B,EAA0BA,KAAMtG,EAAhC,EAAgCA,KAChC,EAAgC93F,oBAAS,GAAzC,mBAAOkuF,EAAP,KAAiBmQ,EAAjB,KACMC,EAA0B9iB,aAAkB0S,EAAU,KAOlDv9D,EACNo7D,KADFrpD,KAAQ/R,eAEJsnE,EAA0BtnE,GAAkBA,EAAiB,IAEnE,OACE,qCACE,eAACutE,GAAD,CAAWppB,KAAK,MAAM53D,QAXH,WACrBmhF,GAAY,SAACp6B,GAAD,OAAWA,MAUrB,UACE,cAAC,GAAD,CAAU9lD,KAAMA,IAChB,cAAC,GAAD,CAAcA,KAAMA,EAAMrH,QAASA,EAAS0rB,eAAgBA,IAC5D,cAAC,GAAD,CAASrkB,KAAMA,EAAMwS,eAAgBsnE,KACnCmG,GAAQtG,IAAS,cAAC,GAAD,CAAiB35E,KAAMA,IACzC25E,GAAQ,cAAC,GAAD,CAAY35E,KAAMA,IAC3B,cAACogF,GAAD,CAAkBrQ,SAAUA,EAAU2N,aAAc2B,GAAQY,GAAQtG,OAErEwG,GACC,cAAC,GAAD,CACExnF,QAASA,EACTqH,KAAMA,EACNqkB,eAAgBA,EAChB0rD,SAAUA,EACVqP,YAAa,CAAErE,OAAMC,OAAMqE,OAAMY,OAAMtG,cC3C3C0G,GAAcn8F,KAAOU,IAAV,sJACE,qBAAGwuC,MAAkB07C,MAAMxI,QAExB,qBAAGlzC,MAAkBkzC,KAAK9yC,cAEjB,qBAAGJ,MAAkBG,OAAOuzB,YAIrDw5B,GAAoBp8F,KAAOU,IAAV,4IACJ,qBAAGwuC,MAAkB07C,MAAMxI,QACxB,qBAAGlzC,MAAkBG,OAAOK,cAK5C2sD,GAAwBr8F,KAAOU,IAAV,0HAqCZ47F,GA9B+B,SAAC,GAAwC,IAAtCvlE,EAAqC,EAArCA,MAAOoJ,EAA8B,EAA9BA,eAAgB1rB,EAAc,EAAdA,QAC9D/U,EAAMC,eAAND,EACF68F,EAAiBl5F,iBAAuB,MAM9C,OACE,cAAC+4F,GAAD,UACE,eAACD,GAAD,CAAa1pB,KAAK,QAAQ1uC,IAAKw4D,EAA/B,UACGxlE,EAAMtY,KAAI,SAAC3C,GAAD,OACT,cAAC,GAAD,CAEEA,KAAMA,EACNrH,QAASA,EACT0rB,eAAgBA,GAHXrkB,EAAKyS,YAAc,YAAczS,EAAKC,WAM/C,cAACsgF,GAAD,UACE,eAAC,IAAD,CAAQ94C,QAAQ,OAAO1oC,QAjBX,WAClB0hF,EAAe94F,QAAQ+4F,eAAe,CACpCC,SAAU,YAeN,UACG/8F,EAAE,UACH,cAAC,IAAD,CAAe+a,MAAM,uBC9B3BiiF,GAAa18F,aAAOu3E,KAAPv3E,CAAH,2DAIV28F,GAAe38F,aAAOmwD,IAAPnwD,CAAH,0HAGd,qBAAGkvC,MAAkBksB,aAAahb,MAKhCw8C,GAAsB58F,aAAOmwD,IAAPnwD,CAAH,gFAKnB68F,GAAiB78F,aAAOmwD,IAAPnwD,CAAH,6DAiQL88F,GAzPS,WACtB,IAAMt/B,EAAWnqB,eACT3zC,EAAMC,eAAND,EACA+U,EAAYzR,cAAZyR,QACR,ElDxBsB,SAACA,GACvB,IAAQ62B,EAAgBV,eAAhBU,YACF5nB,EAAW+U,eACjBz6B,qBAAU,WACJyW,GACFiP,EAASme,aAAwBptB,MAElC,CAACA,EAASiP,EAAU4nB,IAEvB,MAAkCznB,aAAY,SAAC/lB,GAAD,MAAmB,CAC/Di5B,MAAOj5B,EAAMi5B,MAAMr6B,KACnByjC,eAAgBriC,EAAMi5B,MAAMoJ,mBAFtBpJ,EAAR,EAAQA,MAAOoJ,EAAf,EAAeA,eAIf,MAAO,CAAEpJ,MAAOA,EAAMtY,IAAIsiD,MAAgB5gC,kBkDWe48D,CAAStoF,GAAnDuoF,EAAf,EAAQjmE,MAA8BoJ,EAAtC,EAAsCA,eACtC,EAAoCmjC,cAAgB,EAAO,CAAEG,gBAAiB,wBAA9E,mBAAO8yB,EAAP,KAAmBC,EAAnB,KACA,EAAwD74F,mBAR1B,IAQ9B,mBAAOs/F,EAAP,KAA6BC,EAA7B,KACA,EAA0Cv/F,oBAAS,GAAnD,mBAAOw/F,EAAP,KAAsBC,EAAtB,KACMC,EAAch6F,iBAAuB,MAC3C,EAAgCigE,aAAgBwkB,GAASuO,MAAO,CAAE5yB,gBAAiB,sBAAnF,mBAAOuyB,EAAP,KAAiBU,EAAjB,KACA,EAAsC/4F,mBAAS,IAA/C,mBAAOmkB,EAAP,KAAoB46D,EAApB,KACA,EAAoC/+E,mBAAS,OAA7C,mBAAO2/F,EAAP,KAAmBC,EAAnB,KACMC,EAAoBn6F,iBAAO,GACjC,EAKIqmF,KALJ,IACEppD,SAAY7Q,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAC1BpB,EAFV,EAEE+R,KAAQ/R,eACRqB,EAHF,EAGEA,kBACA6P,EAJF,EAIEA,iBAEIi+D,EAAwB/tE,GAAcA,EAAWG,GAAG,GACpD+lE,EAA0BtnE,GAAkBA,EAAiB,IAE7DyI,EAAQ5f,mBAAQ,WACpB,IAAMumF,EAAWV,EAAsBnhF,MAAK,SAACC,GAAD,OAA0B,IAAhBA,EAAKC,UAE3D,MAAM,CADa,6BAAQ2hF,GAAR,IAAkBnvE,aAAa,KAClD,mBAA0ByuE,MACzB,CAACA,IAGJ,EAAmC7lF,mBAAQ,kBAAMwmF,KAAU5mE,GAAO,SAACjb,GAAD,OAAUA,EAAK0U,gBAAa,CAACuG,IAA/F,mBAAO6mE,EAAP,KAAsBC,GAAtB,KACMC,GAA0B3mF,mBAC9B,kBACEymF,EAAch3E,QAAO,SAAC9K,GACpB,OAAIA,EAAKyS,YACAkvE,EAEF3hF,EAAKwkB,UAAY,IAAIx8B,KAAUgY,EAAKwkB,SAAS0B,eAAe+7D,cAAc,QAErF,CAACH,EAAeH,IAEZO,GAAsB7mF,mBAC1B,kBACE0mF,GAAUj3E,QAAO,SAAC9K,GAChB,OAAIA,EAAKyS,YACAkvE,EAEF3hF,EAAKwkB,UAAY,IAAIx8B,KAAUgY,EAAKwkB,SAAS0B,eAAe+7D,cAAc,QAErF,CAACF,GAAWJ,IAERhH,GAA0BqH,GAAwBt7E,OAAS,EAEjEkoB,elDxD+B,WAC/B,IAAQj2B,EAAYzR,cAAZyR,QACA62B,EAAgBV,eAAhBU,YACF5nB,EAAW+U,eAEjBz6B,qBAAU,WACR0lB,EAAS6e,kBACR,CAAC7e,EAAU4nB,IAEdttC,qBAAU,WACR0lB,EAASkf,aAAuB,CAAEnuB,eACjC,CAACiP,EAAU4nB,EAAa72B,IAE3BzW,qBAAU,WACR0lB,EAASgf,kBACR,CAAChf,IkD0CJu6E,GlDxFqC,WACrC,IAAMv6E,EAAW+U,eACToS,EAAgBD,eAAhBC,YAER7sC,qBAAU,YACkB,uCAAG,4BAAA3B,EAAA,sEACDiH,KAAkBg8C,iBADjB,OACrB52B,EADqB,OAE3BhF,EAAS6c,aAA0B7X,IAFR,2CAAH,qDAK1Bw1E,GACAx6E,EAASie,kBACR,CAACje,EAAUmnB,IkD6EdszD,GAEAngG,qBAAU,WAaHm/F,IACsB,IAAIiB,sBAbT,SAACC,GACrB,YAAgBA,EAAhB,MACUC,gBACRpB,GAAwB,SAACqB,GACvB,OAAIA,GAAyBf,EAAkB/5F,QACtC86F,EAhEa,GAkEfA,OAMsD,CAC/DC,WAAY,MACZC,UAAW,IAEIC,QAAQrB,EAAY55F,SACrC25F,GAAiB,MAElB,CAACD,IAEJ,IAiDIwB,GAjDEC,GAAoBphC,EAASlC,SAAS95C,SAAS,WAwDrD,GALEm9E,GADEC,GACYrI,EAAauH,GAA0BF,EAEvCrH,EAAayH,GAAsBH,GAG/C/7E,EAAa,CACf,IAAM+8E,GAAiB/5B,aAAShjD,EAAYnD,eAC5CggF,GAAcA,GAAY/3E,QAAO,SAAC9K,GAAD,OAC/BgpD,aAAShpD,EAAKwlB,aAAan6B,OAAOwX,eAAe6C,SAASq9E,OAI9DF,GArDkB,SAACG,GACjB,OAAQxB,GACN,IAAK,MAEH,OAAOyB,KACLD,GACA,SAAChjF,GAAD,OAAiBA,EAAK2S,IAAMJ,aAAWvS,EAAM85E,GAAyBnnE,IAAM,IAC5E,QAEJ,IAAK,SACH,OAAOswE,KACLD,GACA,SAAChjF,GACC,OAAKA,EAAKwkB,UAAaxkB,EAAK0S,kBAGrB1S,EAAKyS,YACRiB,aACE/a,EACAgb,EACAC,EACAC,EACA7T,EAAK0S,mBACL2B,iBACFrU,EAAKwkB,SAASxB,cAAcr6B,MAAMqX,EAAK0S,mBAAmBzpB,WAVrD,IAYX,QAEJ,IAAK,cACH,OAAOg6F,KACLD,GACA,SAAChjF,GAAD,OAAiBA,EAAKyS,YAAciR,EAAiBz6B,WAAa+W,EAAK6gB,YAAY53B,aACnF,QAEJ,QACE,OAAO+5F,GAkBCE,CAAUL,IAAa/jE,MAAM,EAAGqiE,GAC9CO,EAAkB/5F,QAAUk7F,GAAYn8E,OAExC,IAAMy8E,GACJ,cAACvC,GAAD,UACGiC,GAAYlgF,KAAI,SAAC3C,GAAD,OACfA,EAAKyS,YACH,cAAC,GAAD,CAA+BzS,KAAMA,EAAM05E,eAAgBe,GAAxC,aAEnB,cAAC,GAAD,CAA4Bz6E,KAAMA,EAAMrH,QAASA,GAAlCqH,EAAKC,aAMtBmjF,GAAc,cAAC,GAAD,CAAYnoE,MAAO4nE,GAAalqF,QAASA,EAAS0rB,eAAgBA,IAEtF,OACE,qCACE,cAACm3C,GAAA,EAAD,UACE,eAAC,IAAD,CAAMtzB,eAAe,gBAAgB2L,cAAe,CAAC,SAAU,KAAM,KAAM,OAA3E,UACE,eAAC,IAAD,CAAM8uB,KAAK,IAAI9uB,cAAc,SAASlG,GAAI,CAAC,MAAO,GAAlD,UACE,cAAC,IAAD,CAASgH,GAAG,KAAKlD,MAAM,MAAM9yC,MAAM,QAAQ6yC,GAAG,OAA9C,SACG5tD,EAAE,qBAEL,cAAC,IAAD,CAAS6tD,MAAM,KAAK9yC,MAAM,QAA1B,SACG/a,EAAE,kCAEL,cAAC,IAAD,CAAS6tD,MAAM,KAAK9yC,MAAM,QAA1B,SACG/a,EAAE,0CAIP,eAAC,IAAD,CAAM++E,KAAK,IAAIhG,OAAO,cAAcz0B,eAAe,SAAS6K,WAAW,SAASrL,GAAI,CAAC,OAAQ,KAAM,KAAnG,UACE,cAAC,GAAD,IACA,cAAC,GAAD,YAIN,eAACsY,GAAA,EAAD,WACE,eAAC6gC,GAAD,CAAc34C,eAAe,gBAA7B,UACE,cAAC,GAAD,CACEuyC,WAAYA,EACZC,cAAeA,EACfC,wBAAyBA,GACzBT,SAAUA,EACVU,YAAaA,IAEf,eAACkG,GAAD,WACE,eAAC,IAAD,CAAMjtC,cAAc,SAASzvD,MAAM,MAAnC,UACE,cAAC,KAAD,CAAM0iD,SAAS,OAAOC,MAAI,EAACpoC,MAAM,aAAa+kD,cAAc,YAA5D,SACG9/D,EAAE,aAEL,cAACm9F,GAAD,UACE,cAAC1kB,GAAA,EAAD,CACE5yE,QAAS,CACP,CACEqyD,MAAOl4D,EAAE,OACTD,MAAO,OAET,CACEm4D,MAAOl4D,EAAE,OACTD,MAAO,OAET,CACEm4D,MAAOl4D,EAAE,UACTD,MAAO,UAET,CACEm4D,MAAOl4D,EAAE,gBACTD,MAAO,gBAGXiuD,SAlIe,SAACurB,GAC9BskB,EAActkB,EAAOx5E,eAqIb,eAAC,IAAD,CAAMkwD,cAAc,SAASzvD,MAAM,MAAnC,UACE,cAAC,KAAD,CAAM0iD,SAAS,OAAOC,MAAI,EAACpoC,MAAM,aAAa+kD,cAAc,YAA5D,SACG9/D,EAAE,YAEL,cAACm9F,GAAD,UACE,cAAC/Z,GAAA,EAAD,CAAap1B,SA/IK,SAAC2I,GAC/BqmB,EAAermB,EAAMzI,OAAOnuD,QA8IgC+tD,YAAY,4BAKnEoxC,IACC,cAAC,KAAD,CAAMh8C,SAAS,OAAOnoC,MAAM,UAAU+2E,GAAG,OAAzC,SACG9xF,EAAE,iFAGNs2F,IAAalO,GAASsO,KAAO6I,GAAaC,GAC3C,qBAAKn7D,IAAKs5D,IACV,cAAC,IAAD,CACE9qF,GAAG,OACHixC,GAAG,OACHwZ,IAAI,kBAEJ98D,MAAO,IACPu4E,OAAQ,a,iEC7RZrhB,GAAap3D,KAAOU,IAAV,yLAKM,qBAAGwuC,MAAkBG,OAAOG,iBAK5C2vD,GAAen/F,KAAOU,IAAV,iPAKI,gBAAG4Y,EAAH,EAAGA,MAAO41B,EAAV,EAAUA,MAAV,OAAuB51B,EAAQ41B,EAAMG,OAAOggB,QAAUngB,EAAMG,OAAOC,cACtD,qBAAGh2B,MAAqB,WAAa,gBACtD,qBAAGA,MAAqB,WAAa,gBACjC,qBAAG41B,MAAkBG,OAAOG,iBAG5C4vD,GAAiBp/F,KAAOU,IAAV,6DAKdy1D,GAAQn2D,KAAOg2D,MAAV,6kBAMW,qBAAG9mB,MAAkBG,OAAOG,iBACtB,qBAAGl2B,MAAqB,WAAa,gBACtD,gBAAGA,EAAH,EAAGA,MAAO41B,EAAV,EAAUA,MAAV,OAAuB51B,EAAQ41B,EAAMG,OAAOggB,QAAUngB,EAAMG,OAAO8f,WAMjE,qBAAGjgB,MAAkBG,OAAOgwD,gBAe5B,qBAAGnwD,MAAkBG,OAAOgwD,gBAI1B,SAASC,GAAT,GAUX,IATFhnF,EASC,EATDA,GACA7Y,EAQC,EARDA,MACAiuD,EAOC,EAPDA,SAQQxqD,EAAYH,cAAZG,QAEAxD,EAAMC,eAAND,EAER,EAAmCiyC,aAAOlyC,GAAlCqB,EAAR,EAAQA,QAASsiB,EAAjB,EAAiBA,QAASvE,EAA1B,EAA0BA,KAEpBw+D,EAAc1+E,uBAClB,SAAC03D,GACC,IACMkpC,EADQlpC,EAAMzI,OAAOnuD,MACCH,QAAQ,OAAQ,IAC5CouD,EAAS6xC,KAEX,CAAC7xC,IAGGp0C,EAAQ7D,QAAQhW,EAAM+iB,OAAS,IAAMY,IAAYtiB,GAEvD,OACE,cAACs2D,GAAD,CAAY9+C,GAAIA,EAAhB,SACE,cAAC6mF,GAAD,CAAc7lF,MAAOA,EAArB,SACE,cAAC8lF,GAAD,UACE,eAAC,KAAD,CAAYz+F,IAAI,KAAhB,UACE,eAACZ,GAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,eACRoB,GAAWoC,GACV,eAAC,KAAD,CAAMkgD,UAAQ,EAACN,OAAK,EAACO,KAAMlwC,YAAc,OAAC0L,QAAD,IAACA,IAAQ/d,EAAS,UAAWoC,GAAtE,cACIxD,EAAE,mBADN,UAKJ,cAACy2D,GAAD,CACEuC,UAAU,0BACVtlD,KAAK,OACLojD,aAAa,MACbC,YAAY,MACZ+oC,eAAe,MACf3oC,WAAW,QACXrJ,YAAa9tD,EAAE,8BACf4Z,MAAOA,EACPo9C,QAAQ,wBACRhJ,SAAU2vB,EACV59E,MAAOA,a,8ECpHR+f,GAAUxf,KAAOU,IAAV,wEAKP++F,GAAez/F,KAAOU,IAAV,yDAGrB,qBAAGg/F,UAEC5nB,aADK,iIAOL,QAGK6nB,GAAY3/F,aAAOy6E,KAAPz6E,CAAH,8CACX,gBAAGkvC,EAAH,EAAGA,MAAO0wD,EAAV,EAAUA,SAAV,OACM,IAAbA,GAA+B,IAAbA,EACd1wD,EAAMG,OAAOggB,QACA,IAAbuwC,EACA1wD,EAAMG,OAAOwwD,QACA,IAAbD,EACA1wD,EAAMG,OAAO7L,KACb0L,EAAMG,OAAOnlB,WAGR41E,GAAuB9/F,KAAO+/F,OAAV,qcAGX,qBAAG7wD,MAAkBG,OAAOC,cAQvC,qBAAGJ,MAAkBG,OAAO7L,QAOf,qBAAG0L,MAAkBG,OAAOO,YAG5B,qBAAGV,MAAkBG,OAAOO,YAKvCowD,GAAgBhgG,aAAOy6E,MAAMvjB,MAAM,CAAEgkB,UAAU,GAA/Bl7E,CAAH,gDAIpBigG,GAAyBjgG,KAAOU,IAAV,gUACN,gBAAGwuC,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAOggB,QAA/B,SAQX,qBAAGngB,MAAkBG,OAAOggB,WASjC6wC,GAAsClgG,KAAOU,IAAV,mNACnB,gBAAGwuC,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAOggB,QAA/B,SAUf,SAAS8wC,GAAT,GAA0D,IAA7B7mF,EAA4B,EAA5BA,MAClC,OACE,eAAC2mF,GAAD,WACE,cAACC,GAAD,UACE,cAAC,IAAD,CAAWhgG,MAAM,WAEnB,4BAAIoZ,OAKH,I,GAAM8mF,GAAwBpgG,aAAO4D,KAAP5D,CAAH,yHACZ,gBAAGkvC,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAOwwD,QAA/B,SCjGP,SAASQ,GAAT,GAA2E,IAA3C77D,EAA0C,EAA1CA,YAC7C,OACE,cAACm7D,GAAD,CAAW/8C,SAAS,OAAOg9C,SAAUz6D,aAAgBX,GAArD,SACGA,EAAeA,EAAY7Y,SAASvV,KAAY,SAAjC,UAA+CouB,EAAYt/B,QAAQ,GAAnE,KAA4E,MCKlG,IAAMo7F,GAA2BtgG,aAAO4D,KAAP5D,CAAH,iJAGX,qBAAGkvC,MAAkB07C,MAAM2V,WACxB,qBAAGrxD,MAAkBG,OAAOK,cAC5B,qBAAGR,MAAkBG,OAAOC,cAGnC,SAASkxD,GAAT,GAYX,IAAD,QAXDxyF,EAWC,EAXDA,MACAyyF,EAUC,EAVDA,UACA7zE,EASC,EATDA,gBACA8zE,EAQC,EARDA,iBACAC,EAOC,EAPDA,gBAQA,EAAwChjG,oBAAkB,GAA1D,mBAAOijG,EAAP,KAAqBC,EAArB,KACMtuD,EAA0Bp7B,mBAC9B,kBAAM0V,aAA+B7e,EAAO4e,KAC5C,CAACA,EAAiB5e,IAEpB,EAAiDmJ,mBAAQ,kBAAMgtB,aAA2Bn2B,KAAQ,CAACA,IAA3Fy2B,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzBw7D,EAAWz6D,aAAgBV,GAEjC,OACE,qCACE,eAAC67D,GAAD,WACE,eAACvgG,GAAA,EAAD,CAAYI,MAAM,SAAlB,UACE,cAAC,KAAD,CAAMyiD,SAAS,OAAf,mBACA,eAAC,KAAD,CACEA,SAAS,OACT7iC,MAAO,CACLikC,eAAgB,SAChB6K,WAAY,SACZ2J,QAAS,OACTzV,UAAW,QACX+9C,YAAa,QAPjB,UAUG17D,aAAqBp3B,EAAO4yF,GAC7B,cAACd,GAAD,CAAsBjlF,QAAS,kBAAMgmF,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAe1gG,MAAM,iBAK3B,eAACH,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAM6iD,SAAS,OAAf,SACG50C,EAAM+3C,YAAcg7C,KAAUC,YAAc,mBAAqB,iBAEpE,cAACz9D,GAAA,EAAD,CACEC,KAAK,uGACLkgB,GAAG,WAGP,eAAC3jD,GAAA,EAAD,WACE,cAAC,KAAD,CAAM6iD,SAAS,OAAf,SACG50C,EAAM+3C,YAAcg7C,KAAUC,YAA9B,oBACGzuD,EAAwBhwC,KAAM0wB,eADjC,aACG,EAAuCuS,cAAc,UADxD,QAC8D,IAD9D,oBAEG+M,EAAwBhwC,KAAMuqB,cAFjC,aAEG,EAAsC0Y,cAAc,UAFvD,QAE6D,MAEhE,cAAC,KAAD,CAAMod,SAAS,OAAOw9B,WAAW,MAAjC,SACGpyE,EAAM+3C,YAAcg7C,KAAUC,YAC3BhzF,EAAMy3B,aAAalwB,SAASpO,OAC5B6G,EAAM42B,YAAYrvB,SAASpO,eAIrC,eAACpH,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAM6iD,SAAS,OAAf,0BACA,cAACrf,GAAA,EAAD,CAAgBC,KAAK,4EAA4EkgB,GAAG,WAEtG,cAAC28C,GAAD,CAAsB77D,YAAaC,OAErC,eAAC1kC,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAM6iD,SAAS,OAAf,oCACA,cAACrf,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAM8pB,GAAG,OAAT,gDACA,cAAC,KAAD,0CACA,cAAC,KAAD,sCACA,cAAC,KAAD,sDAGJ5J,GAAG,WAGP,cAAC,KAAD,CAAMd,SAAS,OAAf,SACGxe,EAAa,iBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAeoB,cAAc,GAAnC,YAAyCx3B,EAAM42B,YAAYrvB,SAASpO,QAAW,YAKnG,eAAC,KAAD,WACE,cAAC,IAAD,CACEo8C,QAASq8C,EAAW,EAAI,SAAW,UACnC/kF,QAAS4lF,EACT79B,SAAU+9B,EACVn9C,GAAG,OACHlrC,GAAG,uBACHpY,MAAM,OANR,SAQG0/F,EAAW,EAAI,cAAgB,iBAGjCc,EAAmB,cAACP,GAAD,CAAmB7mF,MAAOonF,IAAuB,W,aCxH9D,SAASO,GAAT,GAYX,IAAD,IAXDjzF,EAWC,EAXDA,MACA4e,EAUC,EAVDA,gBACAsG,EASC,EATDA,UACAguE,EAQC,EARDA,kBACAC,EAOC,EAPDA,gBAQM5uD,EAA0Bp7B,mBAC9B,kBAAM0V,aAA+B7e,EAAO4e,KAC5C,CAAC5e,EAAO4e,IAEF6X,EAA0BttB,mBAAQ,kBAAMgtB,aAA2Bn2B,KAAQ,CAACA,IAA5Ey2B,sBACF28D,EAAsBj8D,aAAgBV,GAE5C,OACE,eAAC,KAAD,CAAY9jC,IAAI,KAAhB,UACE,eAACZ,GAAA,EAAD,CAAYI,MAAM,WAAlB,UACE,eAACJ,GAAA,EAAD,CAAUY,IAAI,MAAd,UACE,cAAC,KAAD,CAAc4U,SAAUvH,EAAM42B,YAAYrvB,SAAUsK,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACtF,cAACggF,GAAD,CACEp9C,SAAS,OACTnoC,MAAOymF,GAAqBlzF,EAAM+3C,YAAcg7C,KAAUM,aAAe,UAAY,OAFvF,SAIGrzF,EAAM42B,YAAYY,cAAc,QAGrC,cAACzlC,GAAA,EAAD,CAAUY,IAAI,MAAd,SACE,cAAC,KAAD,CAAMiiD,SAAS,OAAOc,GAAG,OAAzB,SACG11C,EAAM42B,YAAYrvB,SAASpO,cAIlC,cAACpH,GAAA,EAAD,UACE,cAAC,IAAD,CAAeG,MAAM,OAAOwjD,GAAG,UAEjC,eAAC3jD,GAAA,EAAD,CAAYI,MAAM,WAAlB,UACE,eAACJ,GAAA,EAAD,CAAUY,IAAI,MAAd,UACE,cAAC,KAAD,CAAc4U,SAAUvH,EAAMy3B,aAAalwB,SAAUsK,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACvF,cAACggF,GAAD,CACEp9C,SAAS,OACTnoC,MACE2mF,EAAsB,EAClB,UACAF,GAAqBlzF,EAAM+3C,YAAcg7C,KAAUC,YACnD,UACA,OAPR,SAUGhzF,EAAMy3B,aAAaD,cAAc,QAGtC,cAACzlC,GAAA,EAAD,CAAUY,IAAI,MAAd,SACE,cAAC,KAAD,CAAMiiD,SAAS,OAAOc,GAAG,OAAzB,SACG11C,EAAMy3B,aAAalwB,SAASpO,cAIlC+5F,EACC,cAACd,GAAD,CAAuBhgG,QAAQ,aAAaO,IAAI,MAAhD,SACE,eAACZ,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,IAAD,CAAW0pD,GAAG,QACd,cAAC,KAAD,CAAM5G,MAAI,EAAV,+BAEF,cAAC,IAAD,CAAQhoC,QAASsmF,EAAjB,yBAGF,KACJ,cAAC,KAAD,CAAY/gG,QAAQ,aAAaO,IAAI,KAAKof,MAAO,CAAE1f,QAAS,gBAA5D,SACG2N,EAAM+3C,YAAcg7C,KAAUC,YAC7B,eAAC,KAAD,CAAMl+C,OAAK,EAACroC,MAAM,aAAasoC,UAAU,OAAOhjC,MAAO,CAAE7f,MAAO,QAAhE,4DAEE,wCACGqyC,EAAwBhwC,KAAM0wB,eADjC,aACG,EAAuCuS,cAAc,GADxD,IAC6Dx3B,EAAMy3B,aAAalwB,SAASpO,UAExF,sCAGH,eAAC,KAAD,CAAM27C,OAAK,EAACroC,MAAM,aAAasoC,UAAU,OAAOhjC,MAAO,CAAE7f,MAAO,QAAhE,uDAEE,wCACGqyC,EAAwBhwC,KAAMuqB,cADjC,aACG,EAAsC0Y,cAAc,GADvD,IAC4Dx3B,EAAM42B,YAAYrvB,SAASpO,UAEtF,wCAIQ,OAAd+rB,EACC,cAAC,KAAD,CAAY9yB,QAAQ,aAAaO,IAAI,KAAKof,MAAO,CAAE1f,QAAS,gBAA5D,SACE,eAAC,KAAD,CAAMoa,MAAM,aAAZ,mCACyB,IACvB,mBAAG0pC,MAAOjxB,EAAV,SAAsBhgB,YAAUggB,GAAa5f,YAAe4f,GAAaA,SAG3E,QCzEV,IA4EeouE,GA5EgE,SAAC,GAYzE,IAAD,oBAXJtzF,EAWI,EAXJA,MACAuzF,EAUI,EAVJA,cACAJ,EASI,EATJA,gBACAv0E,EAQI,EARJA,gBACA6zE,EAOI,EAPJA,UACAx9C,EAMI,EANJA,UACAmB,EAKI,EALJA,gBACAlxB,EAII,EAJJA,UACAwtE,EAGI,EAHJA,iBACAr8C,EAEI,EAFJA,cACAkjB,EACI,EADJA,OAEM25B,EAAoB/pF,mBACxB,kBAAM1B,QAAQzH,GAASuzF,IApCsB17C,EAoC2B07C,GApC1C37C,EAoCmC53C,GAlC1D+3C,YAAcF,EAAOE,YAC3B7jC,aAAe0jC,EAAOhhB,YAAYrvB,SAAUswC,EAAOjhB,YAAYrvB,YAC/DqwC,EAAOhhB,YAAYohB,QAAQH,EAAOjhB,eAClC1iB,aAAe0jC,EAAOngB,aAAalwB,SAAUswC,EAAOpgB,aAAalwB,YACjEqwC,EAAOngB,aAAaugB,QAAQH,EAAOpgB,gBANxC,IAAkCmgB,EAAeC,IAqC7C,CAAC07C,EAAevzF,IAGVtO,EAAMC,eAAND,EAEFmpE,EAAclqE,uBAAY,WAC9B,OAAOqP,EACL,cAACizF,GAAD,CACEjzF,MAAOA,EACP4e,gBAAiBA,EACjBsG,UAAWA,EACXguE,kBAAmBA,EACnBC,gBAAiBA,IAEjB,OACH,CAACv0E,EAAiBu0E,EAAiBjuE,EAAWguE,EAAmBlzF,IAE9D+6D,EAAcpqE,uBAAY,WAC9B,OAAOqP,EACL,cAACwyF,GAAD,CACEC,UAAWA,EACXzyF,MAAOA,EACP2yF,gBAAiBO,EACjBR,iBAAkBA,EAClB9zE,gBAAiBA,IAEjB,OACH,CAACA,EAAiB6zE,EAAWS,EAAmBR,EAAkB1yF,IAG/D20C,EAAcjjD,EAAE,uDAAwD,CAC5EspE,QAAO,iBAAEh7D,QAAF,IAAEA,GAAF,UAAEA,EAAO42B,mBAAT,aAAE,EAAoBY,cAAc,UAApC,QAA0C,GACjDyjC,QAAO,iBAAEj7D,QAAF,IAAEA,GAAF,UAAEA,EAAO42B,mBAAT,iBAAE,EAAoBrvB,gBAAtB,aAAE,EAA8BpO,cAAhC,QAA0C,GACjD+hE,QAAO,iBAAEl7D,QAAF,IAAEA,GAAF,UAAEA,EAAOy3B,oBAAT,aAAE,EAAqBD,cAAc,UAArC,QAA2C,GAClD2jC,QAAO,iBAAEn7D,QAAF,IAAEA,GAAF,UAAEA,EAAOy3B,oBAAT,iBAAE,EAAqBlwB,gBAAvB,aAAE,EAA+BpO,cAAjC,QAA2C,KAG9Cq6F,EAAsB7iG,uBAC1B,kBACE+hG,EACE,cAAC,KAAD,CAAyBz9C,UAAWA,EAAWc,QAAS28C,IAExD,cAAC,KAAD,CAA0B78C,WAAYglB,EAAajlB,cAAemlB,MAEtE,CAAC9lB,EAAW8lB,EAAaF,EAAa63B,IAGxC,OACE,cAACx8C,GAAA,EAAD,CACEC,MAAOzkD,EAAE,gBACTujD,UAAWA,EACXmB,gBAAiBA,EACjBC,cAAeA,EACfjyB,KAAMm1C,EACNjjB,QAASk9C,EACT7+C,YAAaA,EACbO,cAAa,OAAEl1C,QAAF,IAAEA,OAAF,EAAEA,EAAOy3B,aAAalwB,Y,UCvFzC,SAASksF,GAAax5E,GACpB,OAAa,OAANA,QAAoBzqB,IAANyqB,EAWRy5E,OAJf,SAA0BjiG,GACxB,OAxBF,SACEA,EACAkiG,GAEA,MAAwBhkG,mBAA+BgkG,GAAYA,EAASliG,GAASA,OAAQjC,GAA7F,mBAAOokG,EAAP,KAAaC,EAAb,KAQA,OAPA7jG,qBAAU,WACR6jG,GAAQ,SAACjgC,GAEP,OAD2B+/B,GAAWA,EAASliG,GACzBA,EACfmiE,OAER,CAAC+/B,EAAUliG,IACPmiG,EAYAE,CAAQriG,EAAOgiG,K,kBC1BTl6E,mBAAK,YAAiD,IAA5BvZ,EAA2B,EAA3BA,MACvC,OACE,cAAC,IAAD,CAAMm/C,SAAS,OAAOjtD,MAAM,OAAO8jD,eAAe,WAAW6K,WAAW,SAAxE,SACG7gD,EAAMq2B,MAAM+M,KAAK3yB,KAAI,SAACuC,EAAO9B,EAAGkyB,GAC/B,IAAM2wD,EAAsB7iF,IAAMkyB,EAAK5uB,OAAS,EAC1CjN,EAAWuS,aAAe9G,GAChC,OAEE,cADA,CACC,WAAD,WACE,cAAC,IAAD,CAAM6tC,WAAW,MAAjB,SACE,cAAC,KAAD,CAAMjM,SAAS,OAAOc,GAAG,WAAW+F,GAAG,WAAvC,SACGl0C,EAASpO,YAGZ46F,GAAc,cAAC,IAAD,CAAkB7hG,MAAM,WAN3Bgf,WCDzB,SAAS8iF,GAAT,GAA8F,IAAD,QAArEh0F,EAAqE,EAArEA,MAAO4e,EAA8D,EAA9DA,gBAC7B,EAAiDuX,aAA2Bn2B,GAApEy2B,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzB0N,EAAY9jC,EAAM+3C,YAAcg7C,KAAUC,YAC1CzuD,EAA0B1lB,aAA+B7e,EAAO4e,GAEtE,OACE,eAAC,KAAD,CAAY7M,MAAO,CAAE1f,QAAS,UAA9B,UACE,eAACN,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAM6iD,SAAS,OAAOnoC,MAAM,aAA5B,SACGq3B,EAAY,mBAAqB,iBAEpC,cAACvO,GAAA,EAAD,CACEC,KAAK,uGACLkgB,GAAG,WAGP,cAAC3jD,GAAA,EAAD,UACE,cAAC,KAAD,CAAM6iD,SAAS,OAAf,SACG9Q,EAAS,8BACHS,EAAwBhwC,KAAM0wB,eAD3B,aACH,EAAuCuS,cAAc,GADlD,YACwDx3B,EAAMy3B,aAAalwB,SAASpO,eADpF,QAEN,IAFM,8BAGHorC,EAAwBhwC,KAAMuqB,cAH3B,aAGH,EAAsC0Y,cAAc,GAHjD,YAGuDx3B,EAAM42B,YAAYrvB,SAASpO,eAHlF,QAG8F,WAI9G,eAACpH,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAM6iD,SAAS,OAAOnoC,MAAM,aAA5B,0BAGA,cAAC8oB,GAAA,EAAD,CACEC,KAAK,iFACLkgB,GAAG,WAGP,cAAC28C,GAAD,CAAsB77D,YAAaC,OAGrC,eAAC1kC,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAM6iD,SAAS,OAAOnoC,MAAM,aAA5B,oCAGA,cAAC8oB,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAM8pB,GAAG,OAAT,gDACA,cAAC,KAAD,0CACA,cAAC,KAAD,sCACA,cAAC,KAAD,sDAGJ5J,GAAG,WAGP,cAAC,KAAD,CAAMd,SAAS,OAAf,SACGxe,EAAa,UAAMA,EAAcoB,cAAc,GAAlC,YAAwCx3B,EAAM42B,YAAYrvB,SAASpO,QAAW,YAW/F,SAAS86F,GAAT,GAAmE,IAApCj0F,EAAmC,EAAnCA,MACpC,EAA0B+W,eAAnB6H,EAAP,oBAEMs1E,EAAYzsF,QAAQzH,GAASA,EAAMq2B,MAAM+M,KAAK5uB,OAAS,GAE7D,OACE,cAAC,KAAD,CAAY7hB,IAAI,MAAhB,SACGqN,GACC,qCACE,cAACg0F,GAAD,CAAch0F,MAAOA,EAAO4e,gBAAiBA,IAC5Cs1E,GACC,mCACE,eAACniG,GAAA,EAAD,CAAYggB,MAAO,CAAE1f,QAAS,UAA9B,UACE,uBAAM0f,MAAO,CAAEy4C,QAAS,OAAQ3J,WAAY,UAA5C,UACE,cAAC,KAAD,CAAMjM,SAAS,OAAOnoC,MAAM,aAA5B,mBAGA,cAAC8oB,GAAA,EAAD,CACEC,KAAK,0EACLkgB,GAAG,WAGP,cAAC,GAAD,CAAW11C,MAAOA,c,oBCjG5Bm0F,GAAwBniG,KAAOU,IAAV,0PACX,qBAAGuuD,KAAmB,OAAS,KAMzB,qBAAG/f,MAAkBG,OAAOyyB,oBAEnC,qBAAG7S,KAAmB,iBAAmB,uBAIzC,SAASmzC,GAAT,GAAoF,IAAD,EAA5Cp0F,EAA4C,EAA5CA,MAAUqkD,EAAkC,mBAC1FgwC,EAAYX,GAAc1zF,GAEhC,OACE,cAACm0F,GAAD,CAAuBlzC,KAAMx5C,QAAQzH,GAArC,SACE,cAACi0F,GAAD,6BAAyB5vC,GAAzB,IAA+BrkD,MAAK,iBAAEA,QAAF,IAAEA,IAASq0F,SAAX,aAAwB7kG,OCZnD,SAAS8kG,GAAT,GAAgF,IAAD,UAAzDp9B,EAAyD,EAAzDA,MAAO07B,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,gBAClD0B,EAAiB3B,EAAY,OAAG17B,QAAH,IAAGA,OAAH,EAAGA,EAAO1/B,cAAc,GAAxB,OAA6B0/B,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAO3/B,gBAApC,aAA6B,EAAiBC,cAAc,GAEzFypB,EAAOx5C,SAAa,OAALyvD,QAAK,IAALA,OAAA,EAAAA,EAAOs9B,gBAAP,OAAuBt9B,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOu9B,gBAC7C7qC,EAAQgpC,EAAY,iBACnB17B,QADmB,IACnBA,GADmB,UACnBA,EAAOu9B,qBADY,aACnB,EAAsBt7F,OADH,uBACiB+9D,QADjB,IACiBA,GADjB,UACiBA,EAAOs9B,oBADxB,aACiB,EAAqBr7F,QADtC,iBAEnB+9D,QAFmB,IAEnBA,GAFmB,UAEnBA,EAAOs9B,oBAFY,aAEnB,EAAqBr7F,OAFF,uBAEgB+9D,QAFhB,IAEgBA,GAFhB,UAEgBA,EAAOu9B,qBAFvB,aAEgB,EAAsBt7F,QAEhE,OACE,cAAC,KAAD,CAAM4Y,MAAO,CAAEikC,eAAgB,SAAU6K,WAAY,SAAU2J,QAAS,QAAxE,SACGvJ,EACC,4CACGszC,QADH,IACGA,IAAkB,IADrB,IAC2B3qC,EACzB,cAACkoC,GAAD,CAAsBjlF,QAAS,kBAAMgmF,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAe1gG,MAAM,cAIzB,M,0BCFOwiG,GAjB4B,SAAC,GAAqC,IAAnCxhG,EAAkC,EAAlCA,OAAQ+hD,EAA0B,EAA1BA,UAAW0/C,EAAe,EAAfA,SAC/D,OACE,cAAC,KAAD,CACEx+C,MAAM,eACNlB,UAAW,WACLA,GACFA,IAEF0/C,KAEF5iF,MAAO,CAAE2uC,SAAU,SARrB,SAUE,cAAC2T,GAAA,EAAD,CAAanhE,OAAQA,EAAQohE,qBAAsBrf,O,wBCjBnD2/C,GAAW5iG,aAAOQ,KAAPR,CAAH,8CAIR6iG,GAAS7iG,KAAOU,IAAV,2PAGU,gBAAGwuC,EAAH,EAAGA,MAAO4gB,EAAV,EAAUA,UAAV,SAAqB8S,SAC5B1zB,EAAMG,OAAO48C,mBAAqBn8B,EAAY5gB,EAAMG,OAAOnlB,QAAUglB,EAAMG,OAAO8f,WAU3F2zC,GAAY9iG,KAAOU,IAAV,sGAMTqiG,GAAY/iG,KAAOU,IAAV,0KAKT,gBAAGwuC,EAAH,EAAGA,MAAO8zD,EAAV,EAAUA,cAAV,SAAyBpgC,SACZ1zB,EAAMG,OAAO48C,mBAAqB+W,EAAgB9zD,EAAMG,OAAOnlB,QAAUglB,EAAMG,OAAO8f,WAEnG,gBAAGjgB,EAAH,EAAGA,MAAO8zD,EAAV,EAAUA,cAAV,SAAyBpgC,SAEnB1zB,EAAMG,OAAO48C,mBACb+W,EACA9zD,EAAMG,OAAO8f,QACbjgB,EAAMG,OAAO48C,sBAqBV,SAASgX,GAAT,GAAsF,IAA3DC,EAA0D,EAA1DA,MAA0D,IAAnDtgC,gBAAmD,SAA9BvQ,EAA8B,mBAClG,OACE,cAAC,KAAD,2BAAYjyD,QAAQ,UAAaiyD,GAAjC,aACE,eAACuwC,GAAD,WACGM,EAAMzkF,KAAI,SAACwxE,EAAM/wE,GAChB,OAEE,cADA,CACC4jF,GAAD,WACE,cAACD,GAAD,CAAQ/yC,UAAWmgC,EAAMrtB,SAAUA,IAAcsgC,EAAMhkF,EAAI,IAAY,IAANA,EAAjE,SACG+wE,EAAO,SAAM/wE,EAAI,IAEpB,cAAC6jF,GAAD,CAAWC,cAAe/S,EAAMrtB,SAAUA,MAJ5B1jD,MAQpB,cAAC2jF,GAAD,CAAQjgC,SAAUA,IAAasgC,EAAMA,EAAM1gF,OAAS,GAApD,SAAyD0gF,EAAM1gF,OAAS,U,IClEpE2gF,G,iDA6BZ,SAASC,GACPp1F,GAGa,IAFb4e,EAEY,uDAFc3W,IAC1BotF,EACY,uCACZ,EAAsCtgG,cAA9B0R,EAAR,EAAQA,QAASvR,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QAE1B,EAAsC0uC,aAAO0xD,GAA5BC,EAAjB,EAAQxiG,QACFoyB,EAAuC,OAA3BmwE,EAAkC5uF,EAAU6uF,EACxDl+E,EAAWu6C,eAEjB,OAAOxoD,mBAAQ,WACb,IAAKnJ,IAAUklB,IAAcjwB,IAAYwR,IAAYvR,IAAYkiB,EAAU,MAAO,GAElF,IAAMiF,EAA4BtV,YAAkB7R,EAASD,EAASwR,GACtE,IAAK4V,EACH,MAAO,GAGT,IAAMk5E,EAAc,GAsBpB,OApBAA,EAAYzuE,KACV0uE,KAAOC,mBAAmBz1F,EAAO,CAC/B01F,eAAe,EACf92E,gBAAiB,IAAI7Y,KAAQC,KAAKC,OAAO2Y,GAAkBvW,KAC3D6c,YACA9N,SAAUA,EAASrgB,cAInBiJ,EAAM+3C,YAAcg7C,KAAUC,aAChCuC,EAAYzuE,KACV0uE,KAAOC,mBAAmBz1F,EAAO,CAC/B01F,eAAe,EACf92E,gBAAiB,IAAI7Y,KAAQC,KAAKC,OAAO2Y,GAAkBvW,KAC3D6c,YACA9N,SAAUA,EAASrgB,cAKlBw+F,EAAY9kF,KAAI,SAACklF,GAAD,MAAiB,CAAEA,aAAYt5E,iBACrD,CAAC5V,EAASmY,EAAiB1pB,EAASkiB,EAAUniB,EAASiwB,EAAWllB,K,SAvE3Dm1F,O,qBAAAA,I,qBAAAA,I,kBAAAA,Q,SCJAS,G,6BAAAA,O,mCAAAA,I,eAAAA,I,oBAAAA,Q,KAMZ,IAAMC,GAAiB,CAAEC,SAAUF,GAASC,gB,qCC4BtCE,GAAQ/jG,aAAOy6E,KAAPz6E,CAAH,wFAGA,qBAAGkvC,MAAkBG,OAAOizC,aAGxB,SAAS0hB,GAAT,GAAiD,IAAD,sBAAhCn+B,EAAgC,EAAhCA,QACvBo+B,EAAkB9wD,eAEhBzzC,EAAMC,eAAND,EAGR,EAAoD,CAClD2jB,YAAW,OAAC4gF,QAAD,IAACA,OAAD,EAACA,EAAiB7wE,iBAC7B/P,YAAW,OAAC4gF,QAAD,IAACA,OAAD,EAACA,EAAiB5wE,mBAFxB6wE,EAAP,KAA4BC,EAA5B,KAIMC,EAA2BjtF,mBAC/B,8CAAM,CAAC+sF,EAAqBC,UAA5B,aAAM,EAA6Cv9E,QAAO,SAACsC,GAAD,OAAmBA,aAAa1iB,eAA1F,QAAoG,KACpG,CAAC09F,EAAqBC,IAIlB7uF,EAAgB4L,cAChBmjF,EACJD,GACAA,EAAgBx9E,QAAO,SAAC5F,GACtB,QAASA,EAAMlgB,WAAWwU,MAGtBb,EAAY1R,cAAZ0R,QAGR,EAAuB2P,eAAhBkgF,EAAP,oBAGA,EAA0Bv/E,eAAnB6H,EAAP,oBAGA,EAAoD4jB,eAA5Czd,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,WAAYE,EAAtC,EAAsCA,UACtC,EAA4Foe,eAApFc,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,iBAAkBN,EAAnC,EAAmCA,aAAc3D,EAAjD,EAAiDA,WAAwBm2D,EAAzE,EAA6DhzD,WAE7D,ED9Da,SACbC,EACAC,EACAze,GAEA,MAA6BjwB,cAArBG,EAAR,EAAQA,QAASuR,EAAjB,EAAiBA,QACX+vF,EAAe7qF,cACf7U,EAAU2pC,aAAkB,OAACh6B,QAAD,IAACA,SAAWjX,EAAWg0C,GAEnD5M,EAAcztB,mBAAQ,kBAAM25B,aAAe9d,EAAYwe,KAAgB,CAACA,EAAexe,IACvFjH,EAAiBC,eAEvB,OAAO7U,mBAAQ,WACb,IAAKqtF,IAAiBthG,IAAYsuC,IAAkBC,EAAgB,OAAOoyD,GAE3E,IAAMY,EAAoB7/D,GAAe9/B,IAAYA,EAAQ6mB,SAASiZ,GAEtE,OAAI4M,IAAkBh8B,MAAS0M,aAAevM,KAAKzS,GAAUuuC,GACpD,CACLqyD,SAAUF,GAASc,KACnBC,QACEF,GAAqB7/D,EAArB,sBACI,4BAAAvoC,EAAA,+EAE4BmoG,EAAa/7C,QAAQ,CAAEhpD,MAAM,KAAD,OAAOmlC,EAAYtwB,IAAI/U,SAAS,OAFxF,OAEUqlG,EAFV,OAGI74E,EAAe64E,EAAW,CAAEn4E,QAAQ,QAAD,OAAUmY,EAAYY,cAAc,GAApC,kBAHvC,gDAKIjsB,QAAQD,MAAM,oBAAd,MALJ,8DAQA9b,EACN+zC,WAAYkzD,OAAoBjnG,EAAY,4BAG5C0kB,aAAevM,KAAKzS,GAAUsuC,IAAkBC,IAAmBj8B,KAC9D,CACLsuF,SAAUF,GAASiB,OACnBF,QACEF,GAAqB7/D,EAArB,sBACI,4BAAAvoC,EAAA,+EAE4BmoG,EAAa57C,SAAb,YAA2BhkB,EAAYtwB,IAAI/U,SAAS,MAFhF,OAEUqlG,EAFV,OAGI74E,EAAe64E,EAAW,CAAEn4E,QAAQ,UAAD,OAAYmY,EAAYY,cAAc,GAAtC,kBAHvC,gDAKIjsB,QAAQD,MAAM,qBAAd,MALJ,8DAQA9b,EACN+zC,WAAYkzD,OAAoBjnG,EAAY,6BAGzCqmG,KACN,CAACW,EAActhG,EAASsuC,EAAeC,EAAgB7M,EAAa9/B,EAASinB,ICc5E+4E,CAAgB12D,EAAW7rC,KAAMuqB,OAAQshB,EAAW7rC,KAAM0wB,QAASD,GAHrE8wE,EADF,EACEA,SACSiB,EAFX,EAEEJ,QACYK,EAHd,EAGEzzD,WAEI0zD,EAAoBnB,IAAaF,GAASC,eAC1C71F,EAAQi3F,OAAWznG,EAAY40C,EAE/B+yB,GAAgB8/B,GAAQ,oBAEvB1iG,KAAMuqB,MAAQilB,GAFS,eAGvBxvC,KAAM0wB,OAAS8e,GAHQ,wBAMvBxvC,KAAMuqB,MAAQiG,IAAqBxwB,KAAMuqB,MAAQilB,EAAnC,OAAkD/jC,QAAlD,IAAkDA,OAAlD,EAAkDA,EAAO42B,aANhD,eAOvBriC,KAAM0wB,OAASF,IAAqBxwB,KAAM0wB,OAAS8e,EAApC,OAAmD/jC,QAAnD,IAAmDA,OAAnD,EAAmDA,EAAOy3B,cAPlD,GAU9B,GAAgFgL,eAAxEE,GAAR,GAAQA,eAAgBD,GAAxB,GAAwBA,oBAAqBE,GAA7C,GAA6CA,YAAaC,GAA1D,GAA0DA,kBACpDw2B,IAAWk9B,EACXx+B,GAAwBhzC,IAAqBxwB,KAAMuqB,MAAQvqB,KAAM0wB,OAAS1wB,KAAMuqB,MAEhFo4E,GAAkBvmG,uBACtB,SAACc,GACCmxC,GAAYruC,KAAMuqB,MAAOrtB,KAE3B,CAACmxC,KAEGu0D,GAAmBxmG,uBACvB,SAACc,GACCmxC,GAAYruC,KAAM0wB,OAAQxzB,KAE5B,CAACmxC,KAIH,GAAoFjzC,mBAKjF,CACDynG,oBAAgB5nG,EAChB6mD,eAAe,EACfq8C,sBAAkBljG,EAClB+pE,YAAQ/pE,IATV,8BAAS4nG,GAAT,GAASA,eAAgB1E,GAAzB,GAAyBA,iBAAkBr8C,GAA3C,GAA2CA,cAAekjB,GAA1D,GAA0DA,OAAU89B,GAApE,MAYM59B,IAAgB,oBACnB10C,EAAmBC,GADA,eAEnB+yC,GAAiBk/B,EAAQ,oBACtB9/B,GAAcpyC,UADQ,aACtB,EAAiC+2C,iBADX,QACwB,GADxB,oBAEtB3E,GAAcY,WAFQ,aAEtB,EAA+BvgC,cAAc,UAFvB,QAE6B,IAJnC,GAOhBnB,GAAK,OAAGr2B,QAAH,IAAGA,OAAH,EAAGA,EAAOq2B,MACfihE,GAA8B7vF,QAClC24B,EAAW7rC,KAAMuqB,QAAUshB,EAAW7rC,KAAM0wB,UAA5C,UAAuDkyC,GAAcpyC,UAArE,aAAuD,EAAiC+vC,YAAY9uD,KAAKC,OAAO,MAE5GsxF,IAAWlhE,GAGjB,GAAoC1X,aAA4B3e,EAAO4e,GAAvE,qBAAOF,GAAP,MAAiB84E,GAAjB,MAGA,GAAkD7nG,oBAAkB,GAApE,qBAAO8nG,GAAP,MAA0BC,GAA1B,MAGA1nG,qBAAU,WACJ0uB,KAAa1B,KAAcY,SAC7B85E,IAAqB,KAEtB,CAACh5E,GAAU+4E,KAEd,IAAME,GAA6C9iC,aAAexwB,EAAiB9vC,KAAMuqB,QACnF84E,GAAmBnwF,QAAQkwF,KAAc,UAAIxgC,GAAc5iE,KAAMuqB,cAAxB,aAAI,EAA4Bk5B,QAAQ2/C,MAGvF,GFzEK,SACL33F,GAG+F,IAF/F4e,EAE8F,uDAFpE3W,IAC1BotF,EAC8F,uCAC9F,EAAsCtgG,cAA9B0R,EAAR,EAAQA,QAASvR,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QAEpB4iG,EAAYzC,GAAqBp1F,EAAO4e,EAAiBy2E,GAEzDt3E,EAAiBC,eAENs3E,EAAqB3xD,aAAO0xD,GAArCviG,QACFoyB,EAAuC,OAA3BmwE,EAAkC5uF,EAAU6uF,EAE9D,OAAOnsF,mBAAQ,WACb,OAAKnJ,GAAU/K,GAAYwR,GAAYvR,EAGlCgwB,EAOE,CACLp1B,MAAOqlG,GAAkB2C,MACzB3hB,SAAS,WAAD,4BAAE,8CAAA9nF,EAAA,sEAC0CghC,QAAQC,IACxDuoE,EAAUpnF,KAAI,SAACC,GAAU,IAAD,EACtB,EAGIA,EAFFilF,WAAcr5E,EADhB,EACgBA,WAAYk+C,EAD5B,EAC4BA,KAAM/oE,EADlC,EACkCA,MAChC4qB,EACE3L,EADF2L,SAEI9kB,GAAW9F,GAASw/C,aAAOx/C,GAAS,GAAK,CAAEA,SAEjD,OAAO,EAAA4qB,EAAS8B,aAAY7B,GAArB,oBAAoCk+C,GAApC,QAA0CjjE,KAC9CinB,MAAK,SAACu5E,GACL,MAAO,CACLrnF,OACAqnF,kBAGH15E,OAAM,SAAC25E,GAAc,IAAD,EAGnB,OAFAzsF,QAAQD,MAAM,wDAAyDoF,IAEhE,EAAA2L,EAAS47E,YAAW37E,GAApB,oBAAmCk+C,GAAnC,QAAyCjjE,KAC7CinB,MAAK,SAACjN,GAEL,OADAhG,QAAQD,MAAM,uDAAwDoF,EAAMsnF,EAAUzmF,GAC/E,CAAEb,OAAMpF,MAAO,IAAIxZ,MAAM,mEAEjCusB,OAAM,SAAC65E,GAAe,IAAD,EACpB3sF,QAAQD,MAAM,mBAAoBoF,EAAMwnF,GACxC,IAAMC,EAAiBD,EAAUC,SAAV,UAAoBD,EAAUxpG,YAA9B,aAAoB,EAAgBqnD,UAAWmiD,EAAUniD,QAC1E/uB,EAAY,8DAChBmxE,QADgB,IAChBA,IAAU,gCADM,KAIlB,MAAO,CAAEznF,OAAMpF,MAAO,IAAIxZ,MAAMk1B,cA/BpC,UACFoxE,EADE,OAsCFC,EAAuBD,EAAevqF,MAC1C,SAACyqF,EAAI/f,EAAInsD,GAAT,MACE,gBAAiBksE,IAAO/f,IAAOnsD,EAAK5X,OAAS,GAAK,gBAAiB4X,EAAKmsD,EAAK,OAxCzE,sBA4CAggB,EAAaH,EAAex/E,QAAO,SAAClI,GAAD,MAA8B,UAAWA,MACnE8D,OAAS,GA7ClB,sBA6C2B+jF,EAAWA,EAAW/jF,OAAS,GAAGlJ,MA7C7D,aA8CA,IAAIxZ,MAAM,8EA9CV,gBAuDJumG,EALF3nF,KACE2L,EAnDI,EAmDJA,SAnDI,IAoDJs5E,WAAcr5E,EApDV,EAoDUA,WAAYk+C,EApDtB,EAoDsBA,KAAM/oE,EApD5B,EAoD4BA,MAElCsmG,EACEM,EADFN,YAtDM,kBAyDD17E,EAASC,GAAT,MAAAD,EAAQ,YAAgBm+C,GAAhB,sBACbj8C,SAAU7Y,YAAmBqyF,IACzBtmG,IAAUw/C,aAAOx/C,GAAS,CAAEA,QAAOsG,KAAM0O,GAAY,CAAE1O,KAAM0O,OAEhE+X,MAAK,SAAChwB,GACL,IAAMgqG,EAAcx4F,EAAM42B,YAAYrvB,SAASpO,OACzCs/F,EAAez4F,EAAMy3B,aAAalwB,SAASpO,OAC3Cy9B,EAAc52B,EAAM42B,YAAYY,cAAc,GAC9CC,EAAez3B,EAAMy3B,aAAaD,cAAc,GAEhD7e,EAAI,eAAWie,EAAX,YAA0B4hE,EAA1B,gBAA6C/gE,EAA7C,YAA6DghE,GACjEC,EACJxzE,IAAcze,EACVkS,EADJ,UAEOA,EAFP,eAGM08E,GAA0BnwF,YAAUmwF,GAChC/vF,YAAe+vF,GACfA,GAOZ,OAJAt3E,EAAevvB,EAAU,CACvBiwB,QAASi6E,IAGJlqG,EAAS41B,QAEjB/F,OAAM,SAAC/S,GAEN,MAAoB,QAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOu2B,MACH,IAAI/vC,MAAM,0BAGhByZ,QAAQD,MAAR,cAA6BA,EAAOgR,EAAYk+C,EAAM/oE,GAChD,IAAIK,MAAJ,uBAA0BwZ,EAAMyqC,eA1FpC,4CAAF,kDAAC,GA8FTzqC,MAAO,MAtGwB,OAA3B+pF,EACK,CAAEvlG,MAAOqlG,GAAkBllD,QAASkmC,SAAU,KAAM7qE,MAAO,qBAE7D,CAAExb,MAAOqlG,GAAkBnlD,QAASmmC,SAAU,KAAM7qE,MAAO,MAN3D,CAAExb,MAAOqlG,GAAkBllD,QAASkmC,SAAU,KAAM7qE,MAAO,0BA2GnE,CAACtL,EAAO/K,EAASwR,EAASvR,EAASgwB,EAAWmwE,EAAwBwC,EAAW95E,IElDvB46E,CAAgB34F,EAAO4e,EAAiBsG,GAAnF0zE,GAAlB,GAAQziB,SAA+B0iB,GAAvC,GAAgCvtF,MAExBmrB,GAA0BN,aAA2Bn2B,GAArDy2B,sBAER,GAAwB9f,eAAjB0iC,GAAP,qBAEMy/C,GAAanoG,uBAAY,WACzB8lC,KChKO,SAAsCA,GACnD,OAAKA,EAAsB9Y,SAASlV,OAU/BguB,EAAsB9Y,SAASnV,MAE3BqqC,OAAOs9B,QAAP,mDACuC3nE,IAA0BtR,QACpE,GAFG,sEALC,YAJN27C,OAAO8N,OAAP,mDAC8Cl4C,IAAqCvR,QAC/E,GAFJ,kED4J4B6hG,CAA6BtiE,KAGtDmiE,KAGLvB,GAAa,CAAEhhD,eAAe,EAAM+gD,kBAAgB1E,sBAAkBljG,EAAW+pE,YAAQ/pE,IACzFopG,KACGp6E,MAAK,SAAC4F,GACLizE,GAAa,CAAEhhD,eAAe,EAAO+gD,kBAAgB1E,sBAAkBljG,EAAW+pE,OAAQn1C,OAE3F/F,OAAM,SAAC/S,GACN+rF,GAAa,CACXhhD,eAAe,EACf+gD,kBACA1E,iBAAkBpnF,EAAMyqC,QACxBwjB,YAAQ/pE,UAGb,CAACinC,GAAuBmiE,GAAcxB,KAGzC,GAAwCznG,oBAAkB,GAA1D,qBAAOijG,GAAP,MAAqBC,GAArB,MAGMO,GAAsBj8D,aAAgBV,IAItCuiE,IACHzC,IACA73E,KAAa1B,KAAca,cAC1Ba,KAAa1B,KAAcY,SAC1B65E,IAAqB/4E,KAAa1B,KAAcU,aACjD01E,GAAsB,IAAMkD,GAE1B2C,GAAuBtoG,uBAAY,WACvC0mG,GAAa,CAAED,kBAAgB/gD,iBAAeq8C,oBAAkBn5B,YAE5DA,IACF32B,GAAYruC,KAAMuqB,MAAO,MAE1B,CAACu3B,GAAezT,GAAa8vD,GAAkB0E,GAAgB79B,KAE5D2/B,GAAsBvoG,uBAAY,WACtC0mG,GAAa,CAAED,eAAgBp3F,EAAO0yF,oBAAkBn5B,UAAQljB,qBAC/D,CAACA,GAAeq8C,GAAkB1yF,EAAOu5D,KAEtC4/B,GAAoBxoG,uBACxB,SAAC6yC,GACCk0D,IAAqB,GACrBh1D,GAAoBnuC,KAAMuqB,MAAO0kB,KAEnC,CAACd,KAGG02D,GAAiBzoG,uBAAY,WAC7BgnG,IACF/0D,GAAYruC,KAAMuqB,MAAO64E,GAAe77B,aAEzC,CAAC67B,GAAgB/0D,KAEdy2D,GAAqB1oG,uBACzB,SAAC8yC,GAAD,OAAoBf,GAAoBnuC,KAAM0wB,OAAQwe,KACtD,CAACf,KAGG42D,GAAoBz/C,aAA2B,OAACzZ,QAAD,IAACA,OAAD,EAACA,EAAYthB,MAAb,OAAoBshB,QAApB,IAAoBA,OAApB,EAAoBA,EAAYnb,QAErF,GAAqC87B,aACnC,cAAC,GAAD,CAAmB7tD,OAAQmjG,EAA0B1B,SAAU,kBAAM98B,EAAQ/wC,KAAK,cAD7EyyE,GAAP,qBAIAvpG,qBAAU,WACJqmG,EAAyB7hF,OAAS,GACpC+kF,OAGD,CAAClD,EAAyB7hF,SAE7B,OAAgCusC,aAC9B,cAAC,GAAD,CACE/gD,MAAOA,EACPuzF,cAAe6D,GACfjE,gBAAiB+F,GACjB7iD,cAAeA,GACfkjB,OAAQA,GACRr0C,UAAWA,EACXtG,gBAAiBA,EACjB6zE,UAAWqG,GACXpG,iBAAkBA,GAClBt8C,gBAAiB6iD,MAEnB,GACA,EACA,oBAfKO,GAAP,qBAkBA,OACE,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAWrjD,MAAOzkD,EAAE,YAAa2wD,SAAU3wD,EAAE,gCAC7C,eAAC,GAAD,CAAS4Y,GAAG,YAAZ,UACE,eAAC,KAAD,CAAY3X,IAAI,KAAhB,UACE,cAAC82D,GAAA,EAAD,CACEG,MAAO7kC,IAAqBxwB,KAAM0wB,SAAWgyE,GAAYj3F,EAAQtO,EAAE,oBAAsBA,EAAE,QAC3FD,MAAOgoE,GAAiBllE,KAAMuqB,OAC9B6qC,eAAgBiuC,GAChBrwF,SAAU64B,EAAW7rC,KAAMuqB,OAC3B8jB,YAAas0D,GACbxtC,MAAO0vC,GACPvvC,iBAAkBsvC,GAClBnvC,cAAe5pB,EAAW7rC,KAAM0wB,QAChC3a,GAAG,wBAEL,cAAC,KAAD,CAAYlY,QAAQ,gBAApB,SACE,eAAC,KAAD,CAASA,QAASkkG,EAAe,gBAAkB,SAAUvkF,MAAO,CAAE1f,QAAS,UAA/E,UACE,cAACo/F,GAAD,CAAcC,WAAS,EAAvB,SACE,cAAC,IAAD,CACEx/F,MAAM,OACN2a,QAAS,WACP6qF,IAAqB,GACrB/0D,MAEFl2B,MAAO2zB,EAAW7rC,KAAMuqB,QAAUshB,EAAW7rC,KAAM0wB,QAAU,UAAY,WAG9D,OAAdC,IAAuB+xE,GAAYX,EAClC,cAAC,IAAD,CAAQ/gD,QAAQ,OAAOjrC,GAAG,uBAAuBuC,QAAS,kBAAMg2B,GAAkB,KAAlF,SACGnxC,EAAE,6BAEH,UAGR,cAAC+3D,GAAA,EAAD,CACEh4D,MAAOgoE,GAAiBllE,KAAM0wB,QAC9B2d,YAAau0D,GACbvtC,MAAO7kC,IAAqBxwB,KAAMuqB,QAAUm4E,GAAYj3F,EAAQtO,EAAE,kBAAoBA,EAAE,MACxFi4D,eAAe,EACfpiD,SAAU64B,EAAW7rC,KAAM0wB,QAC3B4kC,iBAAkBwvC,GAClBrvC,cAAe5pB,EAAW7rC,KAAMuqB,OAChCxU,GAAG,yBAGJgsF,GAA8B,OAAdpxE,IAAuB+xE,EACtC,qCACE,eAAC,KAAD,CAAS7kG,QAAQ,gBAAgB2f,MAAO,CAAE1f,QAAS,UAAnD,UACE,cAACo/F,GAAD,CAAcC,WAAW,EAAzB,SACE,cAAC,IAAD,CAAex/F,MAAM,WAEvB,cAAC,IAAD,CAAQqjD,QAAQ,OAAOjrC,GAAG,0BAA0BuC,QAAS,kBAAMg2B,GAAkB,OAArF,SACGnxC,EAAE,sBAGP,cAAC4/F,GAAD,CAAmBhnF,GAAG,YAAY7Y,MAAOyzB,EAAWw6B,SAAU7c,QAE9D,KAEHo0D,EAAW,KACV,eAAC,KAAD,CAAYtkG,IAAI,MAAMof,MAAO,CAAE1f,QAAS,UAAxC,UACGoV,QAAQzH,IACP,eAACjO,GAAA,EAAD,CAAYI,MAAM,SAAlB,UACE,cAAC4jG,GAAD,UAAQrkG,EAAE,WACV,cAAC4iG,GAAD,CACEp9B,MAAK,OAAEl3D,QAAF,IAAEA,OAAF,EAAEA,EAAOs3B,eACds7D,aAAcA,GACdC,gBAAiBA,QAItBj0E,IAAoB3W,KACnB,eAAClW,GAAA,EAAD,CAAYI,MAAM,SAAlB,UACE,cAAC4jG,GAAD,UAAQrkG,EAAE,wBACV,eAAC,KAAD,CAAMmjD,MAAI,EAACpoC,MAAM,UAAjB,UACGmS,EAAkB,IADrB,gBAQV,eAAC,IAAD,CAAK42B,GAAG,OAAR,UACG8jD,GACC,cAAC,IAAD,CAAQpnG,MAAM,OAAO0iE,UAAQ,EAACtV,GAAG,MAAjC,SACG5tD,EAAE,uBAEF+U,EAEDwwF,EACF,cAAC,IAAD,CAAQ/kG,MAAM,OAAO0iE,SAAUntD,QAAQuvF,GAAiBnqF,QAASkqF,EAAjE,gBACGC,QADH,IACGA,IACElB,IAAaF,GAASc,KAAO,OAASZ,IAAaF,GAASiB,OAAS,SAAW,OAEnFU,IAAWD,GACb,eAAC,KAAD,CAAUvlF,MAAO,CAAEgjC,UAAW,UAA9B,UACE,cAAC,KAAD,CAAMtoC,MAAM,aAAa6yC,GAAG,MAA5B,SACG5tD,EAAE,4CAEJ2nD,IACC,cAAC,KAAD,CAAM5sC,MAAM,aAAa6yC,GAAG,MAA5B,SACG5tD,EAAE,uCAIPsnG,GACF,eAACjnG,GAAA,EAAD,WACE,cAAC,IAAD,CACEwjD,QAAS72B,KAAa1B,KAAcU,SAAW,UAAY,UAC3D7Q,QAAS2qF,GACT5iC,SAAUl2C,KAAa1B,KAAca,cAAgB45E,GACrDvlG,MAAM,MAJR,SAMGwsB,KAAa1B,KAAcY,QAC1B,eAAC,KAAD,CAASjrB,IAAI,MAAMP,QAAQ,SAA3B,UACGV,EAAE,aADL,IACmB,cAAC6vD,GAAA,EAAD,CAAc6C,OAAO,aAEtCqzC,IAAqB/4E,KAAa1B,KAAcU,SAClDhsB,EAAE,YAEFA,EAAE,kBAAmB,CAAE+jD,MAAK,oBAAErV,EAAW7rC,KAAMuqB,cAAnB,aAAE,EAAyB3lB,cAA3B,QAAqC,OAGrE,cAAC,IAAD,CACEo8C,QAAS8jB,IAAW+5B,GAAsB,EAAI,SAAW,UACzDvmF,QAAS,WACHypF,EACFwC,MAEAzB,GAAa,CACXD,eAAgBp3F,EAChBq2C,eAAe,EACfq8C,sBAAkBljG,EAClB+pE,YAAQ/pE,IAEVgqG,OAGJtnG,MAAM,MACNoY,GAAG,cACHsqD,UACGyE,IAAW36C,KAAa1B,KAAcU,UAAa01E,GAAsB,IAAMkD,EAlBpF,SAsBM5kG,EADH0hG,GAAsB,IAAMkD,EACvB,oBACFlD,GAAsB,EACpB,cACA,aAIV,cAAC,IAAD,CACE79C,QAAS8jB,IAAW+5B,GAAsB,IAAMyF,GAAoB,SAAW,UAC/EhsF,QAAS,WACHypF,EACFwC,MAEAzB,GAAa,CACXD,eAAgBp3F,EAChBq2C,eAAe,EACfq8C,sBAAkBljG,EAClB+pE,YAAQ/pE,IAEVgqG,OAGJlvF,GAAG,cACHpY,MAAM,OACN0iE,UAAWyE,IAAY+5B,GAAsB,IAAMkD,KAAmBuC,GAjBxE,SAmBGtC,IACEnD,GAAsB,IAAMkD,EAA5B,wBAGG5kG,EADA0hG,GAAsB,EACpB,cACA,WAxFV,cAACrxD,GAAA,EAAD,IA2FDi3D,IACC,cAACtjG,GAAA,EAAD,CAAQqc,MAAO,CAAEiqD,UAAW,QAA5B,SACE,cAAC,GAAD,CAAek5B,MAAO,CAACx2E,KAAa1B,KAAcU,cAGrD44E,GAAgB5D,GAAmB,cAACP,GAAD,CAAmB7mF,MAAOonF,KAAuB,cAIzF4G,GAGA,cAACtlC,GAAA,EAAD,CAA2B5zB,WAAY,CAACA,EAAWthB,MAAOshB,EAAWnb,UAFrE,cAACmvE,GAAD,CAA6Bp0F,MAAOA,O,cErcrC,SAASy5F,KACd,OAAO,cAAC,KAAD,CAAU71D,GAAG,UAGtB,IAAM81D,GAAqB,oDACpB,SAASC,GAAqC7sF,GACnD,IAKMhc,EADFgc,EAHFhc,MACEggB,OAAU6mD,YAGY7mE,MAAM4oG,IAChC,cAAI5oG,QAAJ,IAAIA,OAAJ,EAAIA,EAAO0jB,QACF,cAAC,KAAD,CAAUovB,GAAE,eAAU9yC,EAAM,GAAhB,YAAsBA,EAAM,MAG1C,cAAC4mE,GAAA,QAAD,gBAAkB5qD,IAGpB,SAAS8sF,GAA0B9sF,GACxC,MAIIA,EAHFhc,MACEggB,OAAU6mD,EAFd,EAEcA,YAAaC,EAF3B,EAE2BA,YAG3B,OAAID,EAAYhnD,gBAAkBinD,EAAYjnD,cACrC,cAAC,KAAD,CAAUizB,GAAE,eAAU+zB,KAExB,cAACD,GAAA,QAAD,gBAAkB5qD,IC7B3B,IAAM4sF,GAAqB,4CAcZG,OAZf,YAI6C,IAF/B3mG,EAE8B,EAH1CpC,MACEggB,OAAU5d,OAGZ,IAAKwmG,GAAmBjlF,KAAKvhB,GAC3B,OAAO,cAAC,KAAD,CAAU0wC,GAAG,UAEtB,MAA+B1wC,EAAOmF,MAAM,KAA5C,mBAAOsZ,EAAP,KAAkBC,EAAlB,KAEA,OAAO,cAAC,KAAD,CAAUgyB,GAAE,kBAAajyB,EAAb,YAA0BC,MCXxC,SAASkoF,GAAT,GAAoE,IAAlCtqC,EAAiC,EAAjCA,SACvC,OAAO,cAAC,KAAD,CAAU5rB,GAAE,6BAAO4rB,GAAP,IAAiBlC,SAAU,YAIzC,SAASysC,GAAejtF,GAC7B,IACE0iD,EAKE1iD,EALF0iD,SACYpqB,EAIVt4B,EAJF0iD,SAAYpqB,OAEA3B,EAEV32B,EAHFhc,MACEggB,OAAU2yB,eAId,OACE,cAAC,KAAD,CACEG,GAAE,6BACG4rB,GADH,IAEAlC,SAAU,QACVloB,OACEA,GAAUA,EAAO5wB,OAAS,EAA1B,UACO4wB,EADP,2BACgC3B,GADhC,0BAEuBA,OCGjC,IAAMu2D,GAAOC,gBAAK,kBAAM,mCAClBC,GAAQD,gBAAK,kBAAM,mCACnBE,GAAcF,gBAAK,kBAAM,mCACzBG,GAAUH,gBAAK,kBAAM,mCACrBI,GAAOJ,gBAAK,kBAAM,mCAClBK,GAAWL,gBAAK,kBAAM,mCAEtBM,GAAQN,gBAAK,kBAAM,mCACnBO,GAAOP,gBAAK,kBAAM,mCAElBQ,GAAqBR,gBAAK,kBAAM,mCAChCS,GAAcT,gBAAK,kBAAM,yDACzBU,GAASV,gBAAK,kBAAM,mCACpBW,GAAWX,gBAAK,kBAAM,wDACtBY,GAAiBZ,gBAAK,kBAAM,wDAC5BviC,GAAeuiC,gBAAK,kBAAM,4CAC1Ba,GAAYb,gBAAK,kBAAM,mCACvBc,GAAad,gBAAK,kBAAM,mCACxBe,GAAkBf,gBAAK,kBAAM,mCAGnCnkG,KAAU6X,OAAO,CACf+c,eAAgB,IAChBC,eAAgB,KAGlB,IAAMkxC,GAAgB,WAMpB,OALA1qB,eACA+oC,KACAntB,eACA1vB,eAGE,eAAC,KAAD,CAAQw6B,QAASA,KAAjB,UACE,cAAC,KAAD,IACA,cAACojC,GAAD,IACA,cAAC,GAAD,UACE,cAAC,GAAD,CAAwBzf,SAAU,cAACzY,GAAA,EAAD,IAAlC,SACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAO3/B,KAAK,IAAI83D,OAAK,EAArB,SACE,cAAClB,GAAD,MAEF,cAAC,KAAD,CAAOkB,OAAK,EAAC93D,KAAK,iBAAlB,SACE,cAAC+2D,GAAD,MAEF,cAAC,KAAD,CAAO/2D,KAAK,SAAZ,SACE,cAAC82D,GAAD,MAEF,cAAC,KAAD,CAAO92D,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,WAAZ,SACE,cAACg3D,GAAD,MAEF,cAAC,KAAD,CAAOh3D,KAAK,OAAZ,SACE,cAACi3D,GAAD,MAKF,cAAC,KAAD,CAAOa,OAAK,EAAC93D,KAAK,SAAlB,SACE,cAACm3D,GAAD,MAEF,cAAC,KAAD,CAAOn3D,KAAK,aAAZ,SACE,cAACo3D,GAAD,MAKF,cAAC,KAAD,CAAOp3D,KAAK,eAAZ,SACE,cAACq3D,GAAD,MAEF,cAAC,KAAD,CAAOr3D,KAAK,cAAZ,SACE,cAACs3D,GAAD,MAEF,cAAC,KAAD,CAAOQ,OAAK,EAAC93D,KAAK,UAAlB,SACE,cAACu3D,GAAD,MAEF,cAAC,KAAD,CAAOO,OAAK,EAAC93D,KAAK,0BAAlB,SACE,cAACy3D,GAAD,MAEF,cAAC,KAAD,CAAOz3D,KAAK,uBAAZ,SACE,cAACw3D,GAAD,MAIF,cAAC,KAAD,CAAOM,OAAK,EAACC,QAAM,EAAC/3D,KAAK,QAAQg4D,UAAWpF,KAC5C,cAAC,KAAD,CAAOkF,OAAK,EAACC,QAAM,EAAC/3D,KAAK,wBAAwBg4D,UAAWrB,KAC5D,cAAC,KAAD,CAAOmB,OAAK,EAACC,QAAM,EAAC/3D,KAAK,QAAQg4D,UAAWtB,KAC5C,cAAC,KAAD,CAAOoB,OAAK,EAACC,QAAM,EAAC/3D,KAAK,QAAQg4D,UAAWL,KAC5C,cAAC,KAAD,CAAOG,OAAK,EAACC,QAAM,EAAC/3D,KAAK,aAAag4D,UAAWN,KACjD,cAAC,KAAD,CAAOI,OAAK,EAACC,QAAM,EAAC/3D,KAAK,UAAUg4D,UAAW3B,KAC9C,cAAC,KAAD,CAAOyB,OAAK,EAAC93D,KAAK,OAAOg4D,UAAW1jC,KACpC,cAAC,KAAD,CAAOwjC,OAAK,EAAC93D,KAAK,oBAAoBg4D,UAAWzB,KACjD,cAAC,KAAD,CAAOuB,OAAK,EAAC93D,KAAK,iCAAiCg4D,UAAWxB,KAC9D,cAAC,KAAD,CAAOsB,OAAK,EAAC93D,KAAK,UAAUg4D,UAAW1jC,KACvC,cAAC,KAAD,CAAOwjC,OAAK,EAAC93D,KAAK,uBAAuBg4D,UAAWzB,KACpD,cAAC,KAAD,CAAOuB,OAAK,EAAC93D,KAAK,oCAAoCg4D,UAAWxB,KACjE,cAAC,KAAD,CAAOsB,OAAK,EAACC,QAAM,EAAC/3D,KAAK,kBAAkBg4D,UAAWvB,KACtD,cAAC,KAAD,CAAOqB,OAAK,EAACC,QAAM,EAAC/3D,KAAK,oCAAoCg4D,UAAWJ,KAGxE,cAAC,KAAD,CAAO53D,KAAK,QAAZ,SACE,cAAC,KAAD,CAAUQ,GAAG,iBAEf,cAAC,KAAD,CAAOR,KAAK,WAAZ,SACE,cAAC,KAAD,CAAUQ,GAAG,aAEf,cAAC,KAAD,CAAOR,KAAK,SAAZ,SACE,cAAC,KAAD,CAAUQ,GAAG,aAEf,cAAC,KAAD,CAAOR,KAAK,OAAZ,SACE,cAAC,KAAD,CAAUQ,GAAG,oBAIf,cAAC,KAAD,CAAOw3D,UAAWd,YAKxB,cAAC,KAAD,IACA,cAACxmB,GAAA,EAAD,QAKS1rB,OAAM7uC,KAAKsiD,I,8BC/IpBw/B,GAAuB,SAACvuF,GAC5B,MAAiB0J,eAAVC,EAAP,oBACA,OAAO,cAAC,KAAD,cAAeyqB,MAAOzqB,EAAS6kF,KAAOC,MAAWzuF,KAuB3C0uF,GApBa,SAAC,GAAkB,IAAhB9rG,EAAe,EAAfA,SAC7B,OACE,cAAC,IAAD,CAAmBytD,WAAYA,KAA/B,SACE,cAAC,IAAD,CAAU90B,MAAOA,KAAjB,SACE,cAAC,KAAD,UACE,cAAC,KAAD,UACE,cAAC,GAAD,UACE,cAAC,KAAD,UACE,cAACqrB,GAAA,EAAD,UACE,cAAC,KAAD,UAAgBhkD,mBChBlC,SAAS+rG,KACP,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAKN,SAASC,GAAT,GAA2D,IAAtChsG,EAAqC,EAArCA,SACX+W,EAAY1R,cAAZ0R,QAER,OADyB0C,mBAAQ,kBAAM1B,QAAQhB,IAAmD,IAAxCuC,IAAkBkR,QAAQzT,MAAkB,CAACA,IAE9F,kDAEF,mCAAG/W,IAGZisG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,GAAD,UACE,eAAC,GAAD,WACE,cAACD,GAAD,IACA,cAAC,GAAD,WAINloC,SAASuoC,eAAe,W","file":"static/js/main.8269cf74.chunk.js","sourcesContent":["import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@siacashcoin/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import styled from 'styled-components'\nimport { Box } from '@siacashcoin/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","export default {\n  masterChef: {\n    97: '0x1080450b1e26Df071c613d916055b23e8FCc6Fca',\n    56: '0x1080450b1e26Df071c613d916055b23e8FCc6Fca',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0x2d7F07FC2531506317D15c51eF00a7DCA23E1a10',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import { useEffect, useState, useRef } from 'react'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? ChainId.MAINNET, ...web3React }\n}\n\nexport default useActiveWeb3React\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const SCC: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xc26EaFC627624baDf990f8d30116892eD204DB51',\n    18,\n    'SCC',\n    'SiaCashCoin Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xc26EaFC627624baDf990f8d30116892eD204DB51',\n    18,\n    'SCC',\n    'SiaCashCoin Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  shib: {\n    symbol: 'SHIB',\n    address: {\n      56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shibatoken.com/',\n  },\n  cake: {\n    symbol: 'SCC',\n    address: {\n      56: '0xc26EaFC627624baDf990f8d30116892eD204DB51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://siacashcoin.com/',\n  },\nfork: {\n  symbol: 'CAKE',\n  address: {\n    56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    97: '',\n  },\n  decimals: 18,\n  projectLink: 'https://pancakeswap.finance/',\n},\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  high: {\n    symbol: 'HIGH',\n    address: {\n      56: '0x5f4Bde007Dc06b867f86EBFE4802e34A1fFEEd63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.highstreet.market/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://siacashcoin.com/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x35C48Cc779337f5BE737cD73750137981480eF23',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://siacashcoin.com',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n}\n\nexport default tokens\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, SCC, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], SCC[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], SCC[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], SCC[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], SCC[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], SCC[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [SCC[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ChainId } from '@pancakeswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@siacashcoin/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport { ChainLinkOracleContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANSCC = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme as toggleThemeAction,\n} from '../actions'\nimport { serializeToken, deserializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useWeb3React } from '@web3-react/core'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// SCC_PER_BLOCK details\n\nexport const SCC_PER_BLOCK = new BigNumber(200)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const SCC_PER_YEAR = SCC_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://siacashcoin.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const DEFAULT_GAS_PRICE = 5\n","\nconst COINGECKO = 'https://tokens.pancakeswap.finance/coingecko.json'\nconst CMC = 'https://tokens.pancakeswap.finance/cmc.json'\n\n// List of official tokens list\n\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  CMC,\n  COINGECKO,\n ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@siacashcoin/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 1 = SCC-BNB LP\n * 8 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1, 8]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(8)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x1080450b1e26Df071c613d916055b23e8FCc6Fca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 1,\n    stakingToken: tokens.cake,\n    earningToken: tokens.shib,\n    contractAddress: {\n      97: '',\n      56: '0xa8567fa6A62bbB63DD512ECfF91df86249FE7090',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 2,\n    tokenPerBlock: '10',\n  },\n  \n\n\n ]\n\n export default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import styled from 'styled-components'\nimport { Box } from '@siacashcoin/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import { Language } from '@siacashcoin/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import React from 'react'\nimport { Button, useWalletModal } from '@siacashcoin/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useWeb3React } from '@web3-react/core'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = 'Connect Wallet'\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? 'Enter an amount'\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? 'Select a token'\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? 'Enter a recipient'\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? 'Invalid recipient'\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = `Insufficient ${amountIn.currency.symbol} balance`\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 8)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@siacashcoin/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 1, 8 ) should always be at the top of the file we use them for price strings.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'SCC',\n    lpAddresses: {\n      97: '',\n      56: '0xc26EaFC627624baDf990f8d30116892eD204DB51',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'SCC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41496D9e7F1364dab33433d28962745FAaF6a577',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'SCC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf04bc5e9EB85374DDa27DD06FEbD1fe2e0CBdB16',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.busd,\n  },\n  /* Add new farms below this line */\n  {\n    pid: 8,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'ETH-SCC LP',\n    lpAddresses: {\n      97: '',\n      56: '0x31c4f338FA35E8792C285b9FD2ccaC912F06b0D8',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.cake,\n  }, \n  {\n    pid: 5,\n    lpSymbol: 'SCC-SHIB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfe7be78a50a514b4390316a8e49d7574ba68ef64',\n    },\n    token: tokens.shib,\n    quoteToken: tokens.cake,\n  }, \n  {\n    pid: 6,\n    lpSymbol: 'DOGE-SCC LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2758e0C3d24E07Bf851fD04397243C3691ec2C38',\n    },\n    token: tokens.doge,\n    quoteToken: tokens.cake,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'DOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xac109C8025F272414fd9e2faA805a583708A017f',\n    },\n    token: tokens.doge,\n    quoteToken: tokens.wbnb,\n  },\n  \n  \n ]\n\n export default farms\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANSCC]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANSCC,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANSCC,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANSCC,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANSCC,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANSCC,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANSCC,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANSCC,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANSCC,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANSCC,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANSCC,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master SCC chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANSCC,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of SCC.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANSCC,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's SCC)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANSCC,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANSCC,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANSCC,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANSCC,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANSCC,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANSCC,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { useSelector } from 'react-redux'\nimport { useWeb3React } from '@web3-react/core'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@siacashcoin/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { ethers, Contract } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@siacashcoin/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Grid } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport QuestionHelper from '../../QuestionHelper'\nimport { AutoColumn } from '../../Layout/Column'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface SlippageTabsProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  deadline: number\n  setDeadline: (deadline: number) => void\n}\n\nexport default function SlippageTabs({ rawSlippage, setRawSlippage, deadline, setDeadline }: SlippageTabsProps) {\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (rawSlippage / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && rawSlippage < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && rawSlippage > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  function parseCustomSlippage(value: string) {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setRawSlippage(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  function parseCustomDeadline(value: string) {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Flex flexWrap={['wrap', 'wrap', 'nowrap']}>\n          <Grid gridTemplateColumns=\"1fr 1fr 1fr\" gridGap=\"8px\" mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(10)\n              }}\n              variant={rawSlippage === 10 ? 'primary' : 'tertiary'}\n            >\n              0.1%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(50)\n              }}\n              variant={rawSlippage === 50 ? 'primary' : 'tertiary'}\n            >\n              0.5%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(100)\n              }}\n              variant={rawSlippage === 100 ? 'primary' : 'tertiary'}\n            >\n              1%\n            </Button>\n          </Grid>\n          <RowBetween>\n            <Input\n              scale=\"lg\"\n              placeholder={(rawSlippage / 100).toFixed(2)}\n              value={slippageInput}\n              onBlur={() => {\n                parseCustomSlippage((rawSlippage / 100).toFixed(2))\n              }}\n              onChange={(e) => parseCustomSlippage(e.target.value)}\n              isWarning={!slippageInputIsValid}\n              isSuccess={![10, 50, 100].includes(rawSlippage)}\n            />\n            <Text color=\"primary\" bold ml=\"8px\">\n              %\n            </Text>\n          </RowBetween>\n        </Flex>\n        {!!slippageError && (\n          <RowBetween\n            style={{\n              fontSize: '14px',\n              paddingTop: '7px',\n              color: slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E',\n            }}\n          >\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </RowBetween>\n        )}\n      </AutoColumn>\n\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">Transaction deadline</Text>\n          <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} ml=\"4px\" />\n        </RowFixed>\n        <RowFixed>\n          <Input\n            color={deadlineError ? 'red' : undefined}\n            onBlur={() => {\n              parseCustomDeadline((deadline / 60).toString())\n            }}\n            placeholder={(deadline / 60).toString()}\n            value={deadlineInput}\n            onChange={(e) => parseCustomDeadline(e.target.value)}\n          />\n          <Text pl=\"8px\" fontSize=\"14px\">\n            {t('minutes')}\n          </Text>\n        </RowFixed>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@siacashcoin/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport { AutoColumn } from '../../Layout/Column'\nimport QuestionHelper from '../../QuestionHelper'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\nimport TransactionSettings from './TransactionSettings'\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <Modal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <ModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal title=\"Settings\" headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      <ModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <Text bold fontSize=\"20px\">\n            {t('Transaction Settings')}\n          </Text>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            deadline={ttl}\n            setDeadline={setTtl}\n          />\n          <Text bold fontSize=\"20px\" mt=\"32px\">\n            {t('Interface Settings')}\n          </Text>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\n              <QuestionHelper\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n                ml=\"4px\"\n              />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-expert-mode-button\"\n              checked={expertMode}\n              onChange={\n                expertMode\n                  ? () => {\n                      onChangeRecipient(null)\n                      toggleExpertMode()\n                    }\n                  : () => setShowConfirmExpertModal(true)\n              }\n            />\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-disable-multihop-button\"\n              checked={singleHopOnly}\n              onChange={() => {\n                setSingleHopOnly(!singleHopOnly)\n              }}\n            />\n          </RowBetween>\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Audio')}</Text>\n              <QuestionHelper text={t('🐰 Turn down your volume a bit before you swap')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} />\n          </Flex>\n        </AutoColumn>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Button, TuneIcon, NotificationDot, useModal } from '@siacashcoin/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport SettingsModal from './SettingsModal'\n\nexport default function SettingsTab() {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <NotificationDot show={expertMode}>\n      <Button variant=\"text\" p={0} onClick={onPresentSettingsModal} id=\"open-settings-dialog-button\">\n        <TuneIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </NotificationDot>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@siacashcoin/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@siacashcoin/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon } from '@siacashcoin/uikit'\nimport { Link } from 'react-router-dom'\nimport Settings from './Settings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex>\n          <Settings />\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@siacashcoin/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@siacashcoin/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useWeb3React } from '@web3-react/core'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@siacashcoin/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@siacashcoin/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@siacashcoin/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto SCC Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  // {\n  //   id: 1,\n  //   name: 'Syrup Storm',\n  //   description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n  //   images: {\n  //     lg: 'syrup-storm-lg.png',\n  //     md: 'syrup-storm-md.png',\n  //     sm: 'syrup-storm-sm.png',\n  //     alt: 'syrup-storm-alt.png',\n  //     ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n  //   },\n  //   background: 'syrup-storm-bg.svg',\n  //   textColor: '#191326',\n  //   users: 0,\n  //   points: 0,\n  // },\n  // {\n  //   id: 2,\n  //   name: 'Fearsome Flippers',\n  //   description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n  //   images: {\n  //     lg: 'fearsome-flippers-lg.png',\n  //     md: 'fearsome-flippers-md.png',\n  //     sm: 'fearsome-flippers-sm.png',\n  //     alt: 'fearsome-flippers-alt.png',\n  //     ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n  //   },\n  //   background: 'fearsome-flippers-bg.svg',\n  //   textColor: '#FFFFFF',\n  //   users: 0,\n  //   points: 0,\n  // },\n  // {\n  //   id: 3,\n  //   name: 'Chaotic Cakers',\n  //   description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n  //   images: {\n  //     lg: 'chaotic-cakers-lg.png',\n  //     md: 'chaotic-cakers-md.png',\n  //     sm: 'chaotic-cakers-sm.png',\n  //     alt: 'chaotic-cakers-alt.png',\n  //     ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n  //   },\n  //   background: 'chaotic-cakers-bg.svg',\n  //   textColor: '#191326',\n  //   users: 0,\n  //   points: 0,\n  // },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport { useWeb3React } from '@web3-react/core'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@siacashcoin/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'SiaCashCoin',\n  description:\n    'Join SCC And Stake Tokens An Open Source Project On The BSC Network Visit Our Github Page To Contribute!',\n  image: 'https://pancakeswap.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('SiaCashCoin')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('SiaCashCoin')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('SiaCashCoin')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('SiaCashCoin')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('SiaCashCoin')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('SiaCashCoin')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('SiaCashCoin')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('SiaCashCoin')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('SiaCashCoin')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('SiaCashCoin')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('SiaCashCoin')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@siacashcoin/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from '@siacashcoin/uikit'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: row;\n  }\n`\n\nconst BubbleWrapper = styled(Flex)`\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n  &:hover {\n    svg {\n      opacity: 0.65;\n    }\n  }\n  &:active {\n    svg {\n      opacity: 0.85;\n    }\n  }\n`\n\nconst Footer = () => {\n  return (\n    <Wrapper>\n      {/* <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\n        <ButtonMenu variant=\"subtle\" scale=\"sm\" activeIndex={0}>\n          <ButtonMenuItem>V2</ButtonMenuItem>\n          <ButtonMenuItem as=\"a\" href=\"https://v1exchange.pancakeswap.finance/#/\">\n            V1 (old)\n          </ButtonMenuItem>\n        </ButtonMenu>\n        <LinkExternal\n          href=\"https://www.binance.org/en/bridge?utm_source=PancakeSwap\"\n          ml={[0, 0, '40px']}\n          mt={['20px', '20px', 0]}\n          mb={['8px', '8px', 0]}\n        >\n          Convert ERC-20 to BEP-20\n        </LinkExternal>\n      </Flex> */}\n      <Flex\n        flexGrow={1}\n        alignItems=\"center\"\n        width={['100%', '100%', '100%', 'auto']}\n        justifyContent={['center', 'center', 'center', 'flex-end']}\n      >\n        <BubbleWrapper>\n          <Button\n            id=\"clickExchangeHelp\"\n            as=\"a\"\n            external\n            href=\"https://t.me/SiaCashCoinChat\"\n            variant=\"subtle\"\n          >\n            Need help ?\n          </Button>\n          {/* <Svg viewBox=\"0 0 16 16\">\n            <path d=\"M0 16V0C0 0 3 1 6 1C9 1 16 -2 16 3.5C16 10.5 7.5 16 0 16Z\" />\n          </Svg> */}\n        </BubbleWrapper>\n        {/* <Image src=\"/images/scc.png\" alt=\"Ask For Help\" width={160} height={108} /> */}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@siacashcoin/uikit'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          Swap\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          Liquidity\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@siacashcoin/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n      <Footer />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'SCC',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@siacashcoin/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@siacashcoin/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@siacashcoin/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useWeb3React } from '@web3-react/core'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@siacashcoin/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport UnlockButton from '../../components/UnlockButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <UnlockButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Approving %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Approve %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Approving %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Approve %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? 'Supply'}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more reliable\n  const mergedResponse = graphResponse.map((graphRound, index) => {\n    const nodeRound = nodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          finalNumber: nodeRound.finalNumber.toString(),\n          startTime: nodeRound.startTime,\n          status: nodeRound.status,\n          id: graphRound.id,\n          ticketPrice: graphRound.ticketPrice,\n          totalTickets: graphRound.totalTickets,\n          totalUsers: graphRound.totalUsers,\n          winningTickets: graphRound.winningTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteries = async (): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries {\n          lotteries(first: 100, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@siacashcoin/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@siacashcoin/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, SCC_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = SCC_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@siacashcoin/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@siacashcoin/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@siacashcoin/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@siacashcoin/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@siacashcoin/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@siacashcoin/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@siacashcoin/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@siacashcoin/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@siacashcoin/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@siacashcoin/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@siacashcoin/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@siacashcoin/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useWeb3React } from '@web3-react/core'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { chainId } = useWeb3React()\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useWeb3React } from '@web3-react/core'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@siacashcoin/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const { chainId } = useWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@siacashcoin/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@siacashcoin/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@siacashcoin/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@siacashcoin/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },      \n    ],\n  },\n  {\n    label: t('Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: 'Bulk Send Dapp',\n    icon: 'MoreIcon',\n    href: 'https://bulksend.siacashcoin.com',\n  },\n  {\n    label: 'LaunchPad',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'Create Token ',\n        href: 'https://createtoken.siacashcoin.com/',\n      },\n      {\n        label: 'Safemoon Fork',\n        href: 'https://createsafemoon.siacashcoin.com',\n      },\n    ],\n  },\n  {\n    label: 'Win Tokens',\n    icon: 'TicketIcon',\n    items: [\n      {\n        label: 'Prediction',\n        href: 'https://dogebets.siacashcoin.com/',\n      },\n      {\n        label: 'CoinFlip',\n        href: 'href:https://tokenpvp.com/tokens/0xc26EaFC627624baDf990f8d30116892eD204DB51',\n      },\n    ],\n  },\n  // {\n  //   label: t('Prediction (BETA)'),\n  //   icon: 'PredictionsIcon',\n  //   href: '/prediction',\n  // },\n  // {\n  //   label: t('Lottery'),\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  //   status: {\n  //     text: t('Win').toLocaleUpperCase(),\n  //     color: 'success',\n  //   },\n  // },\n  // {\n  //   label: t('Collectibles'),\n  //   icon: 'NftIcon',\n  //   href: '/collectibles',\n  // },\n  // {\n  //   label: t('Team Battle'),\n  //   icon: 'TeamBattleIcon',\n  //   href: '/competition',\n  // },\n  // {\n  //   label: t('Teams & Profile'),\n  //   icon: 'GroupsIcon',\n  //   items: [\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       label: t('Task Center'),\n  //       href: '/profile/tasks',\n  //     },\n  //     {\n  //       label: t('Your Profile'),\n  //       href: '/profile',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Info'),\n  //   icon: 'InfoIcon',\n  //   href: 'https://pancakeswap.info',\n  // },\n  // {\n  //   label: t('IFO'),\n  //   icon: 'IfoIcon',\n  //   href: '/ifo',\n  // },\n  // {\n  //   label: t('More'),\n  //   icon: 'MoreIcon',\n  //   items: [\n  //     {\n  //       label: t('Contact'),\n  //       href: 'https://docs.pancakeswap.finance/contact-us',\n  //     },\n  //     {\n  //       label: t('Voting'),\n  //       href: '/voting',\n  //     },\n  //     {\n  //       label: t('Github'),\n  //       href: 'https://github.com/pancakeswap',\n  //     },\n  //     {\n  //       label: t('Docs'),\n  //       href: 'https://docs.pancakeswap.finance',\n  //     },\n  //     {\n  //       label: t('Blog'),\n  //       href: 'https://pancakeswap.medium.com',\n  //     },\n  //     {\n  //       label: t('Merch'),\n  //       href: 'https://pancakeswap.creator-spring.com/',\n  //     },\n  //   ],\n  // },\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@siacashcoin/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      // profile={{\n      //   username: profile?.username,\n      //   image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n      //   profileLink: '/profile',\n      //   noProfileLink: '/profile',\n      //   showPip: !profile?.username,\n      // }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s SCC is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@siacashcoin/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled(Box)`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@siacashcoin/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@siacashcoin/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@siacashcoin/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.cake.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@siacashcoin/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'SCC' && stakingToken.symbol === 'SCC'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn SCC, stake SCC')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve SCC auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'SCC' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@siacashcoin/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@siacashcoin/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@siacashcoin/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake SCC into pool.')}</Text>\n      <Text>{t('Harvest: collect SCC and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@siacashcoin/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@siacashcoin/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningToken={earningToken}\n          stakingToken={stakingToken}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <CardBody>\n          <AprRow pool={pool} />\n          <Flex mt=\"24px\" flexDirection=\"column\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </CardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@siacashcoin/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new SCC in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new SCC in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 SCC or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@siacashcoin/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@siacashcoin/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" SCC\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@siacashcoin/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent SCC profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasSharesStaked}\n          isAutoVault\n          earningToken={tokens.cake}\n          stakingToken={tokens.cake}\n        />\n        <StyledCardBody isLoading={isLoading}>\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n          <Box mt=\"24px\">\n            <RecentCakeProfitRow />\n          </Box>\n          <Box mt=\"8px\">\n            <UnstakingFeeCountdownRow />\n          </Box>\n          <Flex mt=\"32px\" flexDirection=\"column\">\n            {account ? (\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </StyledCardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  Toggle,\n  Text,\n  Flex,\n  NotificationDot,\n  useMatchBreakpoints,\n} from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n      <ButtonMenuItem as={Link} to={`${url}`}>\n        {t('Live')}\n      </ButtonMenuItem>\n      <NotificationDot show={hasStakeInFinishedPools}>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {t('Finished')}\n        </ButtonMenuItem>\n      </NotificationDot>\n    </ButtonMenu>\n  )\n\n  const stakedOnlySwitch = (\n    <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\n      <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\n    </Flex>\n  )\n\n  if (isXs || isSm) {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" mb=\"24px\">\n        <Flex width=\"100%\" justifyContent=\"space-between\">\n          {viewModeToggle}\n          {liveOrFinishedSwitch}\n        </Flex>\n        {stakedOnlySwitch}\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent={['space-around', 'space-around', 'flex-start']}\n      mb={['24px', '24px', '24px', '0px']}\n    >\n      {viewModeToggle}\n      {liveOrFinishedSwitch}\n      {stakedOnlySwitch}\n    </Flex>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@siacashcoin/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('SCC bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" SCC\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" SCC\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <UnlockButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto SCC Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto SCC pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto SCC Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@siacashcoin/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n\n  if (isAutoVault) {\n    title = t('Auto SCC')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual SCC')\n    subtitle = `${t('Earn')} SCC ${t('Stake').toLocaleLowerCase()} SCC`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@siacashcoin/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto SCC vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto SCC vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent SCC profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" SCC\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@siacashcoin/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@siacashcoin/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@siacashcoin/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@siacashcoin/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@siacashcoin/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto SCC vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto SCC vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent SCC profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@siacashcoin/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@siacashcoin/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} SCC ${t('Stake').toLocaleLowerCase()} SCC`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@siacashcoin/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@siacashcoin/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\n  flex-direction: column;\n  margin-bottom: 24px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst SearchSortContainer = styled(Flex)`\n  gap: 10px;\n  justify-content: space-between;\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"black\" mb=\"24px\">\n              {t('SCC Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"black\">\n              {t('Stake SCC to earn new tokens')}\n            </Heading>\n            <Heading scale=\"md\" color=\"black\">\n              {t('Rewards are calculated per block.')}\n            </Heading>            \n            \n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls justifyContent=\"space-between\">\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <SearchSortContainer>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </Flex>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <ControlStretch>\n                <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n              </ControlStretch>\n            </Flex>\n          </SearchSortContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/scc.png\"\n          // alt=\"Pancake illustration\"\n          width={375}\n          height={150}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@siacashcoin/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@siacashcoin/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                  <Text>- 0.05% towards SCC buyback and burn</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@siacashcoin/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@siacashcoin/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@siacashcoin/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@siacashcoin/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n                <Text>- 0.05% towards SCC buyback and burn</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@siacashcoin/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@siacashcoin/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst TokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default TokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@siacashcoin/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport TokenWarningModal from './components/TokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport UnlockButton from '../../components/UnlockButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentTokenWarningModal] = useModal(\n    <TokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <UnlockButton />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Approving')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Approved')\n                  ) : (\n                    t('Approve %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@siacashcoin/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            {/* <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route> */}\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            {/* <Route path=\"/profile\">\n              <Profile />\n            </Route> */}\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      {/* <EasterEgg iterations={2} /> */}\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@siacashcoin/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}